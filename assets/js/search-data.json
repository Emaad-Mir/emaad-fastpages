{
  
    
        "post0": {
            "title": "Correcting Errors Challenge (Burger, Fries, and Drink)",
            "content": "Overview . As we were learning about APIs, we worked with a site called Rapid API, which allows us to store and receive important data. For this week&#39;s hacks, we had to choose an API of our own and try to figure out how to print it out in a coherent, organized format. I chose the Reddit API, and below is the code for it along with its output: . import requests url = &quot;https://reddit34.p.rapidapi.com/getPopularPosts&quot; querystring = {&quot;sort&quot;:&quot;new&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;fe79b3687bmshe4d5f96190e00c5p14dc84jsnde81577c9e6c&quot;, &quot;X-RapidAPI-Host&quot;: &quot;reddit34.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) # print(response.text) json = response.json() for post in json[&quot;data&quot;][&quot;posts&quot;]: print(f&#39;{post[&quot;title&quot;]} by {post[&quot;author&quot;]} {post[&quot;permalink&quot;]}&#39;) . I&#39;m comfortable, isn&#39;t it obvious? by THE-AlienOrifice https://www.reddit.com/r/TheCatTrapIsWorking/comments/xzz08g/im_comfortable_isnt_it_obvious/ Question by NectarineExact https://www.reddit.com/r/revancedapp/comments/xzz08e/question/ Severe COVID-19 induces autoantibodies against angiotensin II that correlate with blood pressure dysregulation and disease severity by ProgramticWhiskerDoc https://www.reddit.com/r/longhaulresearch/comments/xzz08b/severe_covid19_induces_autoantibodies_against/ [oc] [art] I used Stable Diffusion to try and generate my friend&#39;s D&amp;D character, Chuck, from our campaign. by Yellowninja007 https://www.reddit.com/r/DnD/comments/xzz087/oc_art_i_used_stable_diffusion_to_try_and/ Blast off üöÄ and conquer the universe ü™êüí´ in Star Trek Fleet Command! by StarTrekFleetCommand https://www.reddit.com/user/StarTrekFleetCommand/comments/xrnqi0/blast_off_and_conquer_the_universe_in_star_trek/ never been to a jets game before and the only photo my buddies and i took has a giant sun glare any way to remove it? by dustball987 https://www.reddit.com/r/PhotoshopRequest/comments/xzz085/never_been_to_a_jets_game_before_and_the_only/ Suffering defeats... after defeats... and more defeats. by MikuKohinata https://www.reddit.com/r/PunishingGrayRaven/comments/xzz086/suffering_defeats_after_defeats_and_more_defeats/ Icons missing from Firefox Mobile browser by SoakedSeahorse https://www.reddit.com/r/ADSBexchange/comments/xzz083/icons_missing_from_firefox_mobile_browser/ Das Ball-of by jakomania1 https://www.reddit.com/r/rvnxmango/comments/xzz07x/das_ballof/ Option to default to desktop mode in brave browser for iphone? by davidlee93 https://www.reddit.com/r/brave_browser/comments/xzz07w/option_to_default_to_desktop_mode_in_brave/ After hurricane Ian, wife and I got drunk and took advantage of the stars being out without all of the light pollution. by SpaghettiYeti20 https://www.reddit.com/r/SkyPorn/comments/xzz07o/after_hurricane_ian_wife_and_i_got_drunk_and_took/ overview for DazzlingKitchea by BotDefense https://www.reddit.com/r/BotDefense/comments/xzz07l/overview_for_dazzlingkitchea/ 27 and wanting to start a career, thinking of starting with phlebotomy, ekg tech, or pharm tech ? by Pinksupremesz https://www.reddit.com/r/careerguidance/comments/xzz07h/27_and_wanting_to_start_a_career_thinking_of/ DeFi is risky with lots of hacks and exploits. That are mostly irreversible. So far in 2022 a total of $2.32 billion has been swindled. But Radix does DeFi differently and security is one of the biggest factors. Interested in finding out more? by Radix_DLT https://www.reddit.com/user/Radix_DLT/comments/xx6rnl/defi_is_risky_with_lots_of_hacks_and_exploits/ Is there a UD Roadmap for 2022-2023? What&#39;s the plan? by WEEDB0T https://www.reddit.com/r/unstoppabledomains/comments/xzz07g/is_there_a_ud_roadmap_for_20222023_whats_the_plan/ This came to me during a nightmare (AI generated image) by NotMrZ https://www.reddit.com/r/thomastheplankengine/comments/xzz07e/this_came_to_me_during_a_nightmare_ai_generated/ HELP! WIFI KEEPS DISCONNECTING! by kaladen96 https://www.reddit.com/r/SteamDeck/comments/xzz07d/help_wifi_keeps_disconnecting/ Charli D&#39;amelio Vs Addison Rae TikTok Dances Compilation by 00000ju https://www.reddit.com/r/Q79a/comments/xzz074/charli_damelio_vs_addison_rae_tiktok_dances/ Official: [WDIS QB] - Sun Evening, 10/09/2022 by FFBot https://www.reddit.com/r/fantasyfootball/comments/xzz070/official_wdis_qb_sun_evening_10092022/ hm by Admirable_Sun_8774 https://www.reddit.com/r/shitposting/comments/xzz06y/hm/ Republican Sickos. by jhrogoff https://www.reddit.com/r/Republican_misdeeds/comments/xzz06r/republican_sickos/ Republican Sickos. by Thick-Guess-2594 https://www.reddit.com/r/Trumpvirus/comments/o1vs9x/republican_sickos/ advice on growing outer glutes by gxnxssa https://www.reddit.com/r/PetiteFitness/comments/xzz06s/advice_on_growing_outer_glutes/ „Äá„Äá„Éù„ÅÆÊó•Ôºà10Êúà10Êó• Ë®òÂøµÊó•Ôºâ | ‰ªäÊó•„ÅØ‰Ωï„ÅÆÊó• by momotaneko https://www.reddit.com/r/newsokunomoral/comments/xzz06k/„Äá„Äá„Éù„ÅÆÊó•10Êúà10Êó•_Ë®òÂøµÊó•_‰ªäÊó•„ÅØ‰Ωï„ÅÆÊó•/ Good guy doll remodel by Weirdanimator1234 https://www.reddit.com/r/Chucky/comments/xzz06g/good_guy_doll_remodel/ If you had a writing tool, (Pen, Pencil, etc.) what would you write down? by Maddeleine_Is_Here https://www.reddit.com/r/BattleForDreamIsland/comments/xzz06e/if_you_had_a_writing_tool_pen_pencil_etc_what/ Save with Public Mobile referral code: 39X8ZN - The code never expires! Details at publicmobile.ca by WeTheNorth20 https://www.reddit.com/r/ReferralAffiliateCode/comments/xzz06a/save_with_public_mobile_referral_code_39x8zn_the/ egg_irl by Beneficial_Return https://www.reddit.com/r/egg_irl/comments/xzz065/egg_irl/ . What&#39;s Going On Here? . Essentially, I let the computer know that it was supposed to print out data in the format of &quot;title&quot;, by author, permalink. If you noticed, I commented out a line called &quot;print(response.text)&quot;. If I did not comment or remove that line, the output would look like this: . import requests url = &quot;https://reddit34.p.rapidapi.com/getPopularPosts&quot; querystring = {&quot;sort&quot;:&quot;new&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;fe79b3687bmshe4d5f96190e00c5p14dc84jsnde81577c9e6c&quot;, &quot;X-RapidAPI-Host&quot;: &quot;reddit34.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) json = response.json() for post in json[&quot;data&quot;][&quot;posts&quot;]: print(f&#39;{post[&quot;title&quot;]} by {post[&quot;author&quot;]} {post[&quot;permalink&quot;]}&#39;) . {&#34;success&#34;: true, &#34;data&#34;: {&#34;cursor&#34;: &#34;t3_xzz2hc&#34;, &#34;posts&#34;: [{&#34;id&#34;: &#34;t3_xzz2jx&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356818000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/6EyBXNHnpahJKJAZ5OPgPBijP1aQN7m5rp6QX60eaEk.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 105}, &#34;title&#34;: &#34;PRODUCED THIS TRAILER FOR MY UPCOMING ALBUM&#34;, &#34;author&#34;: &#34;ProducerJakeJames&#34;, &#34;authorId&#34;: &#34;t2_1robjhm5&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;youtu.be&#34;, &#34;postId&#34;: &#34;t3_xzz2jx&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2si27&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [{&#34;richtext&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;DISCUSSION&#34;}], &#34;type&#34;: &#34;richtext&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;#0dd3bb&#34;, &#34;templateId&#34;: &#34;fb24d3e6-d121-11ea-a2cd-0e55bec834e5&#34;}, {&#34;text&#34;: &#34;DISCUSSION&#34;, &#34;type&#34;: &#34;text&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;#0dd3bb&#34;, &#34;templateId&#34;: &#34;fb24d3e6-d121-11ea-a2cd-0e55bec834e5&#34;}], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/MusicPromotion/comments/xzz2jx/produced_this_trailer_for_my_upcoming_album/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://www.redditmedia.com/mediaembed/xzz2jx&#34;, &#34;type&#34;: &#34;embed&#34;, &#34;width&#34;: 356, &#34;height&#34;: 200, &#34;provider&#34;: &#34;YouTube&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/Lx6pKy0LApaL5GhOgMJU4YXG5fjWN93OFEAjgiQe27g.jpg?auto=webp&amp;s=02ee965a927c5cbc479b440d918280b73fc2b539&#34;, &#34;width&#34;: 480, &#34;height&#34;: 360}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0d354f1b92754c625.wss.redditmedia.com/link/xzz2jx?m=AQAAnKVEY-w-fduUZwuJcVobfQBPar06bPSisHL8URnSBLKn3YF8&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;youtu.be&#34;, &#34;url&#34;: &#34;https://youtu.be/dpeUL8RQDFM&#34;, &#34;outboundUrl&#34;: &#34;https://out.reddit.com/t3_xzz2jx?url=https%3A%2F%2Fyoutu.be%2FdpeUL8RQDFM&amp;token=AQAALGJDYzOarRaEP-NMoAgMHF2GAzglLS0nczb-3dXdjOg82Pm1&amp;app_name=web2x&#34;, &#34;outboundUrlExpiration&#34;: 1665360428000, &#34;outboundUrlCreated&#34;: 1665356828000}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xrnq8w&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1664498497000, &#34;score&#34;: 4, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: true, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/dL62YN_Megid5cP2JZdQK-VxeQ-DufznqoXvQ4fM8XE.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 78}, &#34;title&#34;: &#34; ud83d ude80 ud83d udcabBoldy go where no one has gone before, follow the footsteps of your favorite Star Fleet captains! ud83d ude80 ud83d udcab&#34;, &#34;author&#34;: &#34;StarTrekFleetCommand&#34;, &#34;authorId&#34;: &#34;t2_l4usfn9f&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;startrekfleetcommand.com&#34;, &#34;postId&#34;: &#34;t3_xrnq8w&#34;, &#34;upvoteRatio&#34;: 0.63, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: &#34;qa&#34;, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_624orb&#34;, &#34;type&#34;: &#34;profile&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: true, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/user/StarTrekFleetCommand/comments/xrnq8w/boldy_go_where_no_one_has_gone_before_follow_the/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: &#34;Download&#34;, &#34;domainOverride&#34;: &#34;startrekfleetcommand.com&#34;, &#34;impressionId&#34;: 4134719962977682388, &#34;isSurveyAd&#34;: false, &#34;impressionIdStr&#34;: &#34;4134719962977682388&#34;, &#34;isCreatedFromAdsUi&#34;: true, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;, &#34;hlsUrl&#34;: &#34;https://v.redd.it/ngqg23w27wq91/HLSPlaylist.m3u8?a=1667948828%2CMzFmMGVlMGIyMzY3YTRkYjkzNTQ3MDE4ZjAzMDJkNmQ4OTEwNWRmODA5NTQ1NGQ4OTAwNjNmYWE0ZjA3MjNhYQ%3D%3D&amp;v=1&amp;f=sd&#34;, &#34;dashUrl&#34;: &#34;https://v.redd.it/ngqg23w27wq91/DASHPlaylist.mpd?a=1667948828%2CYmEyM2VhZjMwMWE0MjExZmM0M2YyMDUxZjgwODJhMmNlOGY2ZWZmNDQ5MTFhNDIxMjM3M2FkZDg4NDg4OGM2NQ%3D%3D&amp;v=1&amp;f=sd&#34;, &#34;isGif&#34;: false, &#34;scrubberThumbSource&#34;: &#34;https://v.redd.it/ngqg23w27wq91/DASH_96.mp4&#34;, &#34;posterUrl&#34;: &#34;https://external-preview.redd.it/_jJfJWgSMyOhm79mcJuvHtItRTki_eBVSpnpI39kEGA.png?width=960&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=7583cc667b9deb14f3b9a8e8382336d4b9c5de17&#34;, &#34;width&#34;: 1920, &#34;height&#34;: 1080, &#34;type&#34;: &#34;video&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/_jJfJWgSMyOhm79mcJuvHtItRTki_eBVSpnpI39kEGA.png?format=pjpg&amp;auto=webp&amp;s=94a17bbb40bd27b3d8d9d6f3a0a19de1fcb322cc&#34;, &#34;width&#34;: 1920, &#34;height&#34;: 1080}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-078822fa467f2f8bb.wss.redditmedia.com/link/xrnq8w?m=AQAAnKVEY-lIRdvEfuOPJkoSZat9X7eY8A8-PyIE_lZTWfUOcV9-&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;startrekfleetcommand.com&#34;, &#34;url&#34;: &#34;https://www.startrekfleetcommand.com/c1/?utm_source=reddit&amp;utm_medium=cpc&amp;utm_campaign=prime|reddit|pc|us|group1|cpc|cpc|20220901[web]&amp;utm_term=us&amp;utm_content=prime-18507_yt_influencer_carbotanimations_2_1920x1080_43s_V2-c1&#34;, &#34;outboundUrl&#34;: &#34;&#34;, &#34;outboundUrlExpiration&#34;: null, &#34;outboundUrlCreated&#34;: null}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: false}, {&#34;id&#34;: &#34;t3_xzz2ju&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356818000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;[USA-IL] [H] Oculus Quest 2 64gb [W] PayPal&#34;, &#34;author&#34;: &#34;Fairout88&#34;, &#34;authorId&#34;: &#34;t2_2q8p0wtr&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.hardwareswap&#34;, &#34;postId&#34;: &#34;t3_xzz2ju&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2skrs&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [{&#34;richtext&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;SELLING&#34;}], &#34;type&#34;: &#34;richtext&#34;, &#34;textColor&#34;: &#34;light&#34;, &#34;backgroundColor&#34;: &#34;#2653a9&#34;, &#34;templateId&#34;: &#34;b00f081c-3426-11e3-8b34-12313b079641&#34;}, {&#34;text&#34;: &#34;SELLING&#34;, &#34;type&#34;: &#34;text&#34;, &#34;textColor&#34;: &#34;light&#34;, &#34;backgroundColor&#34;: &#34;#2653a9&#34;, &#34;templateId&#34;: &#34;b00f081c-3426-11e3-8b34-12313b079641&#34;}], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/hardwareswap/comments/xzz2ju/usail_h_oculus_quest_2_64gb_w_paypal/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Yo. Got this quest that I bought about a year and half back. It u2019s seen maybe 20-30 hours of use. I u2019ve barely used it, so yeah. I u2019d like 230 shipped for it, but I really just want it out of the house. Make me an offer I can u2019t refuse. Pristine condition for the most part. Pictures are included in these links. Thanks for looking.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;link&#34;, &#34;u&#34;: &#34;https://ibb.co/VTs3DFb&#34;, &#34;t&#34;: &#34;https://ibb.co/VTs3DFb&#34;}, {&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34; &#34;}, {&#34;e&#34;: &#34;link&#34;, &#34;u&#34;: &#34;https://ibb.co/L18PmNg&#34;, &#34;t&#34;: &#34;https://ibb.co/L18PmNg&#34;}, {&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34; &#34;}, {&#34;e&#34;: &#34;link&#34;, &#34;u&#34;: &#34;https://ibb.co/RcbmTmq&#34;, &#34;t&#34;: &#34;https://ibb.co/RcbmTmq&#34;}, {&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34; &#34;}, {&#34;e&#34;: &#34;link&#34;, &#34;u&#34;: &#34;https://ibb.co/jrwcB24&#34;, &#34;t&#34;: &#34;https://ibb.co/jrwcB24&#34;}, {&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34; &#34;}, {&#34;e&#34;: &#34;link&#34;, &#34;u&#34;: &#34;https://ibb.co/ZhjTgzd&#34;, &#34;t&#34;: &#34;https://ibb.co/ZhjTgzd&#34;}, {&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34; &#34;}, {&#34;e&#34;: &#34;link&#34;, &#34;u&#34;: &#34;https://ibb.co/PFW8sFR&#34;, &#34;t&#34;: &#34;https://ibb.co/PFW8sFR&#34;}, {&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34; &#34;}, {&#34;e&#34;: &#34;link&#34;, &#34;u&#34;: &#34;https://ibb.co/M9xxp6g&#34;, &#34;t&#34;: &#34;https://ibb.co/M9xxp6g&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/OIzq47980UNnaS6UXLvFBB_rn8Mxh2YqDLQsM4kc7b8.jpg?auto=webp&amp;s=415e6a06d1ac17c086b164ae151031590041b2b9&#34;, &#34;width&#34;: 3024, &#34;height&#34;: 4032}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0fef05a3216736678.wss.redditmedia.com/link/xzz2ju?m=AQAAnKVEY9_2pbikHd1t19uMW_Oa1aaOrkJ7_zJNHjzHQX_WFB8L&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2js&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356818000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://a.thumbs.redditmedia.com/6OTO0M3gRuc0bvHKE19cQ51eZR30sPGAuzw37iMxtq8.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 105}, &#34;title&#34;: &#34;This song is incredible &lt;3&#34;, &#34;author&#34;: &#34;CocoShanel5&#34;, &#34;authorId&#34;: &#34;t2_rxf45xx6&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;youtu.be&#34;, &#34;postId&#34;: &#34;t3_xzz2js&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2qhz6&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [{&#34;text&#34;: &#34;Youtube&#34;, &#34;type&#34;: &#34;text&#34;, &#34;textColor&#34;: &#34;light&#34;, &#34;backgroundColor&#34;: &#34;#ea0027&#34;, &#34;templateId&#34;: &#34;9fa7c5ee-e650-11e9-9a8e-0ed39e1dbdde&#34;}], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/indie/comments/xzz2js/this_song_is_incredible_3/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://www.redditmedia.com/mediaembed/xzz2js&#34;, &#34;type&#34;: &#34;embed&#34;, &#34;width&#34;: 356, &#34;height&#34;: 200, &#34;provider&#34;: &#34;YouTube&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/y-uOEKjF64UXQxEbJ2HQDVMLQ51g2eolvVzuzMgB7dc.jpg?auto=webp&amp;s=08efa43da2adf557db669eeb8b0f81f4793acb4e&#34;, &#34;width&#34;: 480, &#34;height&#34;: 360}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0fef05a3216736678.wss.redditmedia.com/link/xzz2js?m=AQAAnKVEY38kM_nsXxVLFnV7gQYlqc2Uci5kG8mbsfY1IAbHKNuv&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;youtu.be&#34;, &#34;url&#34;: &#34;https://youtu.be/a9lPpPzxlhw&#34;, &#34;outboundUrl&#34;: &#34;https://out.reddit.com/t3_xzz2js?url=https%3A%2F%2Fyoutu.be%2Fa9lPpPzxlhw&amp;token=AQAALGJDY99vOKjkARoPZHKjP_nZ5lUq8ITg1fBKH710SWubQaZi&amp;app_name=web2x&#34;, &#34;outboundUrlExpiration&#34;: 1665360428000, &#34;outboundUrlCreated&#34;: 1665356828000}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2jc&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356817000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;If you were to organize a strike at work, what would be your top demands to make it effective?&#34;, &#34;author&#34;: &#34;MacaronMelodic&#34;, &#34;authorId&#34;: &#34;t2_m6x0wvl1&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.AskReddit&#34;, &#34;postId&#34;: &#34;t3_xzz2jc&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2qh1i&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/AskReddit/comments/xzz2jc/if_you_were_to_organize_a_strike_at_work_what/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0c2fab4c99e41a707.wss.redditmedia.com/link/xzz2jc?m=AQAAnKVEY5aHfvuismNxKKeinuGwb3un-woKL81Kj0gEYzLAvsR6&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2j9&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356817000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;TDD: Do you really write your tests before your functionality?&#34;, &#34;author&#34;: &#34;deefstes&#34;, &#34;authorId&#34;: &#34;t2_19qtswo&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.ExperiencedDevs&#34;, &#34;postId&#34;: &#34;t3_xzz2j9&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_e0gez&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/ExperiencedDevs/comments/xzz2j9/tdd_do_you_really_write_your_tests_before_your/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;From what I understand, TDD in it&#39;s truest form requires that you start by writing your unit tests, which will naturally fail, and then write your code to satisfy the tests.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;My question is, how many of you actually do that? I&#39;ve met enough developers who are serious about unit testing but still they start with writing their functions and then adding unit tests for the functions. But I have yet to meet a developer who really goes tests first.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Those of you who do, I presume you must feel strongly about the value of it. Can you give real world examples of where doing it the other way round have (or would have) bitten you?&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-07381166f904475a7.wss.redditmedia.com/link/xzz2j9?m=AQAAnKVEYzimsW7soXdUSVdDT9Dt3RSXE-Z_1KX4TkV47VXy0ISK&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2j4&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356816000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/DHFURA59qMGbkqgIsyXDncwsL8NL_IV9Zti0Da1YQoU.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 78}, &#34;title&#34;: &#34;Who is AJ Pritchard u2019s new u2018girlfriend u2019 Zara Zoffany?&#34;, &#34;author&#34;: &#34;RichGuava&#34;, &#34;authorId&#34;: &#34;t2_5f8qbs50&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;usatrenders.com&#34;, &#34;postId&#34;: &#34;t3_xzz2j4&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_73e3c8&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: false, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/usatrenders/comments/xzz2j4/who_is_aj_pritchards_new_girlfriend_zara_zoffany/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/Tet25Mh668L1aV1crOvupiBO_cBWLdEh7sgu_GLn4eY.jpg?auto=webp&amp;s=6f6069e0193e2e8e665c3f259fb97880868ce7dc&#34;, &#34;width&#34;: 1024, &#34;height&#34;: 576}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0c2fab4c99e41a707.wss.redditmedia.com/link/xzz2j4?m=AQAAnKVEY17K7GTqfJidudFWHoXk6WCTTAu8I4TxcvzmMy3HebkV&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;usatrenders.com&#34;, &#34;url&#34;: &#34;https://www.usatrenders.com/who-is-aj-pritchards-new-girlfriend-zara-zoffany/?feed_id=17988&amp;_unique_id=63435410cba69&#34;, &#34;outboundUrl&#34;: &#34;https://out.reddit.com/t3_xzz2j4?url=https%3A%2F%2Fwww.usatrenders.com%2Fwho-is-aj-pritchards-new-girlfriend-zara-zoffany%2F%3Ffeed_id%3D17988%26_unique_id%3D63435410cba69&amp;token=AQAALGJDY-2XFJ0Q-00FBGNLclIPjDz6MUUzKpfIUTh0LAZfwgiP&amp;app_name=web2x&#34;, &#34;outboundUrlExpiration&#34;: 1665360428000, &#34;outboundUrlCreated&#34;: 1665356828000}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2iv&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356816000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Help with RAID1 configuration / failing drive&#34;, &#34;author&#34;: &#34;eggaz&#34;, &#34;authorId&#34;: &#34;t2_dmt5n&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.ITSupport&#34;, &#34;postId&#34;: &#34;t3_xzz2iv&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2truu&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [{&#34;richtext&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Open | Hardware&#34;}], &#34;type&#34;: &#34;richtext&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;#dadada&#34;, &#34;templateId&#34;: &#34;c142fae4-c878-11e8-94cf-0e304b96553a&#34;}, {&#34;text&#34;: &#34;Open | Hardware&#34;, &#34;type&#34;: &#34;text&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;#dadada&#34;, &#34;templateId&#34;: &#34;c142fae4-c878-11e8-94cf-0e304b96553a&#34;}], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/ITSupport/comments/xzz2iv/help_with_raid1_configuration_failing_drive/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Good evening/afternoon/morning (wherever you may be)!&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Firstly, apologies for the wall of text.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;I had a windows PC built by a 3rd party a couple of years ago and I have recently noticed seriously decreased performance regarding boot speed, load times and OS responsiveness.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;After doing some digging, I was able to ascertain that it was the fault of the hard drive(s). I quickly downloaded CrystalDiskInfo, which was able to show that one of the two 10tb NTFS hard drives configured in RAID1 (disc C:) was starting to fail. Together they are my boot drive, page file and crash dump. Currently it shows a reallocated sectors count of 578156, a current pending sector count of 15016 and an un-correctable sectors count of 15016.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;I am aware that this drive requires immediate replacement, but I would really appreciate knowing what to do following the purchase of the replaced drive? The information out there is quite daunting and I would appreciate any advice on the steps I need to take prior to swapping out the bad drive so it can be copied across as part of the RAID1 configuration safely.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;I will post a screenshot of the CrystalDiskInfo status page below.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Best Regards,&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;eggaz&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0d354f1b92754c625.wss.redditmedia.com/link/xzz2iv?m=AQAAnKVEY_CJNJRAyv96_3WU23RM7mOjG1uI04jZTzkO4j-1Nfgn&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2io&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356815000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/H6e9rkxQc_izrJYDMr1mH6gWasEZDK-PkjoRw7m4WGE.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 105}, &#34;title&#34;: &#34;Ferta loves his new home ud83d udc80 ud83d udc9a&#34;, &#34;author&#34;: &#34;4O4-Error&#34;, &#34;authorId&#34;: &#34;t2_enbvdu75&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;reddit.com&#34;, &#34;postId&#34;: &#34;t3_xzz2io&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2ryfw&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/snakes/comments/xzz2io/ferta_loves_his_new_home/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;gallery&#34;, &#34;mediaMetadata&#34;: {&#34;jmun1jbb3vs91&#34;: {&#34;status&#34;: &#34;valid&#34;, &#34;e&#34;: &#34;Image&#34;, &#34;m&#34;: &#34;image/jpg&#34;, &#34;p&#34;: [{&#34;y&#34;: 81, &#34;x&#34;: 108, &#34;u&#34;: &#34;https://preview.redd.it/jmun1jbb3vs91.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c8ba237cba2e9441bb6791a81755b2094324aede&#34;}, {&#34;y&#34;: 162, &#34;x&#34;: 216, &#34;u&#34;: &#34;https://preview.redd.it/jmun1jbb3vs91.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b0f70a98366d3f426c3d5e8e1f505a8bab96ffa7&#34;}, {&#34;y&#34;: 240, &#34;x&#34;: 320, &#34;u&#34;: &#34;https://preview.redd.it/jmun1jbb3vs91.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=0d07d5420438d3101752117ce385997d13ae9ccb&#34;}, {&#34;y&#34;: 480, &#34;x&#34;: 640, &#34;u&#34;: &#34;https://preview.redd.it/jmun1jbb3vs91.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=b1cf6da37d1617609fcf7b7404916f1c17548e67&#34;}, {&#34;y&#34;: 720, &#34;x&#34;: 960, &#34;u&#34;: &#34;https://preview.redd.it/jmun1jbb3vs91.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a41abfbc07c153a400a794cf646107f118a41a4c&#34;}, {&#34;y&#34;: 810, &#34;x&#34;: 1080, &#34;u&#34;: &#34;https://preview.redd.it/jmun1jbb3vs91.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=067e608c16745fa45445035cb1efcbd3d65b1e50&#34;}], &#34;s&#34;: {&#34;y&#34;: 3000, &#34;x&#34;: 4000, &#34;u&#34;: &#34;https://preview.redd.it/jmun1jbb3vs91.jpg?width=4000&amp;format=pjpg&amp;auto=webp&amp;s=23a85333b4824e9fbdcd6770f2b7592422617f59&#34;}, &#34;id&#34;: &#34;jmun1jbb3vs91&#34;}, &#34;2nvijz7b3vs91&#34;: {&#34;status&#34;: &#34;valid&#34;, &#34;e&#34;: &#34;Image&#34;, &#34;m&#34;: &#34;image/jpg&#34;, &#34;p&#34;: [{&#34;y&#34;: 81, &#34;x&#34;: 108, &#34;u&#34;: &#34;https://preview.redd.it/2nvijz7b3vs91.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=08d5547dfe9cf5994aa59d494522e5b6852965d3&#34;}, {&#34;y&#34;: 162, &#34;x&#34;: 216, &#34;u&#34;: &#34;https://preview.redd.it/2nvijz7b3vs91.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=75a38d7b169d72976964beba50c25c88ffbe5cc4&#34;}, {&#34;y&#34;: 240, &#34;x&#34;: 320, &#34;u&#34;: &#34;https://preview.redd.it/2nvijz7b3vs91.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=42fdebd497300e924955237b3905f73b7ebf2e21&#34;}, {&#34;y&#34;: 480, &#34;x&#34;: 640, &#34;u&#34;: &#34;https://preview.redd.it/2nvijz7b3vs91.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1122a80a203770265dfc7eb710547d9d21dcdd61&#34;}, {&#34;y&#34;: 720, &#34;x&#34;: 960, &#34;u&#34;: &#34;https://preview.redd.it/2nvijz7b3vs91.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ddfaee07017a30f7ee27238d04dbddced45845ee&#34;}, {&#34;y&#34;: 810, &#34;x&#34;: 1080, &#34;u&#34;: &#34;https://preview.redd.it/2nvijz7b3vs91.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=aa5d1ae1898cfb81fbb32377d2eaeba4d2303c6f&#34;}], &#34;s&#34;: {&#34;y&#34;: 3000, &#34;x&#34;: 4000, &#34;u&#34;: &#34;https://preview.redd.it/2nvijz7b3vs91.jpg?width=4000&amp;format=pjpg&amp;auto=webp&amp;s=e524754154648f642bc260f9a40ff8521fc2b960&#34;}, &#34;id&#34;: &#34;2nvijz7b3vs91&#34;}}, &#34;gallery&#34;: {&#34;items&#34;: [{&#34;mediaId&#34;: &#34;2nvijz7b3vs91&#34;, &#34;id&#34;: 196178173}, {&#34;mediaId&#34;: &#34;jmun1jbb3vs91&#34;, &#34;id&#34;: 196178174}]}, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0d354f1b92754c625.wss.redditmedia.com/link/xzz2io?m=AQAAnKVEY80x4ttbPfSDP_uv_ZmfM341Yl00NI3ZY21s48gF_8iI&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;reddit.com&#34;, &#34;url&#34;: &#34;https://www.reddit.com/gallery/xzz2io&#34;, &#34;outboundUrl&#34;: &#34;https://www.reddit.com/gallery/xzz2io&#34;, &#34;outboundUrlExpiration&#34;: null, &#34;outboundUrlCreated&#34;: null}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xwmv8o&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665005170000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: true, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/Yg6nxWAzxxj1ev235FtXys47qx_zDJl0RknXuGW11lg.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 105}, &#34;title&#34;: &#34;Create a data mesh of continually updating event-streams on Apache Kafka u00ae. Gain enterprise-wide, no-wait access to both fresh &amp; historical data.&#34;, &#34;author&#34;: &#34;confluent_inc&#34;, &#34;authorId&#34;: &#34;t2_rj2nbyug&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;confluent.io&#34;, &#34;postId&#34;: &#34;t3_xwmv8o&#34;, &#34;upvoteRatio&#34;: 0.33, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: &#34;qa&#34;, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_6vq1ls&#34;, &#34;type&#34;: &#34;profile&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: true, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/user/confluent_inc/comments/xwmv8o/create_a_data_mesh_of_continually_updating/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: &#34;Download&#34;, &#34;domainOverride&#34;: &#34;confluent.io&#34;, &#34;impressionId&#34;: 4134719963011236820, &#34;isSurveyAd&#34;: false, &#34;impressionIdStr&#34;: &#34;4134719963011236820&#34;, &#34;isCreatedFromAdsUi&#34;: true, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?auto=webp&amp;s=f11bb1147faaf1c4b3e87bfac0100311d185ca5d&#34;, &#34;type&#34;: &#34;image&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 628, &#34;resolutions&#34;: [{&#34;url&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=754cea059e4263c7efbabe20ab877a12796a22cf&#34;, &#34;width&#34;: 108, &#34;height&#34;: 56}, {&#34;url&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=317aeb8127a45df5824951c687e77b3cd80d3f06&#34;, &#34;width&#34;: 216, &#34;height&#34;: 113}, {&#34;url&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7b4867c272428c165c1afcd71cb3318dfd9dcf33&#34;, &#34;width&#34;: 320, &#34;height&#34;: 167}, {&#34;url&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=77900177e6d2f46a784821acb655bd951928971c&#34;, &#34;width&#34;: 640, &#34;height&#34;: 334}, {&#34;url&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=34178f21cb57866e82cb7d021c5c31167e93646a&#34;, &#34;width&#34;: 960, &#34;height&#34;: 502}, {&#34;url&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=452642c5ab65f0efb8439429a35e0ac2ce7f6498&#34;, &#34;width&#34;: 1080, &#34;height&#34;: 565}], &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/c0veJHNjTMmuLLPSCMrTUs_QhmaqKDVJ7uk6vy7hq3Q.jpg?auto=webp&amp;s=f11bb1147faaf1c4b3e87bfac0100311d185ca5d&#34;, &#34;width&#34;: 1200, &#34;height&#34;: 628}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-07381166f904475a7.wss.redditmedia.com/link/xwmv8o?m=AQAAnKVEY6iKP_tUyWmNmTWlRfdpLeg5FD7-AdwgVlc3cUQAbis0&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;confluent.io&#34;, &#34;url&#34;: &#34;https://www.confluent.io/resources/ebook/data-mesh-architectures-with-event-streams/?utm_medium=paidsocial&amp;utm_source=reddit&amp;utm_campaign=ch.paidsocial_tp.prs_tgt.lead-gen-content-desktop_rgn.namer_lgn.eng_bgt.pg_con.data-mesh-architectures-with-event-streams&amp;creative=dmawes&#34;, &#34;outboundUrl&#34;: &#34;&#34;, &#34;outboundUrlExpiration&#34;: null, &#34;outboundUrlCreated&#34;: null}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2in&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356815000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/tfo0nL2WYOdcx4ksKKN3SfgZhOtAJs6Tr3pfizHoxHE.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 140}, &#34;title&#34;: &#34; u00c4r jag h u00f6g, Me, collage on skateboard, 2022&#34;, &#34;author&#34;: &#34;Vem_e_jag&#34;, &#34;authorId&#34;: &#34;t2_oh2qomvl&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;i.redd.it&#34;, &#34;postId&#34;: &#34;t3_xzz2in&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2qh7a&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [{&#34;richtext&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Artwork&#34;}], &#34;type&#34;: &#34;richtext&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;&#34;, &#34;templateId&#34;: &#34;b24d280a-bcfe-11e8-b390-0e532e75edec&#34;}, {&#34;text&#34;: &#34;Artwork&#34;, &#34;type&#34;: &#34;text&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;&#34;, &#34;templateId&#34;: &#34;b24d280a-bcfe-11e8-b390-0e532e75edec&#34;}], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/Art/comments/xzz2in/ u00e4r_jag_h u00f6g_me_collage_on_skateboard_2022/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://i.redd.it/7i7f9v3b3vs91.jpg&#34;, &#34;type&#34;: &#34;image&#34;, &#34;width&#34;: 3024, &#34;height&#34;: 4032, &#34;resolutions&#34;: [{&#34;url&#34;: &#34;https://preview.redd.it/7i7f9v3b3vs91.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c2af90fbeab50311197a65be213de1be74494056&#34;, &#34;width&#34;: 108, &#34;height&#34;: 144}, {&#34;url&#34;: &#34;https://preview.redd.it/7i7f9v3b3vs91.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=d5c2389d20eab70911569e41abe2447865934019&#34;, &#34;width&#34;: 216, &#34;height&#34;: 288}, {&#34;url&#34;: &#34;https://preview.redd.it/7i7f9v3b3vs91.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=18b0e1837977de4465c6fb6a59ca431d1b14d2fc&#34;, &#34;width&#34;: 320, &#34;height&#34;: 426}, {&#34;url&#34;: &#34;https://preview.redd.it/7i7f9v3b3vs91.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7ff22c805b30359841ff1ce899a8adaa4d58799c&#34;, &#34;width&#34;: 640, &#34;height&#34;: 853}, {&#34;url&#34;: &#34;https://preview.redd.it/7i7f9v3b3vs91.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=ac629d430a429f6113de7394487c750d2a00bde7&#34;, &#34;width&#34;: 960, &#34;height&#34;: 1280}, {&#34;url&#34;: &#34;https://preview.redd.it/7i7f9v3b3vs91.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=00f90ddd6d2901c822119ea27d0ea2e29311dc36&#34;, &#34;width&#34;: 1080, &#34;height&#34;: 1440}], &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://preview.redd.it/7i7f9v3b3vs91.jpg?auto=webp&amp;s=dc12b0a72c77c3876ed61efb2e449141087c2d4b&#34;, &#34;width&#34;: 3024, &#34;height&#34;: 4032}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0d354f1b92754c625.wss.redditmedia.com/link/xzz2in?m=AQAAnKVEY6WX6uTQG1jPWnrHjNp7AGMeer8Pt4gF2O4mnMYYb1gD&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: [&#34;drawing_and_painting&#34;], &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2ij&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356815000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Chubby panda Tanky panda (solo tank) whose ability is to reflect certain percentage of dmg This panda loves to munch on the bamboo stick which he holds in his hands&#34;, &#34;author&#34;: &#34;Odd_Function_2823&#34;, &#34;authorId&#34;: &#34;t2_j09e3qho&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.tinyanimalwar&#34;, &#34;postId&#34;: &#34;t3_xzz2ij&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_5nlnl2&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/tinyanimalwar/comments/xzz2ij/chubby_panda_tanky_panda_solo_tank_whose_ability/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0ffbcc476ebd6c972.wss.redditmedia.com/link/xzz2ij?m=AQAAnKVEY3zy3V4BpF1XBnYFvJ6zvhJ-L_i2KZA3CwMkflczGfOi&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2if&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356815000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Why is good crack hard to find&#34;, &#34;author&#34;: &#34;Playful_joslynn&#34;, &#34;authorId&#34;: &#34;t2_bhlzrtcv&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.cracksmokers&#34;, &#34;postId&#34;: &#34;t3_xzz2if&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_vko1y&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/cracksmokers/comments/xzz2if/why_is_good_crack_hard_to_find/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0f5512d358de5a091.wss.redditmedia.com/link/xzz2if?m=AQAAnKVEYy3B1LR4-XwSnIEc-SWDgyAzyy1v3zuYk6TMzay5_AHv&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2id&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356815000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/0kjPfWHjGoSHDhEAA2hMuAS_5RcADWxH3MMhW1V-LSk.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 131}, &#34;title&#34;: &#34;Logan reacting to JJ reacting. Incredible recommendation placement.&#34;, &#34;author&#34;: &#34;CovertOpsCon&#34;, &#34;authorId&#34;: &#34;t2_iodum&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;i.redd.it&#34;, &#34;postId&#34;: &#34;t3_xzz2id&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: &#34;confidence&#34;, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2xd5g&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/ksi/comments/xzz2id/logan_reacting_to_jj_reacting_incredible/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://i.redd.it/fk03xhs93vs91.png&#34;, &#34;type&#34;: &#34;image&#34;, &#34;width&#34;: 798, &#34;height&#34;: 749, &#34;resolutions&#34;: [{&#34;url&#34;: &#34;https://preview.redd.it/fk03xhs93vs91.png?width=108&amp;crop=smart&amp;auto=webp&amp;s=1f36fe205dc3fcbbe7c03f23a4acf0b3016ac939&#34;, &#34;width&#34;: 108, &#34;height&#34;: 101}, {&#34;url&#34;: &#34;https://preview.redd.it/fk03xhs93vs91.png?width=216&amp;crop=smart&amp;auto=webp&amp;s=843fe0594f36af439fdb3275a92096693b6f6bef&#34;, &#34;width&#34;: 216, &#34;height&#34;: 202}, {&#34;url&#34;: &#34;https://preview.redd.it/fk03xhs93vs91.png?width=320&amp;crop=smart&amp;auto=webp&amp;s=34d2561e1befb1693977a5da582cb9dcb840e492&#34;, &#34;width&#34;: 320, &#34;height&#34;: 300}, {&#34;url&#34;: &#34;https://preview.redd.it/fk03xhs93vs91.png?width=640&amp;crop=smart&amp;auto=webp&amp;s=823b5592157221f7a76a7d6a175259c5e058098c&#34;, &#34;width&#34;: 640, &#34;height&#34;: 600}], &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://preview.redd.it/fk03xhs93vs91.png?auto=webp&amp;s=4e71b43b3c57ec28aedf260b145fe9d33430d811&#34;, &#34;width&#34;: 798, &#34;height&#34;: 749}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0ffbcc476ebd6c972.wss.redditmedia.com/link/xzz2id?m=AQAAnKVEYxpMIfPurudS_RS1kdP7K5DZbZV71LPkaB-Anv4sRAkx&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2ic&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356815000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Determining age of Dymo printer&#34;, &#34;author&#34;: &#34;Sam_Technician&#34;, &#34;authorId&#34;: &#34;t2_bnda1tzb&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.dymo&#34;, &#34;postId&#34;: &#34;t3_xzz2ic&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_37v35&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/dymo/comments/xzz2ic/determining_age_of_dymo_printer/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;I am conducting an equipment audit of a site that possesses several Dymo 450s. I am attempting to find out how old they are, but there does not seem to be be any serial lookup, nor an obvious way to derive age from the serial number itself. Does anyone know how to do this?&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;I tried calling Dymo support on the Australian line at 10am, but got a machine saying it was out of office hours, and it hung up on me.&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-06db5b38c0a3e7bd9.wss.redditmedia.com/link/xzz2ic?m=AQAAnKVEYymfhM_i915TFDABa-w6Gor1__dXsujGZjJjELrEitCg&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2ib&#34;, &#34;numComments&#34;: 1, &#34;created&#34;: 1665356815000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Trophies from OW to OW2&#34;, &#34;author&#34;: &#34;aroliveras&#34;, &#34;authorId&#34;: &#34;t2_14hucpmw&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.Overwatch&#34;, &#34;postId&#34;: &#34;t3_xzz2ib&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2u5kl&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [{&#34;richtext&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;News &amp; Discussion&#34;}], &#34;type&#34;: &#34;richtext&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;#779ecb&#34;, &#34;templateId&#34;: &#34;2fd8de84-1e48-11e6-b8f4-0eae2c1586a3&#34;}, {&#34;text&#34;: &#34;News &amp; Discussion&#34;, &#34;type&#34;: &#34;text&#34;, &#34;textColor&#34;: &#34;dark&#34;, &#34;backgroundColor&#34;: &#34;#779ecb&#34;, &#34;templateId&#34;: &#34;2fd8de84-1e48-11e6-b8f4-0eae2c1586a3&#34;}], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/Overwatch/comments/xzz2ib/trophies_from_ow_to_ow2/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Did anyone get their trophies from PS4 OW 1 to PS5 OW2? I noticed that I started unlocking trophies that I already did.&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0c2fab4c99e41a707.wss.redditmedia.com/link/xzz2ib?m=AQAAnKVEYwNLYrrcG2ePLoulMDi4rnjbtPVCNY88xaoMSpRskE1j&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: [&#34;gaming&#34;], &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2i7&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356814000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/CAAP7oJ-r58SXm70YELegf4aAg7iN4i7Yo1zEfjPreM.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 78}, &#34;title&#34;: &#34;[KevinColePFF] Best QBs at avoiding sacks vs best o-lines at preventing sacks&#34;, &#34;author&#34;: &#34;AssssCrackBandit&#34;, &#34;authorId&#34;: &#34;t2_f5ier4dn&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;twitter.com&#34;, &#34;postId&#34;: &#34;t3_xzz2i7&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2rzkb&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: false, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/Chargers/comments/xzz2i7/kevincolepff_best_qbs_at_avoiding_sacks_vs_best/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://www.redditmedia.com/mediaembed/xzz2i7&#34;, &#34;type&#34;: &#34;embed&#34;, &#34;width&#34;: 350, &#34;height&#34;: null, &#34;provider&#34;: &#34;Twitter&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/i35v6iQQaXJAcwWu6zErhVmy0W2AXhHSMRNxyZEoIcs.jpg?auto=webp&amp;s=9c212b6941ed6ca3d9bc14eeb0310b9aefd9ddbc&#34;, &#34;width&#34;: 140, &#34;height&#34;: 78}, &#34;crosspostRootId&#34;: &#34;t3_xzz0l0&#34;, &#34;crosspostParentId&#34;: &#34;t3_xzz0l0&#34;, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-078822fa467f2f8bb.wss.redditmedia.com/link/xzz2i7?m=AQAAnKVEY2AxGJTw4cbazW7Mv_528H5qZLrIdjpbFE9OCEa1JqiH&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;twitter.com&#34;, &#34;url&#34;: &#34;https://twitter.com/kevincolepff/status/1577337459507085313?s=46&amp;t=5hj5o0NOarRCue7TOwtPhg&#34;, &#34;outboundUrl&#34;: &#34;https://out.reddit.com/t3_xzz2i7?url=https%3A%2F%2Ftwitter.com%2Fkevincolepff%2Fstatus%2F1577337459507085313%3Fs%3D46%26t%3D5hj5o0NOarRCue7TOwtPhg&amp;token=AQAALGJDYxMaFrKrBVaFLkuYSzhdrvCtAvoANFx_5HBR8cwQH_-0&amp;app_name=web2x&#34;, &#34;outboundUrlExpiration&#34;: 1665360428000, &#34;outboundUrlCreated&#34;: 1665356828000}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz0l0&#34;, &#34;numComments&#34;: 2, &#34;created&#34;: 1665356663000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;default&#34;, &#34;width&#34;: 140, &#34;height&#34;: 78}, &#34;title&#34;: &#34;[KevinColePFF] Best QBs at avoiding sacks vs best o-lines at preventing sacks&#34;, &#34;author&#34;: &#34;AssssCrackBandit&#34;, &#34;authorId&#34;: &#34;t2_f5ier4dn&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;twitter.com&#34;, &#34;postId&#34;: &#34;t3_xzz0l0&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2qmg3&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: false, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/nfl/comments/xzz0l0/kevincolepff_best_qbs_at_avoiding_sacks_vs_best/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://www.redditmedia.com/mediaembed/xzz0l0&#34;, &#34;type&#34;: &#34;embed&#34;, &#34;width&#34;: 350, &#34;height&#34;: null, &#34;provider&#34;: &#34;Twitter&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/i35v6iQQaXJAcwWu6zErhVmy0W2AXhHSMRNxyZEoIcs.jpg?auto=webp&amp;s=9c212b6941ed6ca3d9bc14eeb0310b9aefd9ddbc&#34;, &#34;width&#34;: 140, &#34;height&#34;: 78}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 1, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0c2fab4c99e41a707.wss.redditmedia.com/link/xzz0l0?m=AQAAnKVEY10z6CAq3uC9FIbyFWPA947loqNlYdSqPnhGeAq-ETsa&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;twitter.com&#34;, &#34;url&#34;: &#34;https://twitter.com/kevincolepff/status/1577337459507085313?s=46&amp;t=5hj5o0NOarRCue7TOwtPhg&#34;, &#34;outboundUrl&#34;: &#34;https://out.reddit.com/t3_xzz0l0?url=https%3A%2F%2Ftwitter.com%2Fkevincolepff%2Fstatus%2F1577337459507085313%3Fs%3D46%26t%3D5hj5o0NOarRCue7TOwtPhg&amp;token=AQAALGJDY4Vz6I2bzYRUG1tjN9ZbepGeotRLW6-mzSyiGq6-Yjj1&amp;app_name=web2x&#34;, &#34;outboundUrlExpiration&#34;: 1665360428000, &#34;outboundUrlCreated&#34;: 1665356828000}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xv56mu&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1664857223000, &#34;score&#34;: 39, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: true, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/h--P9D1Pf4PGkvIWov0IyIjIjHljic8r9wj8he6GgrI.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 78}, &#34;title&#34;: &#34;Discover the award-winning stories that move you on HBO Max.&#34;, &#34;author&#34;: &#34;hbomax&#34;, &#34;authorId&#34;: &#34;t2_6jhl4yqj&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;hbomax.com&#34;, &#34;postId&#34;: &#34;t3_xv56mu&#34;, &#34;upvoteRatio&#34;: 0.69, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: &#34;qa&#34;, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2okxba&#34;, &#34;type&#34;: &#34;profile&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: true, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/user/hbomax/comments/xv56mu/discover_the_awardwinning_stories_that_move_you/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: &#34;Learn More&#34;, &#34;domainOverride&#34;: &#34;hbomax.com&#34;, &#34;impressionId&#34;: 4134719963128677332, &#34;isSurveyAd&#34;: false, &#34;impressionIdStr&#34;: &#34;4134719963128677332&#34;, &#34;isCreatedFromAdsUi&#34;: true, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;, &#34;hlsUrl&#34;: &#34;https://v.redd.it/g2wwhasntpr91/HLSPlaylist.m3u8?a=1667948828%2CMDExZDZiYTdjZmQ2M2QzZDgyYjAxNjlhMTg0NmVmM2M1ZjlhMzYyMDc5ZGYwMWZlMmJiNjEwZTNiOTZkNWM5MA%3D%3D&amp;v=1&amp;f=sd&#34;, &#34;dashUrl&#34;: &#34;https://v.redd.it/g2wwhasntpr91/DASHPlaylist.mpd?a=1667948828%2CZTc4OTc2ZjMwZmFhMWJkNjliODE1NzEzM2M1OWJjYTNhZjAyZmRkZmM5MzcyMmI3YjllODY0YWVhN2FhZTU1ZQ%3D%3D&amp;v=1&amp;f=sd&#34;, &#34;isGif&#34;: false, &#34;scrubberThumbSource&#34;: &#34;https://v.redd.it/g2wwhasntpr91/DASH_96.mp4&#34;, &#34;posterUrl&#34;: &#34;https://external-preview.redd.it/wWymOqxw_ceKUtGyGkeZR4FGtRY-AoEvgt81hylQe-c.png?width=960&amp;crop=smart&amp;format=pjpg&amp;auto=webp&amp;s=ce2521f062483519b41c73247dc5ef75be5e2d6b&#34;, &#34;width&#34;: 1920, &#34;height&#34;: 1080, &#34;type&#34;: &#34;video&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/wWymOqxw_ceKUtGyGkeZR4FGtRY-AoEvgt81hylQe-c.png?format=pjpg&amp;auto=webp&amp;s=6835802d602281bd8daeee975574f312c6c2a41b&#34;, &#34;width&#34;: 1920, &#34;height&#34;: 1080}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0f5512d358de5a091.wss.redditmedia.com/link/xv56mu?m=AQAAnKVEY40D3cLquneA0gO31xafIDJzE1QLr5qXVmsXp0XwpSMS&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;hbomax.com&#34;, &#34;url&#34;: &#34;https://ad.doubleclick.net/ddm/trackclk/N286407.131843REDDITINC/B28373220.347883973;dc_trk_aid=539271570;dc_trk_cid=177950304;dc_lat=;dc_rdid=;tag_for_child_directed_treatment=;tfua=;ltd=&#34;, &#34;outboundUrl&#34;: &#34;&#34;, &#34;outboundUrlExpiration&#34;: null, &#34;outboundUrlCreated&#34;: null}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: false}, {&#34;id&#34;: &#34;t3_xzz2i2&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356814000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;default&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;[Daniels] Heard some players in the locker room saying they want to wear all red uniforms again because they&#39;re good luck. I&#39;ll co-sign on that. Uniforms looked great today.&#34;, &#34;author&#34;: &#34;aparatis&#34;, &#34;authorId&#34;: &#34;t2_kzsp7&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;twitter.com&#34;, &#34;postId&#34;: &#34;t3_xzz2i2&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2rx57&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: false, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/Patriots/comments/xzz2i2/daniels_heard_some_players_in_the_locker_room/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0d354f1b92754c625.wss.redditmedia.com/link/xzz2i2?m=AQAAnKVEY_vej5w8UnL7I5ovTalC_PU4MBdsDv-g9Zs8MtKyIJme&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;twitter.com&#34;, &#34;url&#34;: &#34;https://twitter.com/MarkDanielsPJ/status/1579238658347249664&#34;, &#34;outboundUrl&#34;: &#34;https://out.reddit.com/t3_xzz2i2?url=https%3A%2F%2Ftwitter.com%2FMarkDanielsPJ%2Fstatus%2F1579238658347249664&amp;token=AQAALGJDYwV-C3oxmV4vx-il6De1cDY6ZsyeeA4o86kXlftQucxR&amp;app_name=web2x&#34;, &#34;outboundUrlExpiration&#34;: 1665360428000, &#34;outboundUrlCreated&#34;: 1665356828000}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2i1&#34;, &#34;numComments&#34;: 1, &#34;created&#34;: 1665356814000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://a.thumbs.redditmedia.com/ccVquRLNa6ijFwumMtlhcRbltqqJHZOnWNxNV5XC2W8.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 140}, &#34;title&#34;: &#34;I was just washing the dishes...&#34;, &#34;author&#34;: &#34;SlavMaster7&#34;, &#34;authorId&#34;: &#34;t2_d0kthu2d&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;i.redd.it&#34;, &#34;postId&#34;: &#34;t3_xzz2i1&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_qir9n&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/HolUp/comments/xzz2i1/i_was_just_washing_the_dishes/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://i.redd.it/5iccew0b3vs91.jpg&#34;, &#34;type&#34;: &#34;image&#34;, &#34;width&#34;: 3024, &#34;height&#34;: 4032, &#34;resolutions&#34;: [{&#34;url&#34;: &#34;https://preview.redd.it/5iccew0b3vs91.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b3fa3b3d77950ff40672cc7a8a54dd737c63c232&#34;, &#34;width&#34;: 108, &#34;height&#34;: 144}, {&#34;url&#34;: &#34;https://preview.redd.it/5iccew0b3vs91.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a3a1d39cde305ac89956b58846da8a81ee23d97c&#34;, &#34;width&#34;: 216, &#34;height&#34;: 288}, {&#34;url&#34;: &#34;https://preview.redd.it/5iccew0b3vs91.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fe274fdea0704d479ab327eab4e18f13abc84310&#34;, &#34;width&#34;: 320, &#34;height&#34;: 426}, {&#34;url&#34;: &#34;https://preview.redd.it/5iccew0b3vs91.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=bc7f412978351f132ae0f53ed9a53e87163fdb10&#34;, &#34;width&#34;: 640, &#34;height&#34;: 853}, {&#34;url&#34;: &#34;https://preview.redd.it/5iccew0b3vs91.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e6467855c96812231619b2cc6aa864da9295f814&#34;, &#34;width&#34;: 960, &#34;height&#34;: 1280}, {&#34;url&#34;: &#34;https://preview.redd.it/5iccew0b3vs91.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=27af31453dbae292e7754ffd185e6ee629ec5b4f&#34;, &#34;width&#34;: 1080, &#34;height&#34;: 1440}], &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://preview.redd.it/5iccew0b3vs91.jpg?auto=webp&amp;s=ab509bede04bfc3a07d75a9834e5082076f3000e&#34;, &#34;width&#34;: 3024, &#34;height&#34;: 4032}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0f5512d358de5a091.wss.redditmedia.com/link/xzz2i1?m=AQAAnKVEY9fjs7XNWby-JYz4z5JhU8JkojO3xjTLR5HuJSPZRMoS&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hy&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356814000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Academic Survey about Starbucks&#34;, &#34;author&#34;: &#34;shelbym_xoxo&#34;, &#34;authorId&#34;: &#34;t2_5mb29rv0&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.Coffee&#34;, &#34;postId&#34;: &#34;t3_xzz2hy&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2qhze&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/Coffee/comments/xzz2hy/academic_survey_about_starbucks/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;This is a homework assignment! I had to create a brand extension for a brand of my choosing so I obviously chose one of my favorite coffee brands :) Any help would be appreciated!&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0d354f1b92754c625.wss.redditmedia.com/link/xzz2hy?m=AQAAnKVEY_UIVstZcnARWDDWGtSVyD2yw30SLmzf4r2GlOJNKhMm&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hx&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356814000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Party members disconnect after one game&#34;, &#34;author&#34;: &#34;ExtentCommercial6171&#34;, &#34;authorId&#34;: &#34;t2_8fbpxgft&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.Chivalry2&#34;, &#34;postId&#34;: &#34;t3_xzz2hx&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_12v693&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/Chivalry2/comments/xzz2hx/party_members_disconnect_after_one_game/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Playing Xbox and it u2019s a super fun game but my party members don u2019t load into the second game we play so we have to keep exiting then re inviting. Also can u2019t join standalone servers with any party member.. any ideas?&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-07381166f904475a7.wss.redditmedia.com/link/xzz2hx?m=AQAAnKVEYxTX0fOPweyiddL84XBemW4JLkheIEMC_2xBdLFrFuDU&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hu&#34;, &#34;numComments&#34;: 1, &#34;created&#34;: 1665356813000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Can I Take My Medication Before Surgery?&#34;, &#34;author&#34;: &#34;SpecimenKratos&#34;, &#34;authorId&#34;: &#34;t2_3lw3wmya&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.AskDocs&#34;, &#34;postId&#34;: &#34;t3_xzz2hu&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2xtuc&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/AskDocs/comments/xzz2hu/can_i_take_my_medication_before_surgery/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: [{&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Hi everyone,&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;24F, 230lbs, 7&#39;. Taking Venlafaxine for anxiety/depression 150mg.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;I&#39;m going to be going to an oral surgeon tomorrow to get my wisdom teeth out. They told me not to eat anything or drink anything but water for 6hrs before my surgery. I&#39;m already a bit nervous, but I&#39;m not sure if I should take my meds tomorrow morning. Should I just go in there and raw dog it, or am I allowed to take it? I would be taking them around 10am and my appt is at 1:30pm if that helps.&#34;}], &#34;e&#34;: &#34;par&#34;}, {&#34;c&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;I&#39;m so sorry if this isn&#39;t where I&#39;m supposed to put this!&#34;}], &#34;e&#34;: &#34;par&#34;}]}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-078822fa467f2f8bb.wss.redditmedia.com/link/xzz2hu?m=AQAAnKVEYxMdWGDoNAgkp31nK2j8i2vIpER-DqQ0Vt3YmP3Q4KVU&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hs&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356813000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;Is candy crush the reason for the increase in violence in society, why or why not?&#34;, &#34;author&#34;: &#34;SamShelby7&#34;, &#34;authorId&#34;: &#34;t2_dpob1pwc&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.AskReddit&#34;, &#34;postId&#34;: &#34;t3_xzz2hs&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2qh1i&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/AskReddit/comments/xzz2hs/is_candy_crush_the_reason_for_the_increase_in/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0c2fab4c99e41a707.wss.redditmedia.com/link/xzz2hs?m=AQAAnKVEYxA7Z2dEhS4NYWfKn6g-tVjlkJlps-0HSbqVrm70aYwM&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hr&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356813000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/6lA_zAnr9211dPivpkIyegTsmgzY_biRtAW2Y-z0r3w.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 140}, &#34;title&#34;: &#34;Hago Chat Hot como Margot Robbie en Telegram DM&#34;, &#34;author&#34;: &#34;alexytadaddario&#34;, &#34;authorId&#34;: &#34;t2_s7ckot1y&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;i.redd.it&#34;, &#34;postId&#34;: &#34;t3_xzz2hr&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_70ro15&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/morbo_/comments/xzz2hr/hago_chat_hot_como_margot_robbie_en_telegram_dm/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://i.redd.it/03h5jr2b3vs91.jpg&#34;, &#34;type&#34;: &#34;image&#34;, &#34;width&#34;: 1082, &#34;height&#34;: 1440, &#34;resolutions&#34;: [{&#34;url&#34;: &#34;https://preview.redd.it/03h5jr2b3vs91.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=35e4af7177fb7d1baf1e750772f78e36764617d0&#34;, &#34;width&#34;: 108, &#34;height&#34;: 143}, {&#34;url&#34;: &#34;https://preview.redd.it/03h5jr2b3vs91.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a6e7bfe6e7d2d14bf6db27d0ee1f5c3085ed714f&#34;, &#34;width&#34;: 216, &#34;height&#34;: 287}, {&#34;url&#34;: &#34;https://preview.redd.it/03h5jr2b3vs91.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ade1dcf02208089c31e4a8bab9d1de5b3d6f5bfe&#34;, &#34;width&#34;: 320, &#34;height&#34;: 425}, {&#34;url&#34;: &#34;https://preview.redd.it/03h5jr2b3vs91.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=1e69e5695608735ceae266fe81eb853afc0ac0f0&#34;, &#34;width&#34;: 640, &#34;height&#34;: 851}, {&#34;url&#34;: &#34;https://preview.redd.it/03h5jr2b3vs91.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=a4577eb8ecd324fb117764059df0c2ec3e11003a&#34;, &#34;width&#34;: 960, &#34;height&#34;: 1277}, {&#34;url&#34;: &#34;https://preview.redd.it/03h5jr2b3vs91.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=ced131683346c23ba7b4d8e0c0e1a4dbebbad691&#34;, &#34;width&#34;: 1080, &#34;height&#34;: 1437}], &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://preview.redd.it/03h5jr2b3vs91.jpg?auto=webp&amp;s=377a8870a37d37e61c112f066b1b195045a3e897&#34;, &#34;width&#34;: 1082, &#34;height&#34;: 1440}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0ffbcc476ebd6c972.wss.redditmedia.com/link/xzz2hr?m=AQAAnKVEY71vrz3ySREWKu25eFqoRAKl6iNkBOkbjXX7t8xe9elc&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hh&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356812000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;https://b.thumbs.redditmedia.com/YufAXMA9XpBf2VF_EjMB5stR3jQK-ztScqdJ0d-peSg.jpg&#34;, &#34;width&#34;: 140, &#34;height&#34;: 140}, &#34;title&#34;: &#34;She&#39;s a mlemmer alright&#34;, &#34;author&#34;: &#34;Vividrops&#34;, &#34;authorId&#34;: &#34;t2_53aoh6wy&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;i.redd.it&#34;, &#34;postId&#34;: &#34;t3_xzz2hh&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_35pff&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/mlem/comments/xzz2hh/shes_a_mlemmer_alright/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://i.redd.it/5duly2893vs91.jpg&#34;, &#34;type&#34;: &#34;image&#34;, &#34;width&#34;: 720, &#34;height&#34;: 1280, &#34;resolutions&#34;: [{&#34;url&#34;: &#34;https://preview.redd.it/5duly2893vs91.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4b8f273d1aeb8276c04181d2698f53ce41a269a8&#34;, &#34;width&#34;: 108, &#34;height&#34;: 192}, {&#34;url&#34;: &#34;https://preview.redd.it/5duly2893vs91.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=2122234f0926c42b2c4f64a4156e10f4813358ff&#34;, &#34;width&#34;: 216, &#34;height&#34;: 384}, {&#34;url&#34;: &#34;https://preview.redd.it/5duly2893vs91.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=05a2417bd0e5bf2859c4cf9682863969da398ba8&#34;, &#34;width&#34;: 320, &#34;height&#34;: 568}, {&#34;url&#34;: &#34;https://preview.redd.it/5duly2893vs91.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7b9a10d9d44469fc0cc812f70eadd64a5989ef56&#34;, &#34;width&#34;: 640, &#34;height&#34;: 1137}], &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://preview.redd.it/5duly2893vs91.jpg?auto=webp&amp;s=1afbe09d168744f3c60c99169a41f3f303059c45&#34;, &#34;width&#34;: 720, &#34;height&#34;: 1280}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-07381166f904475a7.wss.redditmedia.com/link/xzz2hh?m=AQAAnKVEY0d2ivT_YPSK5QTvTys5yaOYFyibKYxoMoe0qSBRDec0&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hf&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356812000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;self&#34;, &#34;width&#34;: null, &#34;height&#34;: null}, &#34;title&#34;: &#34;All Hail the Filter Queen&#34;, &#34;author&#34;: &#34;TNJed37206&#34;, &#34;authorId&#34;: &#34;t2_w2g856d&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;self.datingoverfifty&#34;, &#34;postId&#34;: &#34;t3_xzz2hf&#34;, &#34;upvoteRatio&#34;: 0.99, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_12ieog&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: true, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/datingoverfifty/comments/xzz2hf/all_hail_the_filter_queen/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;type&#34;: &#34;rtjson&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;mediaMetadata&#34;: null, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0f5512d358de5a091.wss.redditmedia.com/link/xzz2hf?m=AQAAnKVEYz0iIMvwOujG1VFqwPvM13ojV-lpSAwPsevsowx1-A3l&#34;, &#34;source&#34;: null, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}, {&#34;id&#34;: &#34;t3_xzz2hc&#34;, &#34;numComments&#34;: 0, &#34;created&#34;: 1665356812000, &#34;score&#34;: 0, &#34;distinguishType&#34;: null, &#34;isLocked&#34;: false, &#34;isStickied&#34;: false, &#34;thumbnail&#34;: {&#34;url&#34;: &#34;default&#34;, &#34;width&#34;: 140, &#34;height&#34;: 140}, &#34;title&#34;: &#34;Get ready for adventure with these folksy, dreamy, epic indie folk, folk, folk-pop, acoustic tracks. Perfect for exploring the world.&#34;, &#34;author&#34;: &#34;unimusicplaylists&#34;, &#34;authorId&#34;: &#34;t2_695gja38&#34;, &#34;authorIsBlocked&#34;: false, &#34;domain&#34;: &#34;open.spotify.com&#34;, &#34;postId&#34;: &#34;t3_xzz2hc&#34;, &#34;upvoteRatio&#34;: 1.0, &#34;numDuplicates&#34;: null, &#34;discussionType&#34;: null, &#34;viewCount&#34;: 0, &#34;goldCount&#34;: 0, &#34;isArchived&#34;: false, &#34;contestMode&#34;: false, &#34;gildings&#34;: null, &#34;postCategories&#34;: null, &#34;suggestedSort&#34;: null, &#34;belongsTo&#34;: {&#34;id&#34;: &#34;t5_2szwj&#34;, &#34;type&#34;: &#34;subreddit&#34;}, &#34;flair&#34;: [{&#34;richtext&#34;: [{&#34;e&#34;: &#34;text&#34;, &#34;t&#34;: &#34;Folk&#34;}], &#34;type&#34;: &#34;richtext&#34;, &#34;textColor&#34;: &#34;light&#34;, &#34;backgroundColor&#34;: &#34;#874545&#34;, &#34;templateId&#34;: &#34;511051c2-d08e-11e8-b0b0-0e8d7b9c073c&#34;}, {&#34;text&#34;: &#34;Folk&#34;, &#34;type&#34;: &#34;text&#34;, &#34;textColor&#34;: &#34;light&#34;, &#34;backgroundColor&#34;: &#34;#874545&#34;, &#34;templateId&#34;: &#34;511051c2-d08e-11e8-b0b0-0e8d7b9c073c&#34;}], &#34;hidden&#34;: false, &#34;saved&#34;: false, &#34;isGildable&#34;: false, &#34;isMediaOnly&#34;: false, &#34;isSponsored&#34;: false, &#34;isNSFW&#34;: false, &#34;isMeta&#34;: false, &#34;isSpoiler&#34;: false, &#34;isBlank&#34;: false, &#34;sendReplies&#34;: false, &#34;voteState&#34;: 0, &#34;permalink&#34;: &#34;https://www.reddit.com/r/SpotifyPlaylists/comments/xzz2hc/get_ready_for_adventure_with_these_folksy_dreamy/&#34;, &#34;events&#34;: [], &#34;eventsOnRender&#34;: [], &#34;callToAction&#34;: null, &#34;domainOverride&#34;: null, &#34;impressionId&#34;: null, &#34;isSurveyAd&#34;: null, &#34;impressionIdStr&#34;: null, &#34;isCreatedFromAdsUi&#34;: false, &#34;adSupplementaryText&#34;: null, &#34;subcaption&#34;: null, &#34;media&#34;: {&#34;obfuscated&#34;: null, &#34;content&#34;: &#34;https://www.redditmedia.com/mediaembed/xzz2hc&#34;, &#34;type&#34;: &#34;embed&#34;, &#34;width&#34;: 456, &#34;height&#34;: 380, &#34;provider&#34;: &#34;Spotify&#34;, &#34;richtextContent&#34;: {&#34;document&#34;: []}, &#34;rteMode&#34;: &#34;richtext&#34;}, &#34;preview&#34;: {&#34;url&#34;: &#34;https://external-preview.redd.it/diLiO9BH9nDcv2TMeE8CUVRnMRBvyiNwaXom72pNJxk.jpg?auto=webp&amp;s=804b29b7062577b7aae02df1487c8ea6a70fcc75&#34;, &#34;width&#34;: 640, &#34;height&#34;: 640}, &#34;crosspostRootId&#34;: null, &#34;crosspostParentId&#34;: null, &#34;numCrossposts&#34;: 0, &#34;isCrosspostable&#34;: false, &#34;liveCommentsWebsocket&#34;: &#34;wss://ws-0fef05a3216736678.wss.redditmedia.com/link/xzz2hc?m=AQAAnKVEY2uiW71xmGrPySoSrwbwd3Aab0_12x0Xf-eYOqLfcrsV&#34;, &#34;source&#34;: {&#34;displayText&#34;: &#34;open.spotify.com&#34;, &#34;url&#34;: &#34;https://open.spotify.com/playlist/5vVgqxmmYAI3mAwILxgou0?si=iOGxbBqnS4akDa3AWlogTQ&#34;, &#34;outboundUrl&#34;: &#34;https://out.reddit.com/t3_xzz2hc?url=https%3A%2F%2Fopen.spotify.com%2Fplaylist%2F5vVgqxmmYAI3mAwILxgou0%3Fsi%3DiOGxbBqnS4akDa3AWlogTQ&amp;token=AQAALGJDYzOjRH1E8w-KUqO_6QypuBqlPZBEIRQGNQAd9GhX_jBZ&amp;app_name=web2x&#34;, &#34;outboundUrlExpiration&#34;: 1665360428000, &#34;outboundUrlCreated&#34;: 1665356828000}, &#34;isOriginalContent&#34;: false, &#34;contentCategories&#34;: null, &#34;isScoreHidden&#34;: true}]}} PRODUCED THIS TRAILER FOR MY UPCOMING ALBUM by ProducerJakeJames https://www.reddit.com/r/MusicPromotion/comments/xzz2jx/produced_this_trailer_for_my_upcoming_album/ üöÄüí´Boldy go where no one has gone before, follow the footsteps of your favorite Star Fleet captains! üöÄüí´ by StarTrekFleetCommand https://www.reddit.com/user/StarTrekFleetCommand/comments/xrnq8w/boldy_go_where_no_one_has_gone_before_follow_the/ [USA-IL] [H] Oculus Quest 2 64gb [W] PayPal by Fairout88 https://www.reddit.com/r/hardwareswap/comments/xzz2ju/usail_h_oculus_quest_2_64gb_w_paypal/ This song is incredible &lt;3 by CocoShanel5 https://www.reddit.com/r/indie/comments/xzz2js/this_song_is_incredible_3/ If you were to organize a strike at work, what would be your top demands to make it effective? by MacaronMelodic https://www.reddit.com/r/AskReddit/comments/xzz2jc/if_you_were_to_organize_a_strike_at_work_what/ TDD: Do you really write your tests before your functionality? by deefstes https://www.reddit.com/r/ExperiencedDevs/comments/xzz2j9/tdd_do_you_really_write_your_tests_before_your/ Who is AJ Pritchard‚Äôs new ‚Äògirlfriend‚Äô Zara Zoffany? by RichGuava https://www.reddit.com/r/usatrenders/comments/xzz2j4/who_is_aj_pritchards_new_girlfriend_zara_zoffany/ Help with RAID1 configuration / failing drive by eggaz https://www.reddit.com/r/ITSupport/comments/xzz2iv/help_with_raid1_configuration_failing_drive/ Ferta loves his new home üíÄüíö by 4O4-Error https://www.reddit.com/r/snakes/comments/xzz2io/ferta_loves_his_new_home/ Create a data mesh of continually updating event-streams on Apache Kafka¬Æ. Gain enterprise-wide, no-wait access to both fresh &amp; historical data. by confluent_inc https://www.reddit.com/user/confluent_inc/comments/xwmv8o/create_a_data_mesh_of_continually_updating/ √Ñr jag h√∂g, Me, collage on skateboard, 2022 by Vem_e_jag https://www.reddit.com/r/Art/comments/xzz2in/√§r_jag_h√∂g_me_collage_on_skateboard_2022/ Chubby panda Tanky panda (solo tank) whose ability is to reflect certain percentage of dmg This panda loves to munch on the bamboo stick which he holds in his hands by Odd_Function_2823 https://www.reddit.com/r/tinyanimalwar/comments/xzz2ij/chubby_panda_tanky_panda_solo_tank_whose_ability/ Why is good crack hard to find by Playful_joslynn https://www.reddit.com/r/cracksmokers/comments/xzz2if/why_is_good_crack_hard_to_find/ Logan reacting to JJ reacting. Incredible recommendation placement. by CovertOpsCon https://www.reddit.com/r/ksi/comments/xzz2id/logan_reacting_to_jj_reacting_incredible/ Determining age of Dymo printer by Sam_Technician https://www.reddit.com/r/dymo/comments/xzz2ic/determining_age_of_dymo_printer/ Trophies from OW to OW2 by aroliveras https://www.reddit.com/r/Overwatch/comments/xzz2ib/trophies_from_ow_to_ow2/ [KevinColePFF] Best QBs at avoiding sacks vs best o-lines at preventing sacks by AssssCrackBandit https://www.reddit.com/r/Chargers/comments/xzz2i7/kevincolepff_best_qbs_at_avoiding_sacks_vs_best/ [KevinColePFF] Best QBs at avoiding sacks vs best o-lines at preventing sacks by AssssCrackBandit https://www.reddit.com/r/nfl/comments/xzz0l0/kevincolepff_best_qbs_at_avoiding_sacks_vs_best/ Discover the award-winning stories that move you on HBO Max. by hbomax https://www.reddit.com/user/hbomax/comments/xv56mu/discover_the_awardwinning_stories_that_move_you/ [Daniels] Heard some players in the locker room saying they want to wear all red uniforms again because they&#39;re good luck. I&#39;ll co-sign on that. Uniforms looked great today. by aparatis https://www.reddit.com/r/Patriots/comments/xzz2i2/daniels_heard_some_players_in_the_locker_room/ I was just washing the dishes... by SlavMaster7 https://www.reddit.com/r/HolUp/comments/xzz2i1/i_was_just_washing_the_dishes/ Academic Survey about Starbucks by shelbym_xoxo https://www.reddit.com/r/Coffee/comments/xzz2hy/academic_survey_about_starbucks/ Party members disconnect after one game by ExtentCommercial6171 https://www.reddit.com/r/Chivalry2/comments/xzz2hx/party_members_disconnect_after_one_game/ Can I Take My Medication Before Surgery? by SpecimenKratos https://www.reddit.com/r/AskDocs/comments/xzz2hu/can_i_take_my_medication_before_surgery/ Is candy crush the reason for the increase in violence in society, why or why not? by SamShelby7 https://www.reddit.com/r/AskReddit/comments/xzz2hs/is_candy_crush_the_reason_for_the_increase_in/ Hago Chat Hot como Margot Robbie en Telegram DM by alexytadaddario https://www.reddit.com/r/morbo_/comments/xzz2hr/hago_chat_hot_como_margot_robbie_en_telegram_dm/ She&#39;s a mlemmer alright by Vividrops https://www.reddit.com/r/mlem/comments/xzz2hh/shes_a_mlemmer_alright/ All Hail the Filter Queen by TNJed37206 https://www.reddit.com/r/datingoverfifty/comments/xzz2hf/all_hail_the_filter_queen/ Get ready for adventure with these folksy, dreamy, epic indie folk, folk, folk-pop, acoustic tracks. Perfect for exploring the world. by unimusicplaylists https://www.reddit.com/r/SpotifyPlaylists/comments/xzz2hc/get_ready_for_adventure_with_these_folksy_dreamy/ . Obviously, we don&#39;t want the data to be formatted like that. By using the json = response.json() and commenting out the print(response.txt) line, we can view our data without being confused by all of the weird brackets and colons! .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/jupyter/python/week7hacks/2022/10/09/Python-Rapid-API-Example.html",
            "relUrl": "/jupyter/python/week7hacks/2022/10/09/Python-Rapid-API-Example.html",
            "date": " ‚Ä¢ Oct 9, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Correcting Errors Challenge (Burger, Fries, and Drink)",
            "content": "For this week&#39;s hacks, we were challenged to identify and correct errors on a code segment that allows a user to order items from a menu. Below is the code with errors: . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 0 . The problem with the above code is that it prompts the user to order something only one time. Also, as you can see, even if a user orders something, the total cost still remains at 0. Below is the code that has all of these errors corrected: . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 # welcomes the user shows them the menu and prompts them to select an item print(&quot;Hello! Welcome to our Python restaurant! What would you like?&quot;) print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) # shows the name of the item on the menu followed by its price #ideally the code should prompt the user multiple times order = True while order: # this makes it so that the user will be prompted multiple times to order something item = input(&quot;Please select an item from the menu&quot;) if item in menu.keys(): # If the user orders an item on the menu, the cost of that item will be added to the total cost total+= menu[item] print(total) else: # if a user tries to order something that is not on the menu, the code will immediately exit order = False print(&quot;Have a nice day!&quot;) . Hello! Welcome to our Python restaurant! What would you like? Menu burger $3.99 fries $1.99 drink $0.99 3.99 5.98 6.970000000000001 Have a nice day! . As you can see, an item that a user orders will now have its price be added to the total cost. Also, the user can now order from the menu as many times as they want until they hit the escape key. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/jupyter/python/week7hacks/2022/10/08/Correcting-Errors.html",
            "relUrl": "/jupyter/python/week7hacks/2022/10/08/Correcting-Errors.html",
            "date": " ‚Ä¢ Oct 8, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Python RapidAPI",
            "content": "Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Covid19 RapidAPI Example . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the Corona virus World and India data- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;fe79b3687bmshe4d5f96190e00c5p14dc84jsnde81577c9e6c&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) # print(response.text) # uncomment this line to see raw data # print(response.json()) # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . Digital Coin Example . This example provides digital coin feedback (ie Bitcoin). It include popularity, price, symbols, etc. . A valid X-RapidAPI-Key is required. Look in code for link to RapidAPI page | Read all comments in code for further guidance | . # RapidAPI page https://rapidapi.com/Coinranking/api/coinranking1/ # Begin Rapid API Code import requests url = &quot;https://coinranking1.p.rapidapi.com/coins&quot; querystring = {&quot;referenceCurrencyUuid&quot;:&quot;yhjMzLPhuIDl&quot;,&quot;timePeriod&quot;:&quot;24h&quot;,&quot;tiers[0]&quot;:&quot;1&quot;,&quot;orderBy&quot;:&quot;marketCap&quot;,&quot;orderDirection&quot;:&quot;desc&quot;,&quot;limit&quot;:&quot;50&quot;,&quot;offset&quot;:&quot;0&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;fe79b3687bmshe4d5f96190e00c5p14dc84jsnde81577c9e6c&quot;, # place your key here &quot;X-RapidAPI-Host&quot;: &quot;coinranking1.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.text) # End Rapid API Code json = response.json() # convert response to python json object # Observe data from an API. This is how data transports over the internet in a &quot;JSON&quot; text form # - The JSON &quot;text&quot; is formed in dictionary {} and list [] divisions # - To read the result, Data Scientist of Developer converts JSON into human readable form # - Review the first line, look for the keys -- &quot;status&quot; and &quot;data&quot; . {&#34;status&#34;:&#34;success&#34;,&#34;data&#34;:{&#34;stats&#34;:{&#34;total&#34;:1499,&#34;totalCoins&#34;:15880,&#34;totalMarkets&#34;:29447,&#34;totalExchanges&#34;:173,&#34;totalMarketCap&#34;:&#34;984198871574&#34;,&#34;total24hVolume&#34;:&#34;62176446159&#34;},&#34;coins&#34;:[{&#34;uuid&#34;:&#34;Qwsogvtv82FCd&#34;,&#34;symbol&#34;:&#34;BTC&#34;,&#34;name&#34;:&#34;Bitcoin&#34;,&#34;color&#34;:&#34;#f7931A&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/bOabBYkcX/bitcoin_btc.svg&#34;,&#34;marketCap&#34;:&#34;384262742956&#34;,&#34;price&#34;:&#34;20043.587055398148&#34;,&#34;listedAt&#34;:1330214400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.05&#34;,&#34;rank&#34;:1,&#34;sparkline&#34;:[&#34;20051.438940241358&#34;,&#34;20112.942136659854&#34;,&#34;20157.819968805998&#34;,&#34;20254.029991435713&#34;,&#34;20303.466331336567&#34;,&#34;20352.46379557382&#34;,&#34;20340.736960702463&#34;,&#34;20383.68761580728&#34;,&#34;20327.56610010769&#34;,&#34;20249.0598171069&#34;,&#34;20216.33733971908&#34;,&#34;20180.506474095324&#34;,&#34;20159.110575592727&#34;,&#34;20134.92190087771&#34;,&#34;20157.64358637768&#34;,&#34;20231.83287602472&#34;,&#34;20177.524728080465&#34;,&#34;20081.062490908993&#34;,&#34;20034.134493627964&#34;,&#34;20056.387678604326&#34;,&#34;20062.33767502718&#34;,&#34;20102.601333616225&#34;,&#34;20062.92043596876&#34;,&#34;20037.88842379937&#34;,&#34;20042.0240783645&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc&#34;,&#34;24hVolume&#34;:&#34;34064841287&#34;,&#34;btcPrice&#34;:&#34;1&#34;},{&#34;uuid&#34;:&#34;razxDUgYGNAdQ&#34;,&#34;symbol&#34;:&#34;ETH&#34;,&#34;name&#34;:&#34;Ethereum&#34;,&#34;color&#34;:&#34;#3C3C3D&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rk4RKHOuW/eth.svg&#34;,&#34;marketCap&#34;:&#34;166765877250&#34;,&#34;price&#34;:&#34;1363.3915039289066&#34;,&#34;listedAt&#34;:1438905600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.09&#34;,&#34;rank&#34;:2,&#34;sparkline&#34;:[&#34;1349.1166752669458&#34;,&#34;1351.4752396724552&#34;,&#34;1352.7565855474788&#34;,&#34;1364.7069535474543&#34;,&#34;1375.2332279379189&#34;,&#34;1375.0120085043593&#34;,&#34;1372.8560956800545&#34;,&#34;1376.1109732749908&#34;,&#34;1374.2091487475132&#34;,&#34;1367.8770624662602&#34;,&#34;1366.413446523702&#34;,&#34;1362.3283465053476&#34;,&#34;1360.2889128350394&#34;,&#34;1358.4058794835446&#34;,&#34;1360.971024625842&#34;,&#34;1370.08061964796&#34;,&#34;1367.8080450053967&#34;,&#34;1363.1362582897543&#34;,&#34;1364.1095458044765&#34;,&#34;1363.798675385996&#34;,&#34;1363.631276432834&#34;,&#34;1363.8383885694095&#34;,&#34;1360.9458284500292&#34;,&#34;1359.2096422918778&#34;,&#34;1360.9920678507171&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/razxDUgYGNAdQ+ethereum-eth&#34;,&#34;24hVolume&#34;:&#34;15420262793&#34;,&#34;btcPrice&#34;:&#34;0.06802133271657666&#34;},{&#34;uuid&#34;:&#34;HIVsRcGKkPFtW&#34;,&#34;symbol&#34;:&#34;USDT&#34;,&#34;name&#34;:&#34;Tether USD&#34;,&#34;color&#34;:&#34;#22a079&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mgHqwlCLj/usdt.svg&#34;,&#34;marketCap&#34;:&#34;68229636416&#34;,&#34;price&#34;:&#34;1.0002501293971435&#34;,&#34;listedAt&#34;:1420761600,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.08&#34;,&#34;rank&#34;:3,&#34;sparkline&#34;:[&#34;1.0004730164696796&#34;,&#34;0.9996925245670222&#34;,&#34;1.0003305556540378&#34;,&#34;0.9991437132975184&#34;,&#34;0.9997206896584828&#34;,&#34;1.0003229307902617&#34;,&#34;1.0002174675069595&#34;,&#34;0.999925766541416&#34;,&#34;1.000708618241012&#34;,&#34;1.0010737689896891&#34;,&#34;1.0002632048681543&#34;,&#34;1.0009610459933431&#34;,&#34;1.0002976934190984&#34;,&#34;1.000454394711972&#34;,&#34;0.9999051558590528&#34;,&#34;0.9994295746356769&#34;,&#34;1.0013423068981988&#34;,&#34;1.0018353783090301&#34;,&#34;0.9994152501955391&#34;,&#34;1.0004625909040463&#34;,&#34;0.9999277510688191&#34;,&#34;1.0000250969576618&#34;,&#34;1.0007856949488618&#34;,&#34;1.0002734024299755&#34;,&#34;1.0000861385454851&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/HIVsRcGKkPFtW+tetherusd-usdt&#34;,&#34;24hVolume&#34;:&#34;40292802850&#34;,&#34;btcPrice&#34;:&#34;0.000049903748597123&#34;},{&#34;uuid&#34;:&#34;aKzUVe4Hh_CON&#34;,&#34;symbol&#34;:&#34;USDC&#34;,&#34;name&#34;:&#34;USDC&#34;,&#34;color&#34;:&#34;#7894b4&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/jkDf8sQbY/usdc.svg&#34;,&#34;marketCap&#34;:&#34;46268785247&#34;,&#34;price&#34;:&#34;1.0002276826714807&#34;,&#34;listedAt&#34;:1539043200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.09&#34;,&#34;rank&#34;:4,&#34;sparkline&#34;:[&#34;1.0003790781178878&#34;,&#34;0.9997290863175305&#34;,&#34;1.0003038765412497&#34;,&#34;0.9991408722230394&#34;,&#34;0.9997209463954263&#34;,&#34;1.0001156279108188&#34;,&#34;1.0002132589197983&#34;,&#34;0.999979672700525&#34;,&#34;1.0007058659518255&#34;,&#34;1.0009680461396826&#34;,&#34;1.0002125205262982&#34;,&#34;1.0008177555056958&#34;,&#34;1.000215586806383&#34;,&#34;1.0005180826321018&#34;,&#34;0.9999336999249582&#34;,&#34;0.9994290728265802&#34;,&#34;1.001276747170873&#34;,&#34;1.0017305255841273&#34;,&#34;0.9995250487882986&#34;,&#34;1.0004327041522338&#34;,&#34;1.0000346997048333&#34;,&#34;0.9999849859295973&#34;,&#34;1.0007009863702179&#34;,&#34;1.0002434560917697&#34;,&#34;1.0000777737676467&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aKzUVe4Hh_CON+usdc-usdc&#34;,&#34;24hVolume&#34;:&#34;3337122228&#34;,&#34;btcPrice&#34;:&#34;0.000049902628701488&#34;},{&#34;uuid&#34;:&#34;WcwrkfNI4FUAe&#34;,&#34;symbol&#34;:&#34;BNB&#34;,&#34;name&#34;:&#34;Binance Coin&#34;,&#34;color&#34;:&#34;#e8b342&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1N19L_dZ/bnb.svg&#34;,&#34;marketCap&#34;:&#34;41735306106&#34;,&#34;price&#34;:&#34;288.07650301879784&#34;,&#34;listedAt&#34;:1503014400,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.75&#34;,&#34;rank&#34;:5,&#34;sparkline&#34;:[&#34;293.0339632140167&#34;,&#34;293.22632610181876&#34;,&#34;293.9558805163323&#34;,&#34;295.03284994285843&#34;,&#34;297.1816835216467&#34;,&#34;296.57165154567053&#34;,&#34;296.508723433339&#34;,&#34;296.27500319415884&#34;,&#34;295.95929231412583&#34;,&#34;295.2368476142224&#34;,&#34;294.87128482644766&#34;,&#34;294.9890632073065&#34;,&#34;294.53535412890847&#34;,&#34;294.27414059114204&#34;,&#34;294.2693258362167&#34;,&#34;294.8737143821679&#34;,&#34;294.2088468832473&#34;,&#34;293.9289085279649&#34;,&#34;293.69304197097887&#34;,&#34;293.9618989492412&#34;,&#34;293.7066994813715&#34;,&#34;293.40677313758624&#34;,&#34;293.2186341808331&#34;,&#34;293.09767105211586&#34;,&#34;289.6911749595674&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/WcwrkfNI4FUAe+binancecoin-bnb&#34;,&#34;24hVolume&#34;:&#34;878210887&#34;,&#34;btcPrice&#34;:&#34;0.014372502398028252&#34;},{&#34;uuid&#34;:&#34;-l8Mn2pVlRs-p&#34;,&#34;symbol&#34;:&#34;XRP&#34;,&#34;name&#34;:&#34;XRP&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1oPuTyfX/xrp.svg&#34;,&#34;marketCap&#34;:&#34;24920609128&#34;,&#34;price&#34;:&#34;0.49982593317694357&#34;,&#34;listedAt&#34;:1421798400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.98&#34;,&#34;rank&#34;:6,&#34;sparkline&#34;:[&#34;0.4936121327589804&#34;,&#34;0.49360848838582033&#34;,&#34;0.49055029363897007&#34;,&#34;0.49224624716168&#34;,&#34;0.49591130268111816&#34;,&#34;0.4951932790046478&#34;,&#34;0.49595231887605623&#34;,&#34;0.5006001796445517&#34;,&#34;0.5025322706608095&#34;,&#34;0.4988268286009171&#34;,&#34;0.49511942477701776&#34;,&#34;0.4937426468789185&#34;,&#34;0.49392075842330213&#34;,&#34;0.49529929614562507&#34;,&#34;0.49666602419481015&#34;,&#34;0.4986641332159618&#34;,&#34;0.49806377862398726&#34;,&#34;0.49558396360417767&#34;,&#34;0.4957764220208092&#34;,&#34;0.4954403967836592&#34;,&#34;0.4971992585220218&#34;,&#34;0.49696911564537327&#34;,&#34;0.49656652090853365&#34;,&#34;0.4963921027096113&#34;,&#34;0.5004555905476983&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/-l8Mn2pVlRs-p+xrp-xrp&#34;,&#34;24hVolume&#34;:&#34;2248384266&#34;,&#34;btcPrice&#34;:&#34;0.000024936950247253&#34;},{&#34;uuid&#34;:&#34;vSo2fu9iE1s0Y&#34;,&#34;symbol&#34;:&#34;BUSD&#34;,&#34;name&#34;:&#34;Binance USD&#34;,&#34;color&#34;:&#34;#f0b90b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/6SJHRfClq/busd.svg&#34;,&#34;marketCap&#34;:&#34;21385401831&#34;,&#34;price&#34;:&#34;1.0001759008383737&#34;,&#34;listedAt&#34;:1563197940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.11&#34;,&#34;rank&#34;:7,&#34;sparkline&#34;:[&#34;1.000400357879546&#34;,&#34;0.9997126067360349&#34;,&#34;1.0002864262312419&#34;,&#34;0.9990306013607333&#34;,&#34;0.9996281277025894&#34;,&#34;1.0001801913869788&#34;,&#34;1.000112080834013&#34;,&#34;0.9998221448047259&#34;,&#34;1.0006914671738822&#34;,&#34;1.0010002833226768&#34;,&#34;1.0001548975570813&#34;,&#34;1.0008648649990153&#34;,&#34;1.000217576130113&#34;,&#34;1.0003457350897718&#34;,&#34;0.9998352125731438&#34;,&#34;0.9993598514093966&#34;,&#34;1.0012320762499878&#34;,&#34;1.0017355712633162&#34;,&#34;0.9994405253689188&#34;,&#34;1.0004121131800483&#34;,&#34;0.9998238682840561&#34;,&#34;0.9998662771266619&#34;,&#34;1.0007009701908778&#34;,&#34;1.000246004815251&#34;,&#34;1.0000577567264675&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/vSo2fu9iE1s0Y+binanceusd-busd&#34;,&#34;24hVolume&#34;:&#34;6781282469&#34;,&#34;btcPrice&#34;:&#34;0.000049900045240106&#34;},{&#34;uuid&#34;:&#34;qzawljRxB5bYu&#34;,&#34;symbol&#34;:&#34;ADA&#34;,&#34;name&#34;:&#34;Cardano&#34;,&#34;color&#34;:&#34;#3cc8c8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ryY28nXhW/ada.svg&#34;,&#34;marketCap&#34;:&#34;13372334990&#34;,&#34;price&#34;:&#34;0.42980607622245887&#34;,&#34;listedAt&#34;:1506902400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.08&#34;,&#34;rank&#34;:8,&#34;sparkline&#34;:[&#34;0.42939125650203785&#34;,&#34;0.43033129399842107&#34;,&#34;0.431078111896934&#34;,&#34;0.4318859878379686&#34;,&#34;0.4357131618197005&#34;,&#34;0.43568381169625015&#34;,&#34;0.4346962887724402&#34;,&#34;0.4350131875819571&#34;,&#34;0.43469738319003864&#34;,&#34;0.43326982424487304&#34;,&#34;0.43263774502568014&#34;,&#34;0.43186553130359207&#34;,&#34;0.431263252334568&#34;,&#34;0.43111683005617996&#34;,&#34;0.4302721510566732&#34;,&#34;0.4320819334710277&#34;,&#34;0.4315871359240061&#34;,&#34;0.43020289947754364&#34;,&#34;0.42947852563217026&#34;,&#34;0.4299497834108291&#34;,&#34;0.42976407111236586&#34;,&#34;0.4299300749976332&#34;,&#34;0.4292928488934495&#34;,&#34;0.4288537810462236&#34;,&#34;0.4292925027383972&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qzawljRxB5bYu+cardano-ada&#34;,&#34;24hVolume&#34;:&#34;454398295&#34;,&#34;btcPrice&#34;:&#34;0.000021443570705908&#34;},{&#34;uuid&#34;:&#34;zNZHO_Sjf&#34;,&#34;symbol&#34;:&#34;SOL&#34;,&#34;name&#34;:&#34;Solana&#34;,&#34;color&#34;:&#34;#9cddec&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/yvUG4Qex5/solana.svg&#34;,&#34;marketCap&#34;:&#34;11968681930&#34;,&#34;price&#34;:&#34;33.69355772819829&#34;,&#34;listedAt&#34;:1586539320,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.36&#34;,&#34;rank&#34;:9,&#34;sparkline&#34;:[&#34;33.75977114711794&#34;,&#34;33.875549349957005&#34;,&#34;34.01919374746187&#34;,&#34;34.25583589027168&#34;,&#34;34.33192527709708&#34;,&#34;34.34811446907118&#34;,&#34;34.327771426896376&#34;,&#34;34.39163652190693&#34;,&#34;34.37437113302313&#34;,&#34;34.210536634835925&#34;,&#34;34.010295904098804&#34;,&#34;34.02936173846428&#34;,&#34;34.021656312267595&#34;,&#34;33.98410608259004&#34;,&#34;33.9795976643615&#34;,&#34;34.13790010083734&#34;,&#34;34.02841083781576&#34;,&#34;33.89251492144723&#34;,&#34;33.931082525634466&#34;,&#34;33.89395892616255&#34;,&#34;33.87604093134362&#34;,&#34;33.75070349924242&#34;,&#34;33.71877565269129&#34;,&#34;33.68935808665655&#34;,&#34;33.72769888706939&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/zNZHO_Sjf+solana-sol&#34;,&#34;24hVolume&#34;:&#34;1159595520&#34;,&#34;btcPrice&#34;:&#34;0.001681014363101436&#34;},{&#34;uuid&#34;:&#34;a91GCGd_u96cF&#34;,&#34;symbol&#34;:&#34;DOGE&#34;,&#34;name&#34;:&#34;Dogecoin&#34;,&#34;color&#34;:&#34;#c2a633&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/H1arXIuOZ/doge.svg&#34;,&#34;marketCap&#34;:&#34;8492158215&#34;,&#34;price&#34;:&#34;0.06400926579339672&#34;,&#34;listedAt&#34;:1391212800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.81&#34;,&#34;rank&#34;:10,&#34;sparkline&#34;:[&#34;0.06430001652573364&#34;,&#34;0.06437036408966565&#34;,&#34;0.06456880597204392&#34;,&#34;0.06502233408584714&#34;,&#34;0.06503812200415436&#34;,&#34;0.06503998592742274&#34;,&#34;0.06588520090979873&#34;,&#34;0.06601129659338578&#34;,&#34;0.06581176470778156&#34;,&#34;0.06553294673649296&#34;,&#34;0.06533678130300317&#34;,&#34;0.06510454153985605&#34;,&#34;0.0652560491458747&#34;,&#34;0.06506052972316402&#34;,&#34;0.06510842081151733&#34;,&#34;0.06540030324727246&#34;,&#34;0.06517726303881609&#34;,&#34;0.06480327467970981&#34;,&#34;0.06441097383830285&#34;,&#34;0.06427408194136594&#34;,&#34;0.06398680313872072&#34;,&#34;0.06394667133164467&#34;,&#34;0.06387224117079927&#34;,&#34;0.06399058225793666&#34;,&#34;0.0639027676630415&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/a91GCGd_u96cF+dogecoin-doge&#34;,&#34;24hVolume&#34;:&#34;397749508&#34;,&#34;btcPrice&#34;:&#34;0.00000319350351893&#34;},{&#34;uuid&#34;:&#34;uW2tk-ILY0ii&#34;,&#34;symbol&#34;:&#34;MATIC&#34;,&#34;name&#34;:&#34;Polygon&#34;,&#34;color&#34;:&#34;#8247e5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WulYRq14o/polygon.png&#34;,&#34;marketCap&#34;:&#34;7358059979&#34;,&#34;price&#34;:&#34;0.8403764386920258&#34;,&#34;listedAt&#34;:1558961160,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.37&#34;,&#34;rank&#34;:11,&#34;sparkline&#34;:[&#34;0.8437744357312483&#34;,&#34;0.8509094697048541&#34;,&#34;0.8529940032792178&#34;,&#34;0.8540440777034858&#34;,&#34;0.8516241240942773&#34;,&#34;0.8496744646261335&#34;,&#34;0.8469999329838124&#34;,&#34;0.8481864165795252&#34;,&#34;0.8466077838956056&#34;,&#34;0.84420107235308&#34;,&#34;0.845768857513781&#34;,&#34;0.8473892819252429&#34;,&#34;0.8462819651259675&#34;,&#34;0.8429793643795672&#34;,&#34;0.8407670428178173&#34;,&#34;0.8420135800610185&#34;,&#34;0.8396289208490684&#34;,&#34;0.8390404745692586&#34;,&#34;0.8436660275627255&#34;,&#34;0.8429031749192385&#34;,&#34;0.8446341761886833&#34;,&#34;0.8443896855731904&#34;,&#34;0.8419779361544042&#34;,&#34;0.8397174244018213&#34;,&#34;0.8394101853515191&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/uW2tk-ILY0ii+polygon-matic&#34;,&#34;24hVolume&#34;:&#34;451650998&#34;,&#34;btcPrice&#34;:&#34;0.000041927447236332&#34;},{&#34;uuid&#34;:&#34;25W7FG7om&#34;,&#34;symbol&#34;:&#34;DOT&#34;,&#34;name&#34;:&#34;Polkadot&#34;,&#34;color&#34;:&#34;#d64cA8&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/RsljYqnbu/polkadot.svg&#34;,&#34;marketCap&#34;:&#34;7327987322&#34;,&#34;price&#34;:&#34;6.369811510516303&#34;,&#34;listedAt&#34;:1598365200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.59&#34;,&#34;rank&#34;:12,&#34;sparkline&#34;:[&#34;6.39825823489953&#34;,&#34;6.409513679699773&#34;,&#34;6.429741803717237&#34;,&#34;6.456004351045777&#34;,&#34;6.48959781266168&#34;,&#34;6.502842344430388&#34;,&#34;6.494975652303574&#34;,&#34;6.498153272584972&#34;,&#34;6.477193762524708&#34;,&#34;6.4749696116534&#34;,&#34;6.446783196251528&#34;,&#34;6.4455937056715245&#34;,&#34;6.444181818657368&#34;,&#34;6.435492986540233&#34;,&#34;6.436547303303142&#34;,&#34;6.466312889575846&#34;,&#34;6.447237675580151&#34;,&#34;6.41666528202818&#34;,&#34;6.391078885651267&#34;,&#34;6.389256492722002&#34;,&#34;6.386113400232002&#34;,&#34;6.391088410611678&#34;,&#34;6.3824361673817265&#34;,&#34;6.38711565741988&#34;,&#34;6.370639494661183&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/25W7FG7om+polkadot-dot&#34;,&#34;24hVolume&#34;:&#34;318571161&#34;,&#34;btcPrice&#34;:&#34;0.000317797981614313&#34;},{&#34;uuid&#34;:&#34;xz24e0BjL&#34;,&#34;symbol&#34;:&#34;SHIB&#34;,&#34;name&#34;:&#34;Shiba Inu&#34;,&#34;color&#34;:&#34;#fda32b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/D69LfI-tm/shib.png&#34;,&#34;marketCap&#34;:&#34;6652005022&#34;,&#34;price&#34;:&#34;0.00001128307291804&#34;,&#34;listedAt&#34;:1620650373,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.77&#34;,&#34;rank&#34;:13,&#34;sparkline&#34;:[&#34;0.000011388926295804&#34;,&#34;0.000011400691835227&#34;,&#34;0.000011433362145591&#34;,&#34;0.000011491345676996&#34;,&#34;0.000011523072429884&#34;,&#34;0.000011526229724601&#34;,&#34;0.000011561968127599&#34;,&#34;0.000011585318815413&#34;,&#34;0.000011497977586636&#34;,&#34;0.000011468707147471&#34;,&#34;0.000011434052857603&#34;,&#34;0.000011440212842081&#34;,&#34;0.000011463249880005&#34;,&#34;0.000011478357121817&#34;,&#34;0.000011468846589264&#34;,&#34;0.000011471460823979&#34;,&#34;0.000011419041373176&#34;,&#34;0.000011362068240029&#34;,&#34;0.000011356567844287&#34;,&#34;0.000011325850427243&#34;,&#34;0.000011281429685408&#34;,&#34;0.000011278520019523&#34;,&#34;0.000011289443476598&#34;,&#34;0.000011275707218214&#34;,&#34;0.000011274685827114&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/xz24e0BjL+shibainu-shib&#34;,&#34;24hVolume&#34;:&#34;249682360&#34;,&#34;btcPrice&#34;:&#34;5.6292683e-10&#34;},{&#34;uuid&#34;:&#34;MoTuySvg7&#34;,&#34;symbol&#34;:&#34;DAI&#34;,&#34;name&#34;:&#34;Dai&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/mAZ_7LwOE/mutli-collateral-dai.svg&#34;,&#34;marketCap&#34;:&#34;6330297777&#34;,&#34;price&#34;:&#34;0.999944505469485&#34;,&#34;listedAt&#34;:1585574040,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.11&#34;,&#34;rank&#34;:14,&#34;sparkline&#34;:[&#34;1.0001442146345538&#34;,&#34;0.9995536933387662&#34;,&#34;0.9998892692241316&#34;,&#34;0.9989521525504824&#34;,&#34;0.9994530889305914&#34;,&#34;0.9997283495960755&#34;,&#34;0.9998553697654398&#34;,&#34;0.9995096259449162&#34;,&#34;1.00014999944705&#34;,&#34;1.000547118017383&#34;,&#34;1.0000224010848462&#34;,&#34;1.0003710762468978&#34;,&#34;0.9999957229272868&#34;,&#34;1.000138632701965&#34;,&#34;0.9996817467106764&#34;,&#34;0.9991772088092412&#34;,&#34;1.0006436972252386&#34;,&#34;1.0010853680974587&#34;,&#34;0.9996914621025487&#34;,&#34;1.0000324750917602&#34;,&#34;0.9998512870599147&#34;,&#34;0.9996994100302132&#34;,&#34;1.000348706734659&#34;,&#34;1.0000541769499978&#34;,&#34;0.9998893704838365&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/MoTuySvg7+dai-dai&#34;,&#34;24hVolume&#34;:&#34;119205007&#34;,&#34;btcPrice&#34;:&#34;0.000049888500631437&#34;},{&#34;uuid&#34;:&#34;qUhEFk1I61atv&#34;,&#34;symbol&#34;:&#34;TRX&#34;,&#34;name&#34;:&#34;TRON&#34;,&#34;color&#34;:&#34;#eb0029&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/behejNqQs/trx.svg&#34;,&#34;marketCap&#34;:&#34;5778782020&#34;,&#34;price&#34;:&#34;0.0625840748597491&#34;,&#34;listedAt&#34;:1505260800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.36&#34;,&#34;rank&#34;:15,&#34;sparkline&#34;:[&#34;0.06236865465429385&#34;,&#34;0.06246589991130288&#34;,&#34;0.06240843270681821&#34;,&#34;0.062249161574027316&#34;,&#34;0.06223099830897218&#34;,&#34;0.06264617941013605&#34;,&#34;0.06281452510294&#34;,&#34;0.06276275207762542&#34;,&#34;0.06268343841288901&#34;,&#34;0.06255691626086467&#34;,&#34;0.0624515709368335&#34;,&#34;0.062476261129714605&#34;,&#34;0.06256795462973794&#34;,&#34;0.06271174027019062&#34;,&#34;0.06268666754055147&#34;,&#34;0.06270030290942635&#34;,&#34;0.06269244944530315&#34;,&#34;0.06262885962844993&#34;,&#34;0.06254936036363117&#34;,&#34;0.06261284522092157&#34;,&#34;0.06264389726991014&#34;,&#34;0.06264798332735108&#34;,&#34;0.0625831711964946&#34;,&#34;0.06255397422463647&#34;,&#34;0.06256088048418898&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/qUhEFk1I61atv+tron-trx&#34;,&#34;24hVolume&#34;:&#34;454201328&#34;,&#34;btcPrice&#34;:&#34;0.000003122398934221&#34;},{&#34;uuid&#34;:&#34;Mtfb0obXVh59u&#34;,&#34;symbol&#34;:&#34;WETH&#34;,&#34;name&#34;:&#34;Wrapped Ether&#34;,&#34;color&#34;:&#34;#303030&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/KIviQyZlt/weth.svg&#34;,&#34;marketCap&#34;:&#34;5505713194&#34;,&#34;price&#34;:&#34;1363.2031078710097&#34;,&#34;listedAt&#34;:1600259445,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.97&#34;,&#34;rank&#34;:16,&#34;sparkline&#34;:[&#34;1349.13607829603&#34;,&#34;1351.4689477854226&#34;,&#34;1354.685548232379&#34;,&#34;1361.146588456366&#34;,&#34;1373.1112591782544&#34;,&#34;1375.4567308292258&#34;,&#34;1373.5021921077062&#34;,&#34;1374.5798088672896&#34;,&#34;1374.2047922199295&#34;,&#34;1370.3789875745763&#34;,&#34;1366.6984725193515&#34;,&#34;1364.1249946067635&#34;,&#34;1361.8843726971165&#34;,&#34;1360.6976138430425&#34;,&#34;1360.9309038296853&#34;,&#34;1368.6885054347988&#34;,&#34;1370.5874450713914&#34;,&#34;1365.461962666511&#34;,&#34;1364.4735182510437&#34;,&#34;1365.7899220819745&#34;,&#34;1362.8480784629835&#34;,&#34;1363.3474812485113&#34;,&#34;1360.955305440429&#34;,&#34;1357.8891999472016&#34;,&#34;1360.0744275952018&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Mtfb0obXVh59u+wrappedether-weth&#34;,&#34;24hVolume&#34;:&#34;199194192&#34;,&#34;btcPrice&#34;:&#34;0.06801193339811255&#34;},{&#34;uuid&#34;:&#34;_H5FVG9iW&#34;,&#34;symbol&#34;:&#34;UNI&#34;,&#34;name&#34;:&#34;Uniswap&#34;,&#34;color&#34;:&#34;#ff007a&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1heSvUgtl/uniswap-v2.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;5414429579&#34;,&#34;price&#34;:&#34;6.9724386600079535&#34;,&#34;listedAt&#34;:1600323371,&#34;tier&#34;:1,&#34;change&#34;:&#34;3.13&#34;,&#34;rank&#34;:17,&#34;sparkline&#34;:[&#34;6.7736642117361905&#34;,&#34;6.756076217414185&#34;,&#34;6.793449625987095&#34;,&#34;6.865859893412923&#34;,&#34;6.937483195481218&#34;,&#34;6.979515536920047&#34;,&#34;6.9478029429015224&#34;,&#34;6.9284625247560845&#34;,&#34;6.907914104712911&#34;,&#34;6.874769405900166&#34;,&#34;6.896114575710537&#34;,&#34;6.899743011599772&#34;,&#34;6.860135783871776&#34;,&#34;6.828443224761433&#34;,&#34;6.849180894331325&#34;,&#34;6.905242766177328&#34;,&#34;6.894209064572883&#34;,&#34;6.840607457650447&#34;,&#34;6.8472846441063595&#34;,&#34;6.887338045193232&#34;,&#34;6.895074852688421&#34;,&#34;6.8963663619066375&#34;,&#34;6.898867588802628&#34;,&#34;6.920380453888417&#34;,&#34;6.942104981178551&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/_H5FVG9iW+uniswap-uni&#34;,&#34;24hVolume&#34;:&#34;205535227&#34;,&#34;btcPrice&#34;:&#34;0.000347863815031558&#34;},{&#34;uuid&#34;:&#34;dvUj0CzDZ&#34;,&#34;symbol&#34;:&#34;AVAX&#34;,&#34;name&#34;:&#34;Avalanche&#34;,&#34;color&#34;:&#34;#e84242&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/S0C6Cw2-w/avax-avalanche.png&#34;,&#34;marketCap&#34;:&#34;5073607401&#34;,&#34;price&#34;:&#34;17.135049508650177&#34;,&#34;listedAt&#34;:1600961596,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.72&#34;,&#34;rank&#34;:18,&#34;sparkline&#34;:[&#34;17.254732588660875&#34;,&#34;17.31200366632601&#34;,&#34;17.356953304800275&#34;,&#34;17.445230081280297&#34;,&#34;17.540093125466566&#34;,&#34;17.549902978316823&#34;,&#34;17.521869854955458&#34;,&#34;17.57089756434244&#34;,&#34;17.511675802061724&#34;,&#34;17.428511702438602&#34;,&#34;17.401335012223097&#34;,&#34;17.365417972781653&#34;,&#34;17.33472548514147&#34;,&#34;17.32010883574378&#34;,&#34;17.321443260238883&#34;,&#34;17.384425161490732&#34;,&#34;17.365204350676155&#34;,&#34;17.330227378674756&#34;,&#34;17.297832611647273&#34;,&#34;17.269149869433907&#34;,&#34;17.235606352060426&#34;,&#34;17.226380111908966&#34;,&#34;17.183610217148228&#34;,&#34;17.154228049831918&#34;,&#34;17.14073387012898&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/dvUj0CzDZ+avalanche-avax&#34;,&#34;24hVolume&#34;:&#34;345424203&#34;,&#34;btcPrice&#34;:&#34;0.000854889369916218&#34;},{&#34;uuid&#34;:&#34;x4WXHge-vvFY&#34;,&#34;symbol&#34;:&#34;WBTC&#34;,&#34;name&#34;:&#34;Wrapped BTC&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/o3-8cvCHu/wbtc[1].svg&#34;,&#34;marketCap&#34;:&#34;4906829994&#34;,&#34;price&#34;:&#34;20047.79682916327&#34;,&#34;listedAt&#34;:1549894980,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.02&#34;,&#34;rank&#34;:19,&#34;sparkline&#34;:[&#34;20051.22405616085&#34;,&#34;20110.602103151356&#34;,&#34;20155.552573913872&#34;,&#34;20251.49133520362&#34;,&#34;20298.639411610195&#34;,&#34;20350.38567650615&#34;,&#34;20339.07972321146&#34;,&#34;20380.795072455694&#34;,&#34;20324.41856067999&#34;,&#34;20246.294276116678&#34;,&#34;20211.982370889044&#34;,&#34;20178.180919686867&#34;,&#34;20155.929604942034&#34;,&#34;20129.439096326205&#34;,&#34;20156.562287027326&#34;,&#34;20228.537582610592&#34;,&#34;20179.511202594982&#34;,&#34;20084.306927875485&#34;,&#34;20035.856862900007&#34;,&#34;20058.999071960046&#34;,&#34;20064.62454650722&#34;,&#34;20106.044277327273&#34;,&#34;20064.093791351774&#34;,&#34;20037.47288718635&#34;,&#34;20041.108561591907&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/x4WXHge-vvFY+wrappedbtc-wbtc&#34;,&#34;24hVolume&#34;:&#34;65760273&#34;,&#34;btcPrice&#34;:&#34;1.000210030956709&#34;},{&#34;uuid&#34;:&#34;Knsels4_Ol-Ny&#34;,&#34;symbol&#34;:&#34;ATOM&#34;,&#34;name&#34;:&#34;Cosmos&#34;,&#34;color&#34;:&#34;#5064fb&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HJzHboruM/atom.svg&#34;,&#34;marketCap&#34;:&#34;4076493038&#34;,&#34;price&#34;:&#34;13.09480102500321&#34;,&#34;listedAt&#34;:1552520100,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.88&#34;,&#34;rank&#34;:20,&#34;sparkline&#34;:[&#34;12.874689417804111&#34;,&#34;12.977240987750184&#34;,&#34;12.999694810987828&#34;,&#34;13.05809448077896&#34;,&#34;13.134456340172274&#34;,&#34;13.166373400713976&#34;,&#34;13.174046618107784&#34;,&#34;13.156595139367123&#34;,&#34;13.136832518684233&#34;,&#34;13.059151743839621&#34;,&#34;13.024245747988846&#34;,&#34;13.009744454798474&#34;,&#34;13.00236212430498&#34;,&#34;12.99445359709676&#34;,&#34;12.964318799206644&#34;,&#34;13.07464583651195&#34;,&#34;13.11135570380746&#34;,&#34;13.089177553297818&#34;,&#34;13.154363371335887&#34;,&#34;13.339019272614035&#34;,&#34;13.38059705032621&#34;,&#34;13.329070205628852&#34;,&#34;13.167955047810006&#34;,&#34;13.134075321985312&#34;,&#34;13.114541673330065&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Knsels4_Ol-Ny+cosmos-atom&#34;,&#34;24hVolume&#34;:&#34;441970634&#34;,&#34;btcPrice&#34;:&#34;0.000653316244682686&#34;},{&#34;uuid&#34;:&#34;PDKcptVnzJTmN&#34;,&#34;symbol&#34;:&#34;OKB&#34;,&#34;name&#34;:&#34;OKB&#34;,&#34;color&#34;:&#34;#2d60e0&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xcZdYtX6E/okx.png&#34;,&#34;marketCap&#34;:&#34;3937462684&#34;,&#34;price&#34;:&#34;15.647975432818738&#34;,&#34;listedAt&#34;:1538524800,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.55&#34;,&#34;rank&#34;:21,&#34;sparkline&#34;:[&#34;15.560986349984056&#34;,&#34;15.561097044869294&#34;,&#34;15.520784658634735&#34;,&#34;15.569346159010081&#34;,&#34;15.638549620210085&#34;,&#34;15.735124066059186&#34;,&#34;15.725775504001712&#34;,&#34;15.757115892473582&#34;,&#34;15.718908551335334&#34;,&#34;15.673810075767081&#34;,&#34;15.65842199459123&#34;,&#34;15.650604457573523&#34;,&#34;15.639913677498697&#34;,&#34;15.635944674900246&#34;,&#34;15.635934011171274&#34;,&#34;15.780030015908347&#34;,&#34;15.770980376150868&#34;,&#34;15.718037406084202&#34;,&#34;15.73374390923561&#34;,&#34;15.698092217209963&#34;,&#34;15.645888388583133&#34;,&#34;15.662334941562188&#34;,&#34;15.657692862530935&#34;,&#34;15.658427678670678&#34;,&#34;15.651430723013112&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/PDKcptVnzJTmN+okb-okb&#34;,&#34;24hVolume&#34;:&#34;19651947&#34;,&#34;btcPrice&#34;:&#34;0.000780697356694166&#34;},{&#34;uuid&#34;:&#34;D7B1x_ks7WhV5&#34;,&#34;symbol&#34;:&#34;LTC&#34;,&#34;name&#34;:&#34;Litecoin&#34;,&#34;color&#34;:&#34;#345d9d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BUvPxmc9o/ltcnew.svg&#34;,&#34;marketCap&#34;:&#34;3815378045&#34;,&#34;price&#34;:&#34;53.83985676524231&#34;,&#34;listedAt&#34;:1382572800,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.99&#34;,&#34;rank&#34;:22,&#34;sparkline&#34;:[&#34;54.290318948555985&#34;,&#34;54.34626044318356&#34;,&#34;54.51609336019526&#34;,&#34;54.71164008880007&#34;,&#34;54.84017873250239&#34;,&#34;54.85783258935826&#34;,&#34;54.84912409601398&#34;,&#34;54.79423800415394&#34;,&#34;54.77093043110981&#34;,&#34;54.48254700568355&#34;,&#34;54.35863553823271&#34;,&#34;54.35076863809225&#34;,&#34;54.43299144548598&#34;,&#34;54.449331741568095&#34;,&#34;54.488412361727285&#34;,&#34;54.59373560051482&#34;,&#34;54.57222140808168&#34;,&#34;54.40248925303921&#34;,&#34;54.262001807882896&#34;,&#34;54.387401501472056&#34;,&#34;54.22668757016522&#34;,&#34;54.28815807212204&#34;,&#34;54.12985595999811&#34;,&#34;54.040357931421696&#34;,&#34;53.819644242365854&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/D7B1x_ks7WhV5+litecoin-ltc&#34;,&#34;24hVolume&#34;:&#34;480966543&#34;,&#34;btcPrice&#34;:&#34;0.002686138794240532&#34;},{&#34;uuid&#34;:&#34;NfeOYfNcl&#34;,&#34;symbol&#34;:&#34;FTT&#34;,&#34;name&#34;:&#34;FTX Token&#34;,&#34;color&#34;:&#34;#77d9ed&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/WyBm4_EzM/ftx-exchange.svg&#34;,&#34;marketCap&#34;:&#34;3290916379&#34;,&#34;price&#34;:&#34;24.653210359782037&#34;,&#34;listedAt&#34;:1566222960,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.17&#34;,&#34;rank&#34;:23,&#34;sparkline&#34;:[&#34;24.68367396586351&#34;,&#34;24.727036895780905&#34;,&#34;24.763295856196095&#34;,&#34;24.910218336026045&#34;,&#34;25.00389208839861&#34;,&#34;25.02149477638343&#34;,&#34;25.038245964336557&#34;,&#34;25.10263308087383&#34;,&#34;25.055084523451587&#34;,&#34;24.953428269092957&#34;,&#34;24.910919655194686&#34;,&#34;24.872098392385602&#34;,&#34;24.84677526683583&#34;,&#34;24.829253587428784&#34;,&#34;24.85251767680278&#34;,&#34;24.97486287058912&#34;,&#34;24.903255647556698&#34;,&#34;24.786341676773137&#34;,&#34;24.757136569969543&#34;,&#34;24.77671361589168&#34;,&#34;24.775220953410248&#34;,&#34;24.77964437393726&#34;,&#34;24.72653513513892&#34;,&#34;24.691788500146682&#34;,&#34;24.66401645750347&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/NfeOYfNcl+ftxtoken-ftt&#34;,&#34;24hVolume&#34;:&#34;39306936&#34;,&#34;btcPrice&#34;:&#34;0.001229979957761225&#34;},{&#34;uuid&#34;:&#34;hnfQfsYfeIGUQ&#34;,&#34;symbol&#34;:&#34;ETC&#34;,&#34;name&#34;:&#34;Ethereum Classic&#34;,&#34;color&#34;:&#34;#699070&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/rJfyor__W/etc.svg&#34;,&#34;marketCap&#34;:&#34;3274062210&#34;,&#34;price&#34;:&#34;28.148648846960842&#34;,&#34;listedAt&#34;:1469577600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.97&#34;,&#34;rank&#34;:24,&#34;sparkline&#34;:[&#34;27.570158653943103&#34;,&#34;27.588406181551&#34;,&#34;27.632000320786197&#34;,&#34;27.72407252402464&#34;,&#34;28.315134280524177&#34;,&#34;28.701663622553088&#34;,&#34;28.455510043787736&#34;,&#34;28.462425971003423&#34;,&#34;28.431530396764664&#34;,&#34;28.27063736534509&#34;,&#34;28.144183615836692&#34;,&#34;28.161764285728264&#34;,&#34;28.24699314130158&#34;,&#34;28.321875873800117&#34;,&#34;28.291281307917103&#34;,&#34;28.34170165566859&#34;,&#34;28.256604100945246&#34;,&#34;28.12194374001258&#34;,&#34;28.04349870994536&#34;,&#34;28.015776679784064&#34;,&#34;27.993885151967067&#34;,&#34;27.991073535808457&#34;,&#34;27.977179429599857&#34;,&#34;27.972384153914437&#34;,&#34;28.02967430353566&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/hnfQfsYfeIGUQ+ethereumclassic-etc&#34;,&#34;24hVolume&#34;:&#34;590345099&#34;,&#34;btcPrice&#34;:&#34;0.001404371820730553&#34;},{&#34;uuid&#34;:&#34;3mVx2FX_iJFp5&#34;,&#34;symbol&#34;:&#34;XMR&#34;,&#34;name&#34;:&#34;Monero&#34;,&#34;color&#34;:&#34;#ff7519&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Syz-oSd_Z/xmr.svg&#34;,&#34;marketCap&#34;:&#34;2708440509&#34;,&#34;price&#34;:&#34;148.95028413026253&#34;,&#34;listedAt&#34;:1422489600,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.89&#34;,&#34;rank&#34;:25,&#34;sparkline&#34;:[&#34;146.0468911817187&#34;,&#34;146.24477782260104&#34;,&#34;146.1611566569247&#34;,&#34;146.98453497183345&#34;,&#34;147.5235053627857&#34;,&#34;147.81325448931747&#34;,&#34;148.28163857932623&#34;,&#34;149.09225665366174&#34;,&#34;147.89654979841282&#34;,&#34;145.94227441308016&#34;,&#34;145.47852845356343&#34;,&#34;145.43866042477168&#34;,&#34;145.09498381145283&#34;,&#34;145.00142611903777&#34;,&#34;145.08759558818358&#34;,&#34;145.5453373285789&#34;,&#34;144.85329513444134&#34;,&#34;144.49414383580302&#34;,&#34;144.05426723836575&#34;,&#34;144.03338234964409&#34;,&#34;143.95047428899073&#34;,&#34;144.06793141358014&#34;,&#34;144.9336130415516&#34;,&#34;146.03304503760864&#34;,&#34;146.64562578496188&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/3mVx2FX_iJFp5+monero-xmr&#34;,&#34;24hVolume&#34;:&#34;127389413&#34;,&#34;btcPrice&#34;:&#34;0.007431318741429927&#34;},{&#34;uuid&#34;:&#34;TpHE2IShQw-sJ&#34;,&#34;symbol&#34;:&#34;ALGO&#34;,&#34;name&#34;:&#34;Algorand&#34;,&#34;color&#34;:null,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/lzbmCkUGB/algo.svg&#34;,&#34;marketCap&#34;:&#34;2467282282&#34;,&#34;price&#34;:&#34;0.3517090758779514&#34;,&#34;listedAt&#34;:1562082540,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.04&#34;,&#34;rank&#34;:26,&#34;sparkline&#34;:[&#34;0.3515342629988674&#34;,&#34;0.3521676081477334&#34;,&#34;0.35309919565030656&#34;,&#34;0.3541903724348078&#34;,&#34;0.3566526799226524&#34;,&#34;0.3568785361406288&#34;,&#34;0.356277927477052&#34;,&#34;0.35771179232442063&#34;,&#34;0.3576900736402804&#34;,&#34;0.35714880263121757&#34;,&#34;0.3558025051327707&#34;,&#34;0.35486724067376885&#34;,&#34;0.3544853650160468&#34;,&#34;0.3542064044813385&#34;,&#34;0.3546713478004645&#34;,&#34;0.3561494534958878&#34;,&#34;0.3545625893380675&#34;,&#34;0.35282669082243273&#34;,&#34;0.3527681768918396&#34;,&#34;0.35326837959402335&#34;,&#34;0.3529278529125966&#34;,&#34;0.3518398677577421&#34;,&#34;0.3511555905614255&#34;,&#34;0.35041871451434975&#34;,&#34;0.3509473897239541&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/TpHE2IShQw-sJ+algorand-algo&#34;,&#34;24hVolume&#34;:&#34;113651034&#34;,&#34;btcPrice&#34;:&#34;0.000017547212228324&#34;},{&#34;uuid&#34;:&#34;f3iaFeCKEmkaZ&#34;,&#34;symbol&#34;:&#34;XLM&#34;,&#34;name&#34;:&#34;Stellar&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/78CxK1xsp/Stellar_symbol_black_RGB.svg&#34;,&#34;marketCap&#34;:&#34;2437586710&#34;,&#34;price&#34;:&#34;0.12063962122143003&#34;,&#34;listedAt&#34;:1484611200,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.39&#34;,&#34;rank&#34;:27,&#34;sparkline&#34;:[&#34;0.11886242818438897&#34;,&#34;0.11904460107249429&#34;,&#34;0.11897292310970312&#34;,&#34;0.11903996874083529&#34;,&#34;0.11937706226353863&#34;,&#34;0.11928353420436945&#34;,&#34;0.1193565730892674&#34;,&#34;0.11973240195034526&#34;,&#34;0.11981307931058192&#34;,&#34;0.11920048145769879&#34;,&#34;0.11897308489799317&#34;,&#34;0.11909057039936508&#34;,&#34;0.11882782289002976&#34;,&#34;0.11865911600653936&#34;,&#34;0.11887162326050421&#34;,&#34;0.1197869137342681&#34;,&#34;0.11950079292447616&#34;,&#34;0.11928192026253723&#34;,&#34;0.11961526003702445&#34;,&#34;0.11942045477321465&#34;,&#34;0.1201747085476815&#34;,&#34;0.12021463550029339&#34;,&#34;0.12017073726753241&#34;,&#34;0.12013352811417688&#34;,&#34;0.12028025924273718&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/f3iaFeCKEmkaZ+stellar-xlm&#34;,&#34;24hVolume&#34;:&#34;191169336&#34;,&#34;btcPrice&#34;:&#34;0.000006018863833504&#34;},{&#34;uuid&#34;:&#34;ZlZpzOJo43mIo&#34;,&#34;symbol&#34;:&#34;BCH&#34;,&#34;name&#34;:&#34;Bitcoin Cash&#34;,&#34;color&#34;:&#34;#8dc451&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/By8ziihX7/bch.svg&#34;,&#34;marketCap&#34;:&#34;2277356237&#34;,&#34;price&#34;:&#34;119.03761612598858&#34;,&#34;listedAt&#34;:1541808000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.74&#34;,&#34;rank&#34;:28,&#34;sparkline&#34;:[&#34;122.31973609743602&#34;,&#34;122.22980221659442&#34;,&#34;122.20905014823225&#34;,&#34;122.74951121547188&#34;,&#34;123.19407940957747&#34;,&#34;122.98427770012786&#34;,&#34;122.7489561074102&#34;,&#34;122.622367281349&#34;,&#34;122.2248259758892&#34;,&#34;121.53652687792291&#34;,&#34;121.05542080331115&#34;,&#34;121.09570305656003&#34;,&#34;121.35752961593165&#34;,&#34;121.36902633977782&#34;,&#34;121.44672955438497&#34;,&#34;121.88205553929767&#34;,&#34;121.74220497866185&#34;,&#34;121.27301183132361&#34;,&#34;120.83463832548642&#34;,&#34;120.93641071768519&#34;,&#34;120.8315292745319&#34;,&#34;120.63797684775939&#34;,&#34;120.29930074523377&#34;,&#34;119.25821090604583&#34;,&#34;118.92270187492353&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ZlZpzOJo43mIo+bitcoincash-bch&#34;,&#34;24hVolume&#34;:&#34;208226792&#34;,&#34;btcPrice&#34;:&#34;0.005938937765829162&#34;},{&#34;uuid&#34;:&#34;9_jH48RBW&#34;,&#34;symbol&#34;:&#34;BTCB&#34;,&#34;name&#34;:&#34;Bitcoin BEP2&#34;,&#34;color&#34;:&#34;#ff9d14&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Swr_SeZio/4023.png&#34;,&#34;marketCap&#34;:&#34;2251605091&#34;,&#34;price&#34;:&#34;20014.08957204792&#34;,&#34;listedAt&#34;:1629334963,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.51&#34;,&#34;rank&#34;:29,&#34;sparkline&#34;:[&#34;20050.866782919587&#34;,&#34;20079.593668466954&#34;,&#34;20158.93074005341&#34;,&#34;20211.814480937664&#34;,&#34;20307.580914788625&#34;,&#34;20353.1967711348&#34;,&#34;20335.218938308455&#34;,&#34;20375.58916773032&#34;,&#34;20340.90091666203&#34;,&#34;20284.80368318787&#34;,&#34;20235.020272755173&#34;,&#34;20210.068846560098&#34;,&#34;20157.555056397156&#34;,&#34;20146.5180972688&#34;,&#34;20140.794626465147&#34;,&#34;20202.949742622426&#34;,&#34;20208.651894210692&#34;,&#34;20117.51422062349&#34;,&#34;20009.502650497943&#34;,&#34;20059.31662977737&#34;,&#34;20036.56127068938&#34;,&#34;20104.861221809813&#34;,&#34;20091.709684423215&#34;,&#34;20045.856019510316&#34;,&#34;20049.03126180772&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/9_jH48RBW+bitcoinbep2-btcb&#34;,&#34;24hVolume&#34;:&#34;24914977&#34;,&#34;btcPrice&#34;:&#34;0.9985283331137936&#34;},{&#34;uuid&#34;:&#34;65PHZTpmE55b&#34;,&#34;symbol&#34;:&#34;CRO&#34;,&#34;name&#34;:&#34;Cronos&#34;,&#34;color&#34;:&#34;#01275d&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/2o91jm73M/cro.svg&#34;,&#34;marketCap&#34;:&#34;2207300988&#34;,&#34;price&#34;:&#34;0.10975082637822149&#34;,&#34;listedAt&#34;:1548953220,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.23&#34;,&#34;rank&#34;:30,&#34;sparkline&#34;:[&#34;0.10964137644253408&#34;,&#34;0.11000036549663396&#34;,&#34;0.11025327160010467&#34;,&#34;0.11070373939431584&#34;,&#34;0.11104511865941227&#34;,&#34;0.11109857702436873&#34;,&#34;0.1110924929009018&#34;,&#34;0.11126352122246669&#34;,&#34;0.11094331934275127&#34;,&#34;0.11059613120859749&#34;,&#34;0.11052423450494585&#34;,&#34;0.11035632946250828&#34;,&#34;0.11018785138110065&#34;,&#34;0.11015497144568412&#34;,&#34;0.11030215116960462&#34;,&#34;0.1107740419247218&#34;,&#34;0.1105076809610223&#34;,&#34;0.11029154187446003&#34;,&#34;0.11018273316408501&#34;,&#34;0.11017177693325447&#34;,&#34;0.11029393462225603&#34;,&#34;0.11033990968249555&#34;,&#34;0.11003104029536713&#34;,&#34;0.10974935814949374&#34;,&#34;0.10970607763261775&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/65PHZTpmE55b+cronos-cro&#34;,&#34;24hVolume&#34;:&#34;28810026&#34;,&#34;btcPrice&#34;:&#34;0.000005475608037368&#34;},{&#34;uuid&#34;:&#34;DCrsaMv68&#34;,&#34;symbol&#34;:&#34;NEAR&#34;,&#34;name&#34;:&#34;NEAR Protocol&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Cth83dCnl/near.png&#34;,&#34;marketCap&#34;:&#34;2205249799&#34;,&#34;price&#34;:&#34;3.627984473135986&#34;,&#34;listedAt&#34;:1615164591,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.37&#34;,&#34;rank&#34;:31,&#34;sparkline&#34;:[&#34;3.6761672965431966&#34;,&#34;3.690346882494526&#34;,&#34;3.694321108085478&#34;,&#34;3.7048560012992415&#34;,&#34;3.73751823983082&#34;,&#34;3.728316938499929&#34;,&#34;3.726590894963946&#34;,&#34;3.7324865567596524&#34;,&#34;3.7152125117728954&#34;,&#34;3.684688319254966&#34;,&#34;3.6728907302323908&#34;,&#34;3.6708852928250395&#34;,&#34;3.6833968889039204&#34;,&#34;3.681675727464209&#34;,&#34;3.6735385303585844&#34;,&#34;3.68851735340297&#34;,&#34;3.6772074269701442&#34;,&#34;3.6556508817867934&#34;,&#34;3.6478753216831095&#34;,&#34;3.6532070737188658&#34;,&#34;3.6532539985117367&#34;,&#34;3.655846529561597&#34;,&#34;3.6496531589122956&#34;,&#34;3.641619150851093&#34;,&#34;3.6350448305036016&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/DCrsaMv68+nearprotocol-near&#34;,&#34;24hVolume&#34;:&#34;193055825&#34;,&#34;btcPrice&#34;:&#34;0.000181004750452534&#34;},{&#34;uuid&#34;:&#34;AaQUAs2Mc&#34;,&#34;symbol&#34;:&#34;LUNC&#34;,&#34;name&#34;:&#34;Terra Classic&#34;,&#34;color&#34;:&#34;#0E3CA5&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/F-PJdF8Um/LUNA.svg&#34;,&#34;marketCap&#34;:&#34;1915739581&#34;,&#34;price&#34;:&#34;0.000290668551149527&#34;,&#34;listedAt&#34;:1565957940,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.63&#34;,&#34;rank&#34;:32,&#34;sparkline&#34;:[&#34;0.000297478449646947&#34;,&#34;0.000299529084347598&#34;,&#34;0.00030173904471774&#34;,&#34;0.000299746687090643&#34;,&#34;0.000298962325969473&#34;,&#34;0.000302229563415801&#34;,&#34;0.0003030758001857&#34;,&#34;0.000301535490436218&#34;,&#34;0.000300445667829273&#34;,&#34;0.000299094184910521&#34;,&#34;0.000295609729343043&#34;,&#34;0.000294595264457835&#34;,&#34;0.000296162404748322&#34;,&#34;0.000295911048047322&#34;,&#34;0.000296318063575689&#34;,&#34;0.000297253381599039&#34;,&#34;0.000296125095840895&#34;,&#34;0.000294696904499816&#34;,&#34;0.000295907924600568&#34;,&#34;0.00029534892924621&#34;,&#34;0.000294197608224041&#34;,&#34;0.000291797039411577&#34;,&#34;0.000290714602896856&#34;,&#34;0.000292152287203858&#34;,&#34;0.000291804788850734&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/AaQUAs2Mc+terraclassic-lunc&#34;,&#34;24hVolume&#34;:&#34;70268165&#34;,&#34;btcPrice&#34;:&#34;1.4501822969e-8&#34;},{&#34;uuid&#34;:&#34;08CsQa-Ov&#34;,&#34;symbol&#34;:&#34;WEMIX&#34;,&#34;name&#34;:&#34;WEMIX TOKEN&#34;,&#34;color&#34;:&#34;#9bdc70&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1N84MQsoO/7548.png&#34;,&#34;marketCap&#34;:&#34;1808150409&#34;,&#34;price&#34;:&#34;1.808150409283823&#34;,&#34;listedAt&#34;:1638249982,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.04&#34;,&#34;rank&#34;:33,&#34;sparkline&#34;:[&#34;1.8196832340882974&#34;,&#34;1.8253360632832465&#34;,&#34;1.8285082236543482&#34;,&#34;1.8347555694945936&#34;,&#34;1.8381094917557752&#34;,&#34;1.833948476565528&#34;,&#34;1.8341444284523087&#34;,&#34;1.8382997009905768&#34;,&#34;1.8395788091068113&#34;,&#34;1.8309599664678795&#34;,&#34;1.8205198309645931&#34;,&#34;1.8134085608529036&#34;,&#34;1.8119544734225412&#34;,&#34;1.807618265715021&#34;,&#34;1.8075767051605849&#34;,&#34;1.8193091119729712&#34;,&#34;1.8198679437765712&#34;,&#34;1.8137572972729035&#34;,&#34;1.8098615034125096&#34;,&#34;1.8192111410361753&#34;,&#34;1.8152701115769376&#34;,&#34;1.8113797407010894&#34;,&#34;1.809695001570721&#34;,&#34;1.8027164883512778&#34;,&#34;1.8056138298343074&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/08CsQa-Ov+wemixtoken-wemix&#34;,&#34;24hVolume&#34;:&#34;12232574&#34;,&#34;btcPrice&#34;:&#34;0.000090210919047888&#34;},{&#34;uuid&#34;:&#34;QQ0NCmjVq&#34;,&#34;symbol&#34;:&#34;FLOW&#34;,&#34;name&#34;:&#34;Flow&#34;,&#34;color&#34;:&#34;#9efad7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/xh8X8QBss/flow.png&#34;,&#34;marketCap&#34;:&#34;1767462928&#34;,&#34;price&#34;:&#34;1.7057160087158851&#34;,&#34;listedAt&#34;:1614963736,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.26&#34;,&#34;rank&#34;:34,&#34;sparkline&#34;:[&#34;1.6890181082125528&#34;,&#34;1.6914682243282655&#34;,&#34;1.6953510291771732&#34;,&#34;1.7032242512223692&#34;,&#34;1.7136242682184002&#34;,&#34;1.7136009177534397&#34;,&#34;1.7149865876802517&#34;,&#34;1.7184074490109524&#34;,&#34;1.710995334162153&#34;,&#34;1.7048864523565708&#34;,&#34;1.699721441021863&#34;,&#34;1.7001328102878455&#34;,&#34;1.6965434775015982&#34;,&#34;1.6926828494491937&#34;,&#34;1.692977321870199&#34;,&#34;1.7017665013498764&#34;,&#34;1.6974412388606024&#34;,&#34;1.6883688699999264&#34;,&#34;1.6875445311679127&#34;,&#34;1.7026917327614273&#34;,&#34;1.702097981878996&#34;,&#34;1.706486937299897&#34;,&#34;1.7027386214094398&#34;,&#34;1.699999180886439&#34;,&#34;1.7047711097527554&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/QQ0NCmjVq+flow-flow&#34;,&#34;24hVolume&#34;:&#34;118580352&#34;,&#34;btcPrice&#34;:&#34;0.00008510033678111&#34;},{&#34;uuid&#34;:&#34;SbWqqTui-&#34;,&#34;symbol&#34;:&#34;ENS&#34;,&#34;name&#34;:&#34;EnergySwap&#34;,&#34;color&#34;:&#34;#ffda55&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/fmYxEUV5a/cropped-logo37-Converted-01-192x192.png&#34;,&#34;marketCap&#34;:&#34;1725716377&#34;,&#34;price&#34;:&#34;17.257163771405427&#34;,&#34;listedAt&#34;:1626134763,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.80&#34;,&#34;rank&#34;:35,&#34;sparkline&#34;:[&#34;17.076100017021975&#34;,&#34;17.06662658749615&#34;,&#34;17.23481897642682&#34;,&#34;17.392304714899172&#34;,&#34;17.34806076924321&#34;,&#34;17.37896364967073&#34;,&#34;17.3987048654455&#34;,&#34;17.64170122029659&#34;,&#34;17.57215127384117&#34;,&#34;17.43018850760622&#34;,&#34;17.342435916635672&#34;,&#34;17.43421229530948&#34;,&#34;17.326630535156816&#34;,&#34;17.38049581884555&#34;,&#34;17.34490252708747&#34;,&#34;17.416262833529142&#34;,&#34;17.38170991715996&#34;,&#34;17.345059434798504&#34;,&#34;17.452270910242337&#34;,&#34;17.533734935028292&#34;,&#34;17.40508937928887&#34;,&#34;17.33541860238796&#34;,&#34;17.14838370106195&#34;,&#34;17.2545597608494&#34;,&#34;17.267555975917823&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/SbWqqTui-+energyswap-ens&#34;,&#34;24hVolume&#34;:&#34;18740826&#34;,&#34;btcPrice&#34;:&#34;0.000860834790018754&#34;},{&#34;uuid&#34;:&#34;ymQub4fuB&#34;,&#34;symbol&#34;:&#34;FIL&#34;,&#34;name&#34;:&#34;Filecoin&#34;,&#34;color&#34;:&#34;#0090ff&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/vUmvv-IQA/FIL3-filecoin.svg?size=48x48&#34;,&#34;marketCap&#34;:&#34;1631790561&#34;,&#34;price&#34;:&#34;5.552059874687369&#34;,&#34;listedAt&#34;:1602839473,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.40&#34;,&#34;rank&#34;:36,&#34;sparkline&#34;:[&#34;5.56243119343507&#34;,&#34;5.567298776850595&#34;,&#34;5.576308807839807&#34;,&#34;5.601722240721692&#34;,&#34;5.625170729423998&#34;,&#34;5.620904303320557&#34;,&#34;5.636315942124946&#34;,&#34;5.635348964222284&#34;,&#34;5.621159554675177&#34;,&#34;5.60335716785942&#34;,&#34;5.5905571062639625&#34;,&#34;5.591457772922186&#34;,&#34;5.577783355017431&#34;,&#34;5.569307171726996&#34;,&#34;5.5721648533032235&#34;,&#34;5.588903896878948&#34;,&#34;5.583840701410947&#34;,&#34;5.565198217133781&#34;,&#34;5.559443292783233&#34;,&#34;5.562332394567694&#34;,&#34;5.561388614353593&#34;,&#34;5.553622727528361&#34;,&#34;5.542105541337092&#34;,&#34;5.541592730459978&#34;,&#34;5.542813312914228&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ymQub4fuB+filecoin-fil&#34;,&#34;24hVolume&#34;:&#34;110114795&#34;,&#34;btcPrice&#34;:&#34;0.000276999314511026&#34;},{&#34;uuid&#34;:&#34;aMNLwaUbY&#34;,&#34;symbol&#34;:&#34;ICP&#34;,&#34;name&#34;:&#34;Internet Computer (DFINITY)&#34;,&#34;color&#34;:&#34;#00042b&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/1uJ_RVrmC/dfinity-icp.png&#34;,&#34;marketCap&#34;:&#34;1579446119&#34;,&#34;price&#34;:&#34;6.014477163684303&#34;,&#34;listedAt&#34;:1601555742,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.16&#34;,&#34;rank&#34;:37,&#34;sparkline&#34;:[&#34;6.0162195206336015&#34;,&#34;6.027382655786574&#34;,&#34;6.024819723237437&#34;,&#34;6.039340191092633&#34;,&#34;6.06724228192398&#34;,&#34;6.084822176339837&#34;,&#34;6.12213244622854&#34;,&#34;6.122207846967171&#34;,&#34;6.115223803839146&#34;,&#34;6.090144995430115&#34;,&#34;6.059958922242473&#34;,&#34;6.053464254579577&#34;,&#34;6.0451251289440755&#34;,&#34;6.038939121962651&#34;,&#34;6.0323637715058815&#34;,&#34;6.053924377605492&#34;,&#34;6.050910411565236&#34;,&#34;6.037034022086178&#34;,&#34;6.031591648330019&#34;,&#34;6.028034606779118&#34;,&#34;6.034399244728661&#34;,&#34;6.045367358311911&#34;,&#34;6.040906076591592&#34;,&#34;6.047392163677481&#34;,&#34;6.019846445406749&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/aMNLwaUbY+internetcomputerdfinity-icp&#34;,&#34;24hVolume&#34;:&#34;48593640&#34;,&#34;btcPrice&#34;:&#34;0.000300069900016448&#34;},{&#34;uuid&#34;:&#34;FEbS54wxo4oIl&#34;,&#34;symbol&#34;:&#34;VET&#34;,&#34;name&#34;:&#34;VeChain&#34;,&#34;color&#34;:&#34;#4bc0fa&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/B1_TDu9Dm/VEN.svg&#34;,&#34;marketCap&#34;:&#34;1572263303&#34;,&#34;price&#34;:&#34;0.023550716670432726&#34;,&#34;listedAt&#34;:1533427200,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.92&#34;,&#34;rank&#34;:38,&#34;sparkline&#34;:[&#34;0.0237501279975899&#34;,&#34;0.023800623235562788&#34;,&#34;0.02386182467215722&#34;,&#34;0.023973179564354224&#34;,&#34;0.024039808529594694&#34;,&#34;0.024056225110206598&#34;,&#34;0.02401908035553596&#34;,&#34;0.02404102526204194&#34;,&#34;0.02399624253894211&#34;,&#34;0.023865905918825207&#34;,&#34;0.023792587646072907&#34;,&#34;0.02383798931505895&#34;,&#34;0.02381454971986665&#34;,&#34;0.02374267125916623&#34;,&#34;0.023764159130642643&#34;,&#34;0.023889551570007425&#34;,&#34;0.023861043642166995&#34;,&#34;0.023746804930897137&#34;,&#34;0.02370363220930435&#34;,&#34;0.023715067017245118&#34;,&#34;0.023689647696631462&#34;,&#34;0.02366682198719938&#34;,&#34;0.02359283729367599&#34;,&#34;0.02355808594946514&#34;,&#34;0.023547364902136332&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/FEbS54wxo4oIl+vechain-vet&#34;,&#34;24hVolume&#34;:&#34;99867337&#34;,&#34;btcPrice&#34;:&#34;0.000001174975148178&#34;},{&#34;uuid&#34;:&#34;ncYFcP709&#34;,&#34;symbol&#34;:&#34;CAKE&#34;,&#34;name&#34;:&#34;PancakeSwap&#34;,&#34;color&#34;:&#34;#fe9555&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/aRtgdw7bQ/pancakeswap-cake-logo.png&#34;,&#34;marketCap&#34;:&#34;1552378057&#34;,&#34;price&#34;:&#34;4.667611037675685&#34;,&#34;listedAt&#34;:1613642379,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.02&#34;,&#34;rank&#34;:39,&#34;sparkline&#34;:[&#34;4.660082859245468&#34;,&#34;4.665507699491085&#34;,&#34;4.669686398275825&#34;,&#34;4.704354056302064&#34;,&#34;4.729879002222916&#34;,&#34;4.714593691596935&#34;,&#34;4.7230722097715105&#34;,&#34;4.727203946438871&#34;,&#34;4.714055794424472&#34;,&#34;4.703283518317288&#34;,&#34;4.699762821774249&#34;,&#34;4.69964584740277&#34;,&#34;4.69063433754996&#34;,&#34;4.676198352663021&#34;,&#34;4.698892938256321&#34;,&#34;4.723652915707889&#34;,&#34;4.719455323683941&#34;,&#34;4.711049093360597&#34;,&#34;4.724793283381334&#34;,&#34;4.7271290097513665&#34;,&#34;4.7273734867372195&#34;,&#34;4.730379137827014&#34;,&#34;4.7235237454969665&#34;,&#34;4.720485367387854&#34;,&#34;4.6901802237638766&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/ncYFcP709+pancakeswap-cake&#34;,&#34;24hVolume&#34;:&#34;47470566&#34;,&#34;btcPrice&#34;:&#34;0.000232873039380374&#34;},{&#34;uuid&#34;:&#34;tEf7-dnwV3BXS&#34;,&#34;symbol&#34;:&#34;MANA&#34;,&#34;name&#34;:&#34;Decentraland&#34;,&#34;color&#34;:&#34;#f47e33&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/ph_svUzXs/decentraland(1).svg&#34;,&#34;marketCap&#34;:&#34;1534938899&#34;,&#34;price&#34;:&#34;0.6997668569280486&#34;,&#34;listedAt&#34;:1500336000,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.49&#34;,&#34;rank&#34;:40,&#34;sparkline&#34;:[&#34;0.7016494769558138&#34;,&#34;0.7013306881258784&#34;,&#34;0.7024614313806439&#34;,&#34;0.7044272163104102&#34;,&#34;0.706472351768559&#34;,&#34;0.7093918654850726&#34;,&#34;0.7108366867405783&#34;,&#34;0.7107953770862832&#34;,&#34;0.7099623704106002&#34;,&#34;0.7073510016314243&#34;,&#34;0.7053811315549995&#34;,&#34;0.7070934961637594&#34;,&#34;0.7049849983052269&#34;,&#34;0.7044318506572336&#34;,&#34;0.7042526160893104&#34;,&#34;0.7067846665564811&#34;,&#34;0.7055964200659501&#34;,&#34;0.702908853201086&#34;,&#34;0.7014031290162064&#34;,&#34;0.7008240701784926&#34;,&#34;0.7005131590496823&#34;,&#34;0.7005243124438437&#34;,&#34;0.7002418763387208&#34;,&#34;0.7006899718611295&#34;,&#34;0.6999478391840782&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/tEf7-dnwV3BXS+decentraland-mana&#34;,&#34;24hVolume&#34;:&#34;177494992&#34;,&#34;btcPrice&#34;:&#34;0.000034912256723009&#34;},{&#34;uuid&#34;:&#34;Z96jIvLU7&#34;,&#34;symbol&#34;:&#34;IMX&#34;,&#34;name&#34;:&#34;Immutable X&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/naRGT2Y_X/10603.png&#34;,&#34;marketCap&#34;:&#34;1529522393&#34;,&#34;price&#34;:&#34;0.7647611964099695&#34;,&#34;listedAt&#34;:1649387294,&#34;tier&#34;:1,&#34;change&#34;:&#34;-2.90&#34;,&#34;rank&#34;:41,&#34;sparkline&#34;:[&#34;0.7860619259860426&#34;,&#34;0.7859435779761835&#34;,&#34;0.7861918029620322&#34;,&#34;0.7917396985406836&#34;,&#34;0.7933727507309073&#34;,&#34;0.7916402869669651&#34;,&#34;0.7935301886412963&#34;,&#34;0.7934006370508817&#34;,&#34;0.7896677909111062&#34;,&#34;0.786328322377868&#34;,&#34;0.7828512102910562&#34;,&#34;0.7826248077456216&#34;,&#34;0.7813942918727794&#34;,&#34;0.7768731927772912&#34;,&#34;0.774845353554199&#34;,&#34;0.7803342767455519&#34;,&#34;0.77748526325977&#34;,&#34;0.7734088316059472&#34;,&#34;0.7719538362717691&#34;,&#34;0.7713533598793996&#34;,&#34;0.769495822587314&#34;,&#34;0.7670542178675496&#34;,&#34;0.7655229591091727&#34;,&#34;0.7650383354395589&#34;,&#34;0.7645827066979348&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Z96jIvLU7+immutablex-imx&#34;,&#34;24hVolume&#34;:&#34;45715654&#34;,&#34;btcPrice&#34;:&#34;0.000038154906818638&#34;},{&#34;uuid&#34;:&#34;jad286TjB&#34;,&#34;symbol&#34;:&#34;HBAR&#34;,&#34;name&#34;:&#34;Hedera&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/dSCnSLilQ/hedera.svg&#34;,&#34;marketCap&#34;:&#34;1412569213&#34;,&#34;price&#34;:&#34;0.05802070400542019&#34;,&#34;listedAt&#34;:1568704980,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.53&#34;,&#34;rank&#34;:42,&#34;sparkline&#34;:[&#34;0.05770823380663813&#34;,&#34;0.05774903033415054&#34;,&#34;0.057915572884848006&#34;,&#34;0.05810678934296818&#34;,&#34;0.05824109880306974&#34;,&#34;0.05837365821928798&#34;,&#34;0.058391844857850296&#34;,&#34;0.058420669824922486&#34;,&#34;0.058284382479036986&#34;,&#34;0.05817173526970868&#34;,&#34;0.05807921716077961&#34;,&#34;0.058150643142977756&#34;,&#34;0.05809575095904357&#34;,&#34;0.05804683462479764&#34;,&#34;0.0580893171305297&#34;,&#34;0.05828383075476003&#34;,&#34;0.05829009517872864&#34;,&#34;0.05815108256774528&#34;,&#34;0.0580051333849642&#34;,&#34;0.05801242150604921&#34;,&#34;0.05805091278384359&#34;,&#34;0.058086412112980726&#34;,&#34;0.05802601718087566&#34;,&#34;0.05799056099286723&#34;,&#34;0.05800106767977079&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/jad286TjB+hedera-hbar&#34;,&#34;24hVolume&#34;:&#34;40239467&#34;,&#34;btcPrice&#34;:&#34;0.000002894726569903&#34;},{&#34;uuid&#34;:&#34;KfWtaeV1W&#34;,&#34;symbol&#34;:&#34;FRAX&#34;,&#34;name&#34;:&#34;Frax&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/BpVNCX-NM/frax.png&#34;,&#34;marketCap&#34;:&#34;1359957068&#34;,&#34;price&#34;:&#34;1.0013927267410865&#34;,&#34;listedAt&#34;:1615299931,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.04&#34;,&#34;rank&#34;:43,&#34;sparkline&#34;:[&#34;0.9998387203956588&#34;,&#34;0.9991795416493741&#34;,&#34;0.9995865702781206&#34;,&#34;0.9984005488287919&#34;,&#34;0.9990889387633427&#34;,&#34;0.9992832524161939&#34;,&#34;0.9995431951063479&#34;,&#34;0.9992818968259785&#34;,&#34;0.9999311001849419&#34;,&#34;1.0002320414176233&#34;,&#34;0.9996418223412398&#34;,&#34;1.0001192349643087&#34;,&#34;0.9994764717300544&#34;,&#34;0.999750237165413&#34;,&#34;0.9992257829070216&#34;,&#34;0.9988855798280094&#34;,&#34;1.0006437036230644&#34;,&#34;1.0009904957198679&#34;,&#34;0.999193245743286&#34;,&#34;0.9998007410985583&#34;,&#34;0.9994672650160044&#34;,&#34;0.999284943092215&#34;,&#34;0.9999859949334076&#34;,&#34;0.9998286437331367&#34;,&#34;1.0012358617187662&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/KfWtaeV1W+frax-frax&#34;,&#34;24hVolume&#34;:&#34;6767350&#34;,&#34;btcPrice&#34;:&#34;0.000049960754228939&#34;},{&#34;uuid&#34;:&#34;bauj_21eYVwso&#34;,&#34;symbol&#34;:&#34;QNT&#34;,&#34;name&#34;:&#34;Quant&#34;,&#34;color&#34;:&#34;#585e63&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/a-i9Dl392/quant.png&#34;,&#34;marketCap&#34;:&#34;1352465381&#34;,&#34;price&#34;:&#34;138.32798771198716&#34;,&#34;listedAt&#34;:1533945600,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.45&#34;,&#34;rank&#34;:44,&#34;sparkline&#34;:[&#34;136.7723467133241&#34;,&#34;137.81098287130007&#34;,&#34;138.04298230548113&#34;,&#34;138.87720276266452&#34;,&#34;139.1125352948242&#34;,&#34;139.0565202511056&#34;,&#34;139.15754518214834&#34;,&#34;138.81990972517082&#34;,&#34;137.89167052928534&#34;,&#34;137.45970305588784&#34;,&#34;137.8392892605069&#34;,&#34;139.3612000005179&#34;,&#34;138.96346091827144&#34;,&#34;139.39944189729206&#34;,&#34;139.8843925606133&#34;,&#34;140.69574195419648&#34;,&#34;139.61694354017848&#34;,&#34;139.51555414127344&#34;,&#34;139.28222939653202&#34;,&#34;139.63783946225655&#34;,&#34;139.13542537008928&#34;,&#34;139.1870001137723&#34;,&#34;138.76031274500184&#34;,&#34;138.11612272152271&#34;,&#34;138.1792349583611&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/bauj_21eYVwso+quant-qnt&#34;,&#34;24hVolume&#34;:&#34;105793553&#34;,&#34;btcPrice&#34;:&#34;0.006901358889986341&#34;},{&#34;uuid&#34;:&#34;omwkOTglq&#34;,&#34;symbol&#34;:&#34;EGLD&#34;,&#34;name&#34;:&#34;Elrond&#34;,&#34;color&#34;:&#34;#000000&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/X62ruAuZQ/Elrond.svg&#34;,&#34;marketCap&#34;:&#34;1319234212&#34;,&#34;price&#34;:&#34;55.8358038213146&#34;,&#34;listedAt&#34;:1612524044,&#34;tier&#34;:1,&#34;change&#34;:&#34;1.98&#34;,&#34;rank&#34;:45,&#34;sparkline&#34;:[&#34;54.447577507868715&#34;,&#34;54.128375568181134&#34;,&#34;54.23440566519872&#34;,&#34;54.73707935361438&#34;,&#34;55.29878160930527&#34;,&#34;55.12497748150301&#34;,&#34;55.42130584548864&#34;,&#34;55.15246246213931&#34;,&#34;55.040118775249475&#34;,&#34;54.79984173940808&#34;,&#34;54.611754004068196&#34;,&#34;54.73876823712405&#34;,&#34;55.106654437772995&#34;,&#34;55.11813142327622&#34;,&#34;55.12054367031947&#34;,&#34;55.11163738590538&#34;,&#34;54.99439078507999&#34;,&#34;54.85891721705598&#34;,&#34;54.880726546478314&#34;,&#34;55.13943236775162&#34;,&#34;55.325578824568346&#34;,&#34;54.93737596596585&#34;,&#34;54.86199424999812&#34;,&#34;54.96283000707188&#34;,&#34;55.16446737080449&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/omwkOTglq+elrond-egld&#34;,&#34;24hVolume&#34;:&#34;61533486&#34;,&#34;btcPrice&#34;:&#34;0.002785719126371488&#34;},{&#34;uuid&#34;:&#34;fsIbGOEJWbzxG&#34;,&#34;symbol&#34;:&#34;XTZ&#34;,&#34;name&#34;:&#34;Tezos&#34;,&#34;color&#34;:&#34;#2c7df7&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/HkLUdilQ7/xtz.svg&#34;,&#34;marketCap&#34;:&#34;1298882071&#34;,&#34;price&#34;:&#34;1.4301930626539139&#34;,&#34;listedAt&#34;:1530662400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.33&#34;,&#34;rank&#34;:46,&#34;sparkline&#34;:[&#34;1.4215338154290353&#34;,&#34;1.425785384185857&#34;,&#34;1.4279580637852494&#34;,&#34;1.4343164461157478&#34;,&#34;1.44533506798751&#34;,&#34;1.4458980149471825&#34;,&#34;1.442887292689709&#34;,&#34;1.4491458802390045&#34;,&#34;1.4448918253453362&#34;,&#34;1.4395360524680738&#34;,&#34;1.4357054965075182&#34;,&#34;1.4363755324762233&#34;,&#34;1.4337583246701406&#34;,&#34;1.4332867553350375&#34;,&#34;1.4340648195360775&#34;,&#34;1.4392954516048504&#34;,&#34;1.4370648528031746&#34;,&#34;1.4305759187708895&#34;,&#34;1.424273534505395&#34;,&#34;1.423632350356118&#34;,&#34;1.4222169076306148&#34;,&#34;1.429703791180103&#34;,&#34;1.4313133859795066&#34;,&#34;1.4310736027395956&#34;,&#34;1.4305871899611713&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/fsIbGOEJWbzxG+tezos-xtz&#34;,&#34;24hVolume&#34;:&#34;48400807&#34;,&#34;btcPrice&#34;:&#34;0.000071354147274189&#34;},{&#34;uuid&#34;:&#34;GSCt2y6YSgO26&#34;,&#34;symbol&#34;:&#34;CHZ&#34;,&#34;name&#34;:&#34;Chiliz&#34;,&#34;color&#34;:&#34;#d05e72&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/gTsOlSnwR/4066.png&#34;,&#34;marketCap&#34;:&#34;1281058496&#34;,&#34;price&#34;:&#34;0.21563473115533294&#34;,&#34;listedAt&#34;:1562332440,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.44&#34;,&#34;rank&#34;:47,&#34;sparkline&#34;:[&#34;0.2154110356391449&#34;,&#34;0.21556395298813918&#34;,&#34;0.21654088100155322&#34;,&#34;0.21734996911672455&#34;,&#34;0.21877239367594722&#34;,&#34;0.21947482492922862&#34;,&#34;0.21980181027276333&#34;,&#34;0.21907182102411207&#34;,&#34;0.21837999474902092&#34;,&#34;0.2179201134075193&#34;,&#34;0.21682795818287987&#34;,&#34;0.2159375839317586&#34;,&#34;0.21597299156806574&#34;,&#34;0.21581331430143438&#34;,&#34;0.2157003812381916&#34;,&#34;0.21633894865093503&#34;,&#34;0.21562618012273047&#34;,&#34;0.2148661902738402&#34;,&#34;0.2153024201330907&#34;,&#34;0.21718195675318105&#34;,&#34;0.21772335614790497&#34;,&#34;0.21670557578562155&#34;,&#34;0.21601186960613397&#34;,&#34;0.2160711796456044&#34;,&#34;0.215952009168073&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/GSCt2y6YSgO26+chiliz-chz&#34;,&#34;24hVolume&#34;:&#34;177219742&#34;,&#34;btcPrice&#34;:&#34;0.00001075829044768&#34;},{&#34;uuid&#34;:&#34;pxtKbG5rg&#34;,&#34;symbol&#34;:&#34;SAND&#34;,&#34;name&#34;:&#34;The Sandbox&#34;,&#34;color&#34;:&#34;#00adef&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/kd_vwOcnI/sandbox.png&#34;,&#34;marketCap&#34;:&#34;1273067633&#34;,&#34;price&#34;:&#34;0.8490116221767807&#34;,&#34;listedAt&#34;:1613583024,&#34;tier&#34;:1,&#34;change&#34;:&#34;-1.42&#34;,&#34;rank&#34;:48,&#34;sparkline&#34;:[&#34;0.8587964523939258&#34;,&#34;0.8597445619216338&#34;,&#34;0.8611496857436736&#34;,&#34;0.865552155362601&#34;,&#34;0.8666655073914699&#34;,&#34;0.8666063461880543&#34;,&#34;0.8661421792463039&#34;,&#34;0.8670202524108236&#34;,&#34;0.8645275388953965&#34;,&#34;0.8601521201043011&#34;,&#34;0.8593695662980281&#34;,&#34;0.8657494323265613&#34;,&#34;0.8583869608535049&#34;,&#34;0.8542343549878925&#34;,&#34;0.8530614390762854&#34;,&#34;0.8571744599552762&#34;,&#34;0.8555489791484138&#34;,&#34;0.8522001044539881&#34;,&#34;0.8506051562831319&#34;,&#34;0.8513661719170071&#34;,&#34;0.8515003055153064&#34;,&#34;0.850575906991854&#34;,&#34;0.8481896312377586&#34;,&#34;0.8476009622535644&#34;,&#34;0.8483798170565793&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/pxtKbG5rg+thesandbox-sand&#34;,&#34;24hVolume&#34;:&#34;83538814&#34;,&#34;btcPrice&#34;:&#34;0.000042358267501232&#34;},{&#34;uuid&#34;:&#34;Pe93bIOD2&#34;,&#34;symbol&#34;:&#34;LDO&#34;,&#34;name&#34;:&#34;Lido DAO Token&#34;,&#34;color&#34;:&#34;#77cced&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/Wp6LFY6ZZ/8000.png&#34;,&#34;marketCap&#34;:&#34;1216036112&#34;,&#34;price&#34;:&#34;1.5118766610253165&#34;,&#34;listedAt&#34;:1627361901,&#34;tier&#34;:1,&#34;change&#34;:&#34;-0.30&#34;,&#34;rank&#34;:49,&#34;sparkline&#34;:[&#34;1.514949369280686&#34;,&#34;1.5184328905530695&#34;,&#34;1.5246699575717297&#34;,&#34;1.5386072083468705&#34;,&#34;1.5536094881641007&#34;,&#34;1.5570507422780526&#34;,&#34;1.5627604927137266&#34;,&#34;1.5612721472754483&#34;,&#34;1.5639154910163686&#34;,&#34;1.549373162283526&#34;,&#34;1.5394363442551757&#34;,&#34;1.541157697302903&#34;,&#34;1.5418482781453238&#34;,&#34;1.5543318570374773&#34;,&#34;1.5591142099647026&#34;,&#34;1.560413716352464&#34;,&#34;1.5550693678828413&#34;,&#34;1.5412619320882424&#34;,&#34;1.5279231319722841&#34;,&#34;1.529014575537172&#34;,&#34;1.525325737659197&#34;,&#34;1.523198905794472&#34;,&#34;1.5142615078205033&#34;,&#34;1.5076938986024802&#34;,&#34;1.50652345194352&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/Pe93bIOD2+lidodaotoken-ldo&#34;,&#34;24hVolume&#34;:&#34;12138422&#34;,&#34;btcPrice&#34;:&#34;0.000075429445679891&#34;},{&#34;uuid&#34;:&#34;iAzbfXiBBKkR6&#34;,&#34;symbol&#34;:&#34;EOS&#34;,&#34;name&#34;:&#34;EOS&#34;,&#34;color&#34;:&#34;#443f54&#34;,&#34;iconUrl&#34;:&#34;https://cdn.coinranking.com/PqOYrWSje/eos2.svg&#34;,&#34;marketCap&#34;:&#34;1158142277&#34;,&#34;price&#34;:&#34;1.171597923058696&#34;,&#34;listedAt&#34;:1498694400,&#34;tier&#34;:1,&#34;change&#34;:&#34;0.18&#34;,&#34;rank&#34;:50,&#34;sparkline&#34;:[&#34;1.1695001042910693&#34;,&#34;1.1712804054845907&#34;,&#34;1.1741562139239061&#34;,&#34;1.1794010183679478&#34;,&#34;1.1847650307406867&#34;,&#34;1.1855240685834143&#34;,&#34;1.1866371525249342&#34;,&#34;1.1885970359357818&#34;,&#34;1.1869956333747422&#34;,&#34;1.1822077005037634&#34;,&#34;1.1770242148628085&#34;,&#34;1.1761952521974657&#34;,&#34;1.1775290422699476&#34;,&#34;1.177151214850985&#34;,&#34;1.1815075119949334&#34;,&#34;1.1835245073019218&#34;,&#34;1.18137111136774&#34;,&#34;1.177728842314626&#34;,&#34;1.1772995574962846&#34;,&#34;1.1764908572426358&#34;,&#34;1.1761357894815425&#34;,&#34;1.1747314132837732&#34;,&#34;1.172519440065544&#34;,&#34;1.1703671222413707&#34;,&#34;1.169320968143335&#34;],&#34;lowVolume&#34;:false,&#34;coinrankingUrl&#34;:&#34;https://coinranking.com/coin/iAzbfXiBBKkR6+eos-eos&#34;,&#34;24hVolume&#34;:&#34;170228090&#34;,&#34;btcPrice&#34;:&#34;0.000058452507518766&#34;}]}} . Formatting Digital Coin example . JSON text transferred from the API in the previous cell was converted to a Python Dictionary called json. The &quot;coins&quot; in the dictionary contain a list of the most relevant data. Look at the code and comments to see how the original text is turned into something understandable. Additionally, there are error check to make sure we are starting the code with the expectation that the API was run correctly. . &quot;&quot;&quot; This cell is dependent on valid run of API above. - try and except code is making sure &quot;json&quot; was properly run above - inside second try is code that is used to process Coin API data Note. Run this cell repeatedly to format data without re-activating API &quot;&quot;&quot; try: print(&quot;JSON data is Python type: &quot; + str(type(json))) try: # Extracting Coins JSON status, if the API worked status = json.get(&#39;status&#39;) print(&quot;API status: &quot; + status) print() # Extracting Coins JSON data, data about the coins data = json.get(&#39;data&#39;) # Procedural abstraction of Print code for coins def print_coin(c): print(c[&quot;symbol&quot;], c[&quot;price&quot;]) print(&quot;Icon Url: &quot; + c[&quot;iconUrl&quot;]) print(&quot;Rank Url: &quot; + c[&quot;coinrankingUrl&quot;]) # Coins data was observed to be a list for coin in data[&#39;coins&#39;]: print_coin(coin) print() except: print(&quot;Did you insert a valid key in X-RapidAPI-Key of API cell above?&quot;) print(json) except: print(&quot;This cell is dependent on running API call in cell above!&quot;) . JSON data is Python type: &lt;class &#39;dict&#39;&gt; Did you insert a valid key in X-RapidAPI-Key of API cell above? {&#39;message&#39;: &#39;You are not subscribed to this API.&#39;} . Go deeper into APIs . Web Development vs Jupyter Notebook. A notebook is certainly a great place to start. But, for your end of Trimester project we want you to build the skill to reference and use APIs within your Project. Here are some resources to get you started with this journey. . In the Nighthawk Coders APCSP you can find an Overview and Examples using APIs:APCSP APIs menu- Using Covid RapidAPI JavaScript frontend API code in APCSP Fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-rapidapi.md | . | Making a Jokes API (this will next API tech talk) Frontend. JavaScript frontend code in APCSP fastpages GitHub repo: https://github.com/nighthawkcoders/APCSP/blob/master/_posts/2022-07-10-PBL-jokes.md | Backend Endpoints. Python code that allows Frontend access: https://github.com/nighthawkcoders/flask_portfolio/blob/main/api.py | Backend Jokes Management. Python code that support Create, Read, Update, Delete (CRUD): https://github.com/nighthawkcoders/flask_portfolio/blob/main/model_jokes.py | . | . Hacks . Find and use an API as part of your project. An API and a little coding logic will be a big step toward getting meaningful data for a project. There are many API providers, find one that might work for your project to complete this hack. When picking an API you are looking for something that will work with either JavaScript Fetch or Python Request. Here are some samples, these are not qualified in any way. . RapidAPI- GitHub Project | No Key APIs Article | Twitter Developer | Google Developer | Reddit Developer | . Show API and format results in either Web Page or Jupyter Notebook. Ultimately, I will expect that we do APIs in backend (Python/Flask). However, for this Hack you can pick your preference. We will discuss pros and cons in next API tech talk. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/techtalk/rapidapi",
            "relUrl": "/techtalk/rapidapi",
            "date": " ‚Ä¢ Oct 3, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Big Idea 1 'Identifying and Correcting Errors'",
            "content": "College Board Big Idea 1 . Identifying and Correcting Errors (Unit 1.4) . Become familiar with types of errors and strategies to fixing them . Lightly Review Videos and take notes on topics with Blog | Complete assigned MCQ questions | . Here are some code segments you can practice fixing: . alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . The intended outcome is to determine where the letter is in the alphabet using a while loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i) + &quot; letter in the alphabet&quot;) i += 1 . The intended outcome is to determine where the letter is in the alphabet using a for loop . What is a good test case to check the current outcome? Why? | Make changes to get the intended outcome. | . letter = input(&quot;What letter would you like to check?&quot;) for i in alphabetList: count = 0 if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count) + &quot; letter in the alphabet&quot;) count += 1 . This code outputs the even numbers from 0 - 10 using a while loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . This code should output the odd numbers from 0 - 10 using a while loop. . odds = [] i = 0 while i &lt;= 10: odds.append(i) i += 2 print(odds) . This code outputs the even numbers from 0 - 10 using a for loop. . Analyze this code to determine what can be changed to get the outcome to be odd numbers. (Code block below) | . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . This code should output the odd numbers from 0 - 10 using a for loop. . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 0): odds.append(numbers[i]) print(odds) . The intended outcome is printing a number between 1 and 100 once, if it is a multiple of 2 or 5 . What values are outputted incorrectly. Why? | Make changes to get the intended outcome. | . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . Challenge . This code segment is at a very early stage of implementation. . What are some ways to (user) error proof this code? | The code should be able to calculate the cost of the meal of the user | . Hint: . write a ‚Äúsingle‚Äù test describing an expectation of the program of the program | test - input burger, expect output of burger price | run the test, which should fail because the program lacks that feature | write ‚Äújust enough‚Äù code, the simplest possible, to make the test pass | . Then repeat this process until you get program working like you want it to work. . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) #code should add the price of the menu items selected by the user print(total) . Hacks . Now is a good time to think about Testing of your teams final project... . What errors may arise in your project? | What are some test cases that can be used? | Make sure to document any bugs you encounter and how you solved the problem. | What are ‚Äúsingle‚Äù tests that you will perform on your project? Or, your part of the project? As Hack Design and Test plan action ‚Ä¶ Divide these ‚Äúsingle‚Äù tests into Issues for Scrum Board prior to coding. FYI, related tests could be in same Issue by using markdown checkboxes to separate tests. | . | .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/collegeboard/error",
            "relUrl": "/collegeboard/error",
            "date": " ‚Ä¢ Oct 3, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "1.3 Program Design Notes/Proof of Completion",
            "content": "1.3: Daily Video 1 . How is a program developed? . It all starts with an idea. . Programs are developed with a specific purpose in mind | Developers follow specific steps and stick to their plan | At times, the development is more exploratory than anything, and the steps are dictated by what happens (both good and bad) | . Developers start investigating the problem/purpose and reflect . Investigation is an important step in the process | Developers must: determine the requirements of the program | understand the constraints | understand the user concerns and interests | . | How do developers investigate? surveys | user testing | interviews | direct observations | . | . After initial investigation and reflection‚Ä¶ . Developers design the program by brainstorming (draw on investigation) | storyboarding the program | planning user experience | laying out the user interface | organizing into modules | develop a testing strategy | . | Developers decide on the program requirements that‚Ä¶ describe how a program should behave | include a list of user interactions | . | The program specifications outline all of the requirements | Developers create a prototype of the program (or components): a gradual process is frequently used so that developers can refine small parts (modules) of the program | . | . Testing, testing, and more testing! . Developers test the program every step of the way | Testing occurs at the micro level | macro level | . | Developers refine and revise through testing, feedback, and reflection | . Daily Video 1 Personal Takeaways . After watching the first daily video of 1.3, I now realize that if I want to have my idea for the final project behave like it is supposed to that numerous trials of the program will have to be run. This way, we can all see what parts of the program should be kept as is and which parts need to be modified to ensure optimal user experience. . 1.3: Daily Video 2 . How is a program developed? . Program development is seldom a solo endeavor . Typically, programs are developed by teams of people | Individuals/teams work on different functional components | Each member of the project deserves to receive credit for their work | Their names must be written in the documentation of the program indicating their contributions to the project | . While documentation is an important place to give credit‚Ä¶ . Many projects use comments within the programming language to give credit | This is an important part of the development of the program | When developers find a bug/error in a program, they need to be able to determine who can/should fix the problem | This may be most useful after a program is completed, and users find additional bugs | . Many times developers use code segments, procedures, algorithms, and more that are written by others. . These other individuals are not necessarily a part of the project, but they still deserve to be credited | Similar to quoting someone in a research paper or article | Any code segments, procedures, or algorithms are considered intellectual property of the author | The program documentation should include the author‚Äôs name and the source of any code segments being used | This portion of the documentation may resemble a bibliography or a works cited pages in a research paper | . Daily Video 2 Personal Takeways . I now know that any time I use code segments or algorithms, whether they are from my teammates or outside sources, I should always in some way give credit to the original author of that part of the program. This is because any code segments, procedures, or algorithms are considered intellectual property of the author. . 1.3: Daily Video 3 . How is a program developed? . Programmers create something called program documentation in order to‚Ä¶ . describe the overall program | list program specifications | describe‚Ä¶ functions/procedures/methods within the code | specific code segments | list of events and corresponding outputs | the development of the program | how other programs may interact with the program | . | list of contributors/authors of the program | . When does documentation happen? . Documentation happens throughout the development of the program: . At the beginning: list specifications | During: to keep track of proceess | After: to explain the overall process Documentation throughout can improve: | efficiency of overall programming process | programmers‚Äô ability to test and refine the program | programmers‚Äô response to bugs | . How do programmers document while programming? . Most programming languages offer a commenting feature, although some do not. . Commenting allows programmers to write text within the prgoram | This text does not affect the program | Comments are for programmers to read | This is a form of documentation and can be very usefil when programmers collaborate or work individually | . Examples of comments . Text Languages: . Python Uses the ‚Äú#‚Äù symbol followed by the comment | . | Java Uses the ‚Äú//‚Äù symbol‚Äù | /* */ used for multiple line comments | /** */ used for multiple line documentation comments | . | Javascript, C/C++, or Swift similar to Java | XML/HTML ‚Äù&lt;&gt;‚Äù used for single or multi line comments | . | Applescript/Pascal ‚Äù(Comments)‚Äù used for single or multi line | . | . Daily Video 3 Personal Takeways . After watching this video, I now understand why it is important to include comments in code, as it allows one to understand what something does and how it was developed. . Proof of Completon of Quesitons for 1.1-1.3 . . Although I earned a full score on all of the quizzes, there were a couple of questions that required me to think a little bit more as the examples became more and more specific. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week5hacks/2022/09/29/program-design-notes.html",
            "relUrl": "/markdown/week5hacks/2022/09/29/program-design-notes.html",
            "date": " ‚Ä¢ Sep 29, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "1.2 Program Purpose/Function Notes",
            "content": "1.2: Daily Video 1 . Computing Innovations . Innovations can include, but are not limited to: . Applications Games | Social Media | Business | Productivity | . | Physical Devices Computers | Smart Phones/tablets | Smart ‚ÄúThings‚Äù | Wearables | . | Systems E-commerce | Cloud services | E-mail | . | . Innovations Created for a Purpose . Guiding Questions: . Why does the computing innovation exist? | What problem(s) does the computing innovation solve? | What does the computing innovation allow us to do that we could not do before? | Examples of Computing Innovations . Social Media Applications Allows users to connect from a distance and archive their activites | . | E-commerce Allows users to save time and money by being able to shop from home | . | Digital Assistant Device Allows users to control their devices hands-free making them safer while driving or more convenient when trying to multitask | . | . Daily Video 1: Takeaways . The purpose of computing innovations is to solve problems or to pursue interest through creative expression | An understanding of the purpose of a computing innovations provides developers with an improved ability to develop that computing innovation | . 1.2: Daily Video 2 . Identifying Inputs to Programs . Computer Programs accept input in a variety of different forms: . tactile (touch) | audio | visual | text (including numerical values) | . Examples: . Smart phone/tablet (texting, entering password, etc.) | Laptop computer (keyboard, mouse, etc.) | Gaming console (send input through buttons) | . How do programs receive input? . Most programs are written in an event driven environment. . ‚ÄúEvents‚Äù are triggered by some action, which usually sends input to the program | . Types of events a user can trigger: . mouse clicks | screen taps/swipes (force touch) | . What does input accomplish in a program? . Input usually affects the output. Outputs produced by a device can include: . visual | audio | tactile (touch/feel) | text | . Example of output that devices supply: . Smart phone/tablet (things that appear on screen based on what you have pressed/swiped) | Laptop computer (displays texts after using keyboard) | Gaming console (remote vibrations) | . How does a program know what to do upon an event? . An action triggers an event: . Action may be activated by the user or another program/device | . The program ‚Äújumps‚Äù to the code segment according to the event: . The code segment is ran | Output is triggered by the code segment/additional events that are triggered | . The program does not necessarily execute ‚Äúin order‚Äù: . Code segments are executed as they are called, according to the events triggered | . Daily Video 2: Takeaways . Program inputs are data sent to a computer for processing by a program. Input can come in a variety of forms, such as tactile, audio, visual, or text | An event is associated with an action and supplies input data to a program | Events can be generated when a key is pressed, a mouse is clicked, a program is started, or any other defined action occurs that affects the flow of execution | Inputs USUALLY affect the output produced by a program | Program output is usually based on a program‚Äôs input or prior state | . 1.2: Daily Video 3 . What is a program? . A program is a collection of statements: . A statement is a single command | A group of statements is called a code segment | A program is often referred to as ‚Äúsoftware‚Äù | Code segments are executed by rules of the coding language | . What does the program shown in the video do? - written to find the minimum value in a list . The code segment should work for a variety of different lists, such as numbers that are out of order, negative numbers, large numbers, and decimals | . Description . Simply state what the segment does this way, someone else can use the segment in a larger program | . | Include how it does what it does this way, someone could expand upon the code segment | . | . Daily Video 3: Takeaways . A program is a collection of program statements that performs a task when run by a computer | A code segment is a collection of program statements that is part of a program | A program needs to work for a variety of inputs and situations | . Personal Takeways . After watching all three videos, I feel that I truly understand why knowing the purpose and function of a program is essential. Knowing exactly what your program is intended to do could allow someone who is reading it to use it in a larger program or even expand upon it. Overall, having knowledge about this big idea will definitely be helpful and I will apply this idea to anything that I do in this class. . Proof of Completon of Quesitons .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week5hacks/2022/09/26/program-purpose-notes.html",
            "relUrl": "/markdown/week5hacks/2022/09/26/program-purpose-notes.html",
            "date": " ‚Ä¢ Sep 26, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Agile Methodology Notes/Vocab",
            "content": "Agile Methodology: Overview . Includes practices such as pair programming, test-driven development, stand-ups, planning sessions, and sprints | Brings out all the good charactristics in group development | The 12 Principles . Our highest priority is to satisfy the customer through early and continuous delivery of valuable software. | Welcome changing requirements, even late in development. Agile processes harness change for the customer‚Äôs competitive advantage. | Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale. | Business people and developers must work together daily throughout the project. | Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done. | The most efficient and effective method of conveying information to and within a development team is face-to-face conversation. | Working software is the primary measure of progress!!! | Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely. | Continuous attention to technical excellence and good design enhances agility. | Simplicity‚Äìthe art of maximizing the amount of work not done‚Äìis essential. | The best architectures, requirements, and designs emerge from self-organizing teams. | At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly. | Key Vocab . Sprint - period of time that a team uses to plan and execute work. This includes planning, research, development, deployment, and test. . Creativity - in the context of education and a workplace, creativity presents itself as how you approach tasks and look for solutions to problems. . Critical thinking - being able to look at things more deeply and understand things such as ways to improve something. . Communication - includes verbal (how you address an audience in terms they can understand), listening (learning and understanding), writing, and technological communication skills. . Researching - can include analyzing information, brainstorming solutions, extracting information from data, gathering information, setting goals, and solving problems. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/2022/09/26/agile-methodology-notes.html",
            "relUrl": "/2022/09/26/agile-methodology-notes.html",
            "date": " ‚Ä¢ Sep 26, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "JavaScript Notebook",
            "content": "console.log(&quot;Hello World&quot;) . Hello World . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var student = new Person(&quot;Emaad Mir&quot;, &quot;Emaad-Mir&quot;, 2025); // object type is easy to work with in JavaScript logItType(student); // before role logItType(student.toJSON()); // ok to do this even though role is not yet defined // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher student.setRole(&quot;Student&quot;); // set the role logItType(student); logItType(student.toJSON()); // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Emaad Mir&#39;, ghID: &#39;Emaad-Mir&#39;, classOf: 2025, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Emaad Mir&#34;,&#34;ghID&#34;:&#34;Emaad-Mir&#34;,&#34;classOf&#34;:2025,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Emaad Mir&#39;, ghID: &#39;Emaad-Mir&#39;, classOf: 2025, role: &#39;Student&#39; } string ; {&#34;name&#34;:&#34;Emaad Mir&#34;,&#34;ghID&#34;:&#34;Emaad-Mir&#34;,&#34;classOf&#34;:2025,&#34;role&#34;:&#34;Student&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . // define a student Array of Person(s) var students = [ new Person(&quot;Edwin Abraham&quot;, &quot;EdwinKuttappi&quot;, 2024), new Person(&quot;Emaad Mir&quot;, &quot;Emaad-Mir&quot;, 2025), new Person(&quot;Jishnu Singiresu&quot;, &quot;JishnuS420&quot;, 2024), new Person(&quot;Luka Van Den Boomen&quot;, &quot;LukaVDB&quot;, 2024), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Edwin Abraham&#39;, ghID: &#39;EdwinKuttappi&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Emaad Mir&#39;, ghID: &#39;Emaad-Mir&#39;, classOf: 2025, role: &#39;Student&#39; }, Person { name: &#39;Jishnu Singiresu&#39;, ghID: &#39;JishnuS420&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Luka Van Den Boomen&#39;, ghID: &#39;LukaVDB&#39;, classOf: 2024, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Edwin Abraham | EdwinKuttappi | 2024 | Student | Emaad Mir | Emaad-Mir | 2025 | Student | Jishnu Singiresu | JishnuS420 | 2024 | Student | Luka Van Den Boomen | LukaVDB | 2024 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; for(i = 0; i &lt;= 10; i++){ console.log(i) } . 0 1 2 3 4 5 6 7 8 9 10 . var x = 10 var y = 20 console.log(10+20) console.log(10*20) console.log(10-20) console.log(10/20) . 30 200 -10 0.5 . &lt;/div&gt; . .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/jupyter/js",
            "relUrl": "/jupyter/js",
            "date": " ‚Ä¢ Sep 25, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Python Flask (Individual)",
            "content": "Customization of index.html . . Customization of stub.html . .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week5hacks/2022/09/25/flask-hacks-individual.html",
            "relUrl": "/markdown/week5hacks/2022/09/25/flask-hacks-individual.html",
            "date": " ‚Ä¢ Sep 25, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Scrum Team Plans",
            "content": "Team Roles . Scrum Master: Emaad Mir | DevOps: Luka Van Den Booman | Frontend Developer: Edwin Abraham | Backend Developer: Jishnu Singiresu | . Program Idea/Purpose . Our idea for the final project is to make a program that allows users to make a list of things that they would like to do so that the computer can compile that list into a coherent daily agenda. . Our Scrum Process . Here is a Canva poster that we all made together displaying our Scrum Team roles and the steps that we will take to work together. . Scrum Team Process - Emaad Mir, Edwin Abraham, Luka Van Den Boomen, Jishnu Singiresu . Scrum Team Plans on Group Repo . My group and I also made our team plans show up on a new html page called plan: . .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week5hacks/2022/09/25/Scrum-Team-Plans.html",
            "relUrl": "/markdown/week5hacks/2022/09/25/Scrum-Team-Plans.html",
            "date": " ‚Ä¢ Sep 25, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "JavaScript Fragments",
            "content": "Scrum Team .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/js/html",
            "relUrl": "/js/html",
            "date": " ‚Ä¢ Sep 24, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Python Web Server Project Extra Info",
            "content": "Overview . The video I linked in my Week 4 Review Ticket demonstrates the functionality of both of my local servers and me making changes to each one to show that they both work like they are supposed to. However, there are a few things that I would like to add on to the video and clarify: . Local IP Address/Port . For my Python Flask Web Server, the server address is ‚Äúhttp://127.0.0.1:5000/‚Äù. Here is what each part of the link means: . The ‚Äú127.0.0.1‚Äù portion of the link represents the jekyll server number that the Python server is running on | The ‚Äú5000‚Äù at the end of the link represents the local host, or machine that is running the server live | . For the local Fastpages server, the server address is ‚Äúhttp://0.0.0.0:4000/emaad-fastpages/‚Äù. Here is the link broken down into its parts: . Similar to the Python web server, the ‚Äú0.0.0.0‚Äù represents the jekyll server number that is running the Fastpages server locally | The ‚Äú4000‚Äù is the local host/machine/computer running the server | At the very end of the link is ‚Äúemaad-fastpages‚Äù, which is simply the name of my Github repository for Fastpages. | . Collaboration . In order to show that we collaborated as a team, one of us (credits to Edwin Abraham) created a group repository for our local python server. Near the end of the video, I show all of the actions and commits from the group repository that we all pushed onto Github. We all communicated with each other via Slack and kept each other up on where each of us were in completing the hacks for this week. I definitely feel that we all learned something from watching those Collegeboard videos about collaboration, as we really tried taking into account different perspectives and expressing those differing points of view into our repository. . I hope that this blog helped you learn something about this week‚Äôs hacks and extended your knowledge beyond what my video showed! .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week4hacks/2022/09/20/Python-Web-Server-Project-Extra-Info.html",
            "relUrl": "/markdown/week4hacks/2022/09/20/Python-Web-Server-Project-Extra-Info.html",
            "date": " ‚Ä¢ Sep 20, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Docker Server Test",
            "content": "hello world! .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week4hacks/2022/09/17/docker-server-test.html",
            "relUrl": "/markdown/week4hacks/2022/09/17/docker-server-test.html",
            "date": " ‚Ä¢ Sep 17, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Psychology and the Good Life Notes",
            "content": "Notes/Vocab from the Video . enterprise - a project, typically one that is difficult/requires effort | We (as students) can improve whatever level of well-being that we are at; we can control a lot more of our happiness than we think | Our life circumstances don‚Äôt matter as much as we think they do | intuitions - ability to understand something right away without the need for conscious reasoning | Like all good things, taking control of your happiness can be difficult | G.I. Joe fallacy - refers to the misconception that simply knowing about a bias is enough to overcome it | Often, your mind lies to you a lot about what it means to be happy | Making time for social connections is something that very happy people do in general | Helping others helps us more than we expect | The simple act of thinking about what we are grateful for is very powerful | affluence - the state of having a great deal of money (wealth) | Happy people usually priortize their leisure time over money | . Notes of Gratitude . I am grateful for all of the teachers that work so hard to make sure that we all succeed and be the best that we can in the future | I am grateful for my family and friends who have always supported me in what I do and give me a sense of belonging and comfort | . Goals . I hope to finally understand how I can improve my level of happiness and self-confidence while taking this class, as I feel that it will motivate me to do well and make sure that I help out my entire team if they are having problems | .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week4hacks/2022/09/16/Psychology-and-the-Good-Life-Notes.html",
            "relUrl": "/markdown/week4hacks/2022/09/16/Psychology-and-the-Good-Life-Notes.html",
            "date": " ‚Ä¢ Sep 16, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "1.1 Collaboration Notes",
            "content": "1.1: Daily Video 1 . A computing innovation includes a program as an integral part of its function | A computing innovation can be physical, nonphysical computer software, or nonphysical computing concept | Collaboration that includes diverse perspectives helps avoid bias in the development of computing innovations | Effective collaboration produces a computing innovation that reflects the diversity of talents and perspectives of those who designed it | . Daily Video 1: Takeaways . Interpersonal skills learned through collaboration: Communication | Consensus Building | Conflict Resolution | Negotiation | . | . 1.1: Daily Video 2 . Pair Programming Two programmers work together as a pair | One programmer is the driver, who writes code, and the other programmer is the observer/pointer/navigator, who reviews each line of code as it is typed in | . | Think-Pair-Share Students first think through a problem by themselves, pair up with a partner to exchange ideas, and then share findings with the class | . | Leave Comments in Code! Communicate to your partner(s) | Communicate to yourself | Acknowledge code segments used from other sources | Acknowledge media used from other sources | Differentiate what you and your partner(s) did | Clarify the functionality of your code | . | How to Collaborate in Class Online Tools repl.it - multiplayer | GitHub - collaboration and repository | Shared document or folder | . | Ask friends and family to test drive your prgoram and give you feedback! | Check with your teacher for your coding platform | . | . Daily Video 2: Takeaways . Consultation and communication with users are important aspects of the development of computing innovations | Information gathered from potential users can be used to understand the purpose of a program from diverse perspectives and to develop a program that fully incorporates these perspectives | Online tools support collaboration by allowing programmers to share and provide feedback on ideas and documents | Common models such as pair programming exist to facilitate collaboration | . Personal Takeways . Watching these videos definitely opened my mind to how crucial collaboration is, especially in a field like computer science. I hope that from now on, my team and I will be able to communicate with each other and help each other no matter the circumstances. . Proof of Completon of Quesitons .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week4hacks/2022/09/14/Collaboration-1.1-Notes.html",
            "relUrl": "/markdown/week4hacks/2022/09/14/Collaboration-1.1-Notes.html",
            "date": " ‚Ä¢ Sep 14, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Code.Org Quiz Outline",
            "content": "Ideas for the Topic of My Quiz (9/9) . Something I could use as a study tool for another class (calc, chem, etc.) | Quiz about random famous people | Quiz about CSP vocab (sequence, data abstraction, liquid syntax, etc.) | . How I Want the Code to Function (9/9) . User will be prompted with a specific message depending on if they correctly or incorrectly answered a question | User will not get another chance to answer a question right after getting it wrong | The user will have their final score out of the number of questions after they have finished the quiz | . I might even try to design a game rather than a quiz on Code.org. We‚Äôll have to see! . Final Product (9/11) . I made my quiz about space and was able to show the user‚Äôs final score and if they answered a question correctly or incorrectly. While I was successful in programming the quiz, there were a few obstacles that I faced along the way. For example, since I added a lot of text to each of my screens, if I ever was trying to edit a specific label, it would be difficult for me to scroll through all of my labels before finding the desired one. I also had a difficult time organizing my code so that it was more readable, as I completely forgot about dividing my code into sections until after I finished the program. Overall, while I did have a few issues in desigining this program, I still managed to successfully produce a quiz that can help a user learn something new about space. . Relating My Quiz to the Create Performance Task Rubric . While my quiz does follow some of the requirements of the CPT, it doesn‚Äôt necessarily meet all of them. However, if I can refine this quiz, I can definitely make it so that it meets all requirements for the CPT. Below are some connections to each of the components of the Create Performance Task Rubric: . Program Purpose and Function . Purpose: The purpose of the function is to test a user‚Äôs knowledge on specific facts about space and NASA. In addition, the quiz is also intended to teach the user something that they may not have known about before taking the quiz. | Functionality: When the user clicks the start button to begin the quiz, they will be shown one question at a time, with a total of four questions in the entire quiz. Each question is a different type: clicking on an image to choose an answer, clicking on a radio button, typing something into a text box, and clicking on a button. If the user gets a question correct, they will have a screen popping up informing them that they answered correctly and will have a point added to their score (predefined as a variable equal to 0). If the user gets a question wrong, they will have a screen that says they chose the wrong answer and will have no points taken away from or added to their score. At the end, the user will have their final score displayed. | Input/Output: For this quiz, the input is the answer the user clicks on/types in. The output is if they answered correctly or not, which is shown by the screen that displays after they have answered the question. | . Data Abstraction . All of the points that a user earned from the quiz is stored in a variable called score, and while I did not include any lists, I definitely could refine my quiz more by incorporating dictionaries and lists. . Managing Complexity . One way that my quiz could manage complexity is to store all of the possible answers for each question into their own functions, and add iterations that classify an answer as right or wrong. This way, I won‚Äôt have to repeat the same lines of code over and over again. . Procedural Abstraction . I can make my code so that depending on what the user has inputted, a specific part of the code will be ran. . Algorithm Implementation . My quiz uses sequencing, selecting, and iterating in order to form an algorithm involving the quiz that someone else could use and incorporate into their own quiz or game. . Testing . I tested this quiz multiple times, both in the process of creating the quiz and even after I fully programmed it. For the first call, I made it so that the user got a specific question wrong and got the other two correct, therefore displaying a final score of 2 out of 3. For the second call, I made it so that the user got two questions wrong and one correct, giving a final score of 1 out of 3. | . Improvements . Find a more efficient way of writing the code rather than having the same lines of code be repeated multiple times | Add more segments to the code so that different inputs will result in a completely different part of the code being run | Make a function that responds accordingly to a user‚Äôs input to a question. This way, there will not be any need to have to write the same lines of code for every incorrect or correct answer | .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week3hacks/2022/09/09/Quiz-Outline.html",
            "relUrl": "/markdown/week3hacks/2022/09/09/Quiz-Outline.html",
            "date": " ‚Ä¢ Sep 9, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Create Performance Task App Idea",
            "content": "Create Performance Task Idea . I want to make a program in which a user can input their daily agenda. This will include what work they want to do for the day, specific times of the day for those activities, and the duration of each item in the daily agenda. . My Idea and the CPT Rubric . Here is how I plan for my program to meet each component of the rubric: . Row 1: Program Purpose and Function . The purpose of this program will be to encourage organization, as the user will input a list of activities they want to do for the day. Once the user has entered their specific things to do, the program will then compile what they have included into an organized, cohesive daily agenda. The program will also include specific details about how the user should go about doing a certain activity. . Row 2: Data Abstraction . What the user wants to do for the day will all be stored in a dictionary or list, which is what data abstraction essentially is. . Row 3: Managing Complexity . Using lists and dictionaries will manage the complexity because this way, there will not be any need to create a variable for every single activity that a user wants to do. . Row 4: Procedural Abstraction . I will make a segment of a program in which the program can separate the activities into certain categories (sports, entertainment, etc.). This way, the output (daily agenda) that the user receives will be coherent and well-organized. . Row 5: Algorithm Implementation . I will be using sequencing, selecting, and iterating in order to make the program compile the daily agenda. . Row 6: Testing . This program will definitely be tested multiple times in order to both ensure it is properly functioning and also to enhance the understanding of my own program. . What I Know vs. What I Need to Know . While I have a good idea about what I could do for the program purpose and function, data abstraction, and testing part of the project, I do think that I need to learn a little bit more about managing complexity, procedural abstraction, and algorithm implementation. Knowing what each of these components are will be critical in making sure that my creation meets all of the College Board criteria. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week3hacks/2022/09/09/Idea-For-CPT.html",
            "relUrl": "/markdown/week3hacks/2022/09/09/Idea-For-CPT.html",
            "date": " ‚Ä¢ Sep 9, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Lists, Dictionaries, and Iterations (and Quiz That Stores Dictionaries)",
            "content": "Lists and Dictionaries . Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. . import random # variable of type string name = &quot;Emaad Mir&quot; print(&quot;Name:&quot;, name, type(name)) # variable of type integer age = 15 print(&quot;Age:&quot;, age, type(age)) # variable of type float grade = 105.9 print(&quot;Grade:&quot;, grade, type(grade)) # another variable of type string fav_song = &quot;Running Up That Hill&quot; print(&quot;Favorite Song:&quot;, fav_song, type(fav_song)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;Html&quot;, &quot;CSS&quot;, &quot;C&quot;, &quot;Java&quot;, &quot;JavaScript&quot;, &quot;C&quot;, &quot;R&quot;] random_lang = random.choice(langs) print(&quot;Random Language:&quot;, random_lang) games = [&quot;Super Mario&quot;, &quot;Kirby&quot;, &quot;Wii Sports Resort&quot;, &quot;Subway Surfer&quot;] random_game = random.choice(games) print(&quot;Random Game:&quot;, random_game) print() # variable of type dictionary (a group of keys and values) person = { &quot;Name&quot;: name, &quot;Age&quot;: age, &quot;Grade&quot;: grade, &quot;Languages&quot;: langs, &quot;Favorite Song&quot;: fav_song } # prints what is in the person dictionary without brackets print(*[str(k) + &#39;:&#39; + str(v) for k,v in person.items()]) # LISTS THE FOOD IN REVERSE ORDER foods = [&quot;Bread&quot;, &quot;Pizza&quot;, &quot;Burgers&quot;, &quot;Chocolate Cake&quot;, &quot;Salad&quot;, &quot;Fried Rice&quot;, &quot;Noodles&quot;] foods.reverse() print(&#39; nReversed List:&#39;), print(&#39;, &#39;.join(foods)) # LISTS THE FOOD IN A RANDOM ORDER random.shuffle(foods) print(&#39; nRandom Order:&#39;), print(&#39;, &#39;.join(foods)) . Name: Emaad Mir &lt;class &#39;str&#39;&gt; Age: 15 &lt;class &#39;int&#39;&gt; Grade: 105.9 &lt;class &#39;float&#39;&gt; Favorite Song: Running Up That Hill &lt;class &#39;str&#39;&gt; Random Language: JavaScript Random Game: Subway Surfer Name:Emaad Mir Age:15 Grade:105.9 Languages:[&#39;Python&#39;, &#39;Html&#39;, &#39;CSS&#39;, &#39;C&#39;, &#39;Java&#39;, &#39;JavaScript&#39;, &#39;C&#39;, &#39;R&#39;] Favorite Song:Running Up That Hill Reversed List: Noodles, Fried Rice, Salad, Chocolate Cake, Burgers, Pizza, Bread Random Order: Pizza, Burgers, Chocolate Cake, Fried Rice, Noodles, Bread, Salad . List and Dictionary Purpose . Lists and Dictionaries are used to collect information. Mostly, when information is collected, it is formed into patterns. As that pattern is established you will be able collect many instances of that pattern. . List is used to collect many instances of a pattern . Dictionary is used to define data patterns. . Iteration is often used to process through lists. . To start exploring more deeply into List, Dictionary and Iteration this example will explore constructing a List of people and hobbies. . As we learned above, a List is a data type: class &#39;list&#39; A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list. A class usually has extra method to support working with its objects/instances. In the example below, the expression is appended to the &#39;list&#39; is the data type: class &#39;dict&#39; At the end, you see a fairly complicated data structure. This is a list of dictionaries, or a collection of many similar data patterns. The output looks similar to JavaScript Object Notation (JSON), Jekyll/GitHub pages yml files, FastPages Front Matter. As discussed we will see this key/value patter often, you will be required to understand this data structure and understand the parts. Just believe it is peasy ;) and it will become so. . InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and hobbies InfoDb.append({ &quot;FirstName&quot;: &quot;Emaad&quot;, &quot;LastName&quot;: &quot;Mir&quot;, &quot;DOB&quot;: &quot;January 12&quot;, &quot;Email&quot;: &quot;emaadidrismir@gmail.com&quot;, &quot;FavoriteFoods&quot;: [&quot;French Fries, Ice Cream, Bananas, Pizza&quot;], &quot;Hobbies&quot;: [&quot;Playing Squash&quot;, &quot;Sleeping&quot;, &quot;Hiking&quot;, &quot;Cooking&quot;, &quot;Playing Basketball&quot;] }) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Edwin&quot;, &quot;LastName&quot;: &quot;Abraham&quot;, &quot;DOB&quot;: &quot;August 7&quot;, &quot;Email&quot;: &quot;edwinab0007@gmail.com&quot;, &quot;FavoriteFoods&quot;: [&quot;Burgers, Pizza, Brownies, Watermelon&quot;], &quot;Hobbies&quot;: [&quot;Biking&quot;,&quot;Hiking&quot;, &quot;Playing Video Games&quot;] }) # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Emaad&#39;, &#39;LastName&#39;: &#39;Mir&#39;, &#39;DOB&#39;: &#39;January 12&#39;, &#39;Email&#39;: &#39;emaadidrismir@gmail.com&#39;, &#39;FavoriteFoods&#39;: [&#39;French Fries, Ice Cream, Bananas, Pizza&#39;], &#39;Hobbies&#39;: [&#39;Playing Squash&#39;, &#39;Sleeping&#39;, &#39;Hiking&#39;, &#39;Cooking&#39;, &#39;Playing Basketball&#39;]}, {&#39;FirstName&#39;: &#39;Edwin&#39;, &#39;LastName&#39;: &#39;Abraham&#39;, &#39;DOB&#39;: &#39;August 7&#39;, &#39;Email&#39;: &#39;edwinab0007@gmail.com&#39;, &#39;FavoriteFoods&#39;: [&#39;Burgers, Pizza, Brownies, Watermelon&#39;], &#39;Hobbies&#39;: [&#39;Biking&#39;, &#39;Hiking&#39;, &#39;Playing Video Games&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet, to applications, or preparing it to be stored into a database. It is a great way to exchange data between programs and programmers. Exchange of data between programs includes the data type the method/function and the format of the data type. These concepts are key to learning how to write functions, receive, and return data. This process is often referred to as an Application Programming Interface (API). . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. . Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. . Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. . def print_data(person): # defines the data being printed print(&quot;Name:&quot;, person[&quot;FirstName&quot;], person[&quot;LastName&quot;]) # Tells the computer to print certain things from the dictionary print(&quot;Birthday:&quot;, person[&quot;DOB&quot;]) print(&quot;Email:&quot;, person[&quot;Email&quot;]) print(&quot;FavoriteFoods:&quot;, &quot;, &quot;.join(person[&quot;FavoriteFoods&quot;])) print(&quot;Hobbies:&quot;, &quot;, &quot;.join(person[&quot;Hobbies&quot;])) print() print_data(InfoDb[0]) # Prints the data of the first person (Emaad Mir) . Name: Emaad Mir Birthday: January 12 Email: emaadidrismir@gmail.com FavoriteFoods: French Fries, Ice Cream, Bananas, Pizza Hobbies: Playing Squash, Sleeping, Hiking, Cooking, Playing Basketball . For Loops . def for_loop(): # for every person in the InfoDB, print their data until there is nothing else to print for person in InfoDb: print_data(person) def for_loop_with_index(): # prints out data depending on the length of the dictionary it comes from for i in range(len(InfoDb)): print_data(InfoDb[i]) print(&quot;REGULAR FOR LOOP OUTPUT n&quot;) for_loop() print(&quot;FOR LOOP WITH INDEX OUTPUT n&quot;) for_loop_with_index() . REGULAR FOR LOOP OUTPUT Name: Emaad Mir Birthday: January 12 Email: emaadidrismir@gmail.com FavoriteFoods: French Fries, Ice Cream, Bananas, Pizza Hobbies: Playing Squash, Sleeping, Hiking, Cooking, Playing Basketball Name: Edwin Abraham Birthday: August 7 Email: edwinab0007@gmail.com FavoriteFoods: Burgers, Pizza, Brownies, Watermelon Hobbies: Biking, Hiking, Playing Video Games FOR LOOP WITH INDEX OUTPUT Name: Emaad Mir Birthday: January 12 Email: emaadidrismir@gmail.com FavoriteFoods: French Fries, Ice Cream, Bananas, Pizza Hobbies: Playing Squash, Sleeping, Hiking, Cooking, Playing Basketball Name: Edwin Abraham Birthday: August 7 Email: edwinab0007@gmail.com FavoriteFoods: Burgers, Pizza, Brownies, Watermelon Hobbies: Biking, Hiking, Playing Video Games . While Loops . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() . def while_loop(): # i starts at 0 i = 0 while i &lt; len(InfoDb): # while i is less than the length of the dictionary (2), keep printing the people&#39;s data print_data(InfoDb[i]) i = i + 1 def while_loop_reverse(): # this does the same thing as described above, except it prints in reverse order i = len(InfoDb) - 1 while i &gt;= 0: print_data(InfoDb[i]) i = i -1 print(&quot;REGULAR WHILE LOOP n&quot;) # labels the regular and reversed version of the list of people and their info while_loop() print(&quot;REVERSED WHILE LOOP n&quot;) while_loop_reverse() . REGULAR WHILE LOOP Name: Emaad Mir Birthday: January 12 Email: emaadidrismir@gmail.com FavoriteFoods: French Fries, Ice Cream, Bananas, Pizza Hobbies: Playing Squash, Sleeping, Hiking, Cooking, Playing Basketball Name: Edwin Abraham Birthday: August 7 Email: edwinab0007@gmail.com FavoriteFoods: Burgers, Pizza, Brownies, Watermelon Hobbies: Biking, Hiking, Playing Video Games REVERSED WHILE LOOP Name: Edwin Abraham Birthday: August 7 Email: edwinab0007@gmail.com FavoriteFoods: Burgers, Pizza, Brownies, Watermelon Hobbies: Biking, Hiking, Playing Video Games Name: Emaad Mir Birthday: January 12 Email: emaadidrismir@gmail.com FavoriteFoods: French Fries, Ice Cream, Bananas, Pizza Hobbies: Playing Squash, Sleeping, Hiking, Cooking, Playing Basketball . Recursive Loops . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; . the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing . ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends . def recursive(index): # the recursive loop will keep calling itself until it is greater than or equal to the length of the dictionary if index &gt;= len(InfoDb): return # this is where the code will end print_data(InfoDb[index]) # prints the data and keeps printing until it has reached the length of the dictionary return recursive(index + 1) print(&quot;RECURSIVE INDEX OUTPUT n&quot;) recursive(0) # the computer will begin printing person 0&#39;s data and keep calling itself until there are no more people left . RECURSIVE INDEX OUTPUT Name: Emaad Mir Birthday: January 12 Email: emaadidrismir@gmail.com FavoriteFoods: French Fries, Ice Cream, Bananas, Pizza Hobbies: Playing Squash, Sleeping, Hiking, Cooking, Playing Basketball Name: Edwin Abraham Birthday: August 7 Email: edwinab0007@gmail.com FavoriteFoods: Burgers, Pizza, Brownies, Watermelon Hobbies: Biking, Hiking, Playing Video Games . Adding Records to a Dictionary With User Input . You can also have a user input something so that they can add it to the dictionary. For example, the function below shows a user inputting a student&#39;s full name and their grade level, which, once printed, will display what the details of that student. . grade_level = {} for i in range(1): student_name = input(&quot;Enter the student&#39;s full name &quot;) student_grade = input(&quot;Enter the student&#39;s grade level&quot;) grade_level[student_name] = student_grade print(grade_level) . {&#39;Emaad Mir&#39;: &#39;10th&#39;} . Quiz that Stores Dictionaries . Last week, we were all assigned to create a Python quiz. This week, we also need to make a quiz, but it needs to store dictionaries. Below is a demonstration of how that works: . import getpass, sys def question_and_answer(prompt): print(&quot;Question:&quot; +prompt) msg = input(&quot;Question:&quot; +prompt) print(&quot;Answer:&quot; +msg) ## defines the format of how the question will be asked def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Question: &quot; + prompt) return msg qa_list = [] # Shows the list of questions and answers qa_list.append({ &quot;Question&quot;: &quot;What syntax allows you to format and pass variables in html?&quot;, &quot;Answer&quot;: &quot;liquid&quot;, }) qa_list.append({ &quot;Question&quot;: &quot;What is the instructions for what you want a computer to do called?&quot;, &quot;Answer&quot;: &quot;input&quot;, }) qa_list.append({ &quot;Question&quot;: &quot;What is the name of the theme that your webpage has by default?&quot;, &quot;Answer&quot;: &quot;minima&quot;, }) qa_list.append({ &quot;Question&quot;: &quot;_______ involves calling itself repeatedly in order to achieve looping&quot;, &quot;Answer&quot;: &quot;recursion&quot;, }) qa_list.append({ &quot;Question&quot;: &quot;Lists and ________ are used to collect information&quot;, &quot;Answer&quot;: &quot;dictionaries&quot;, }) qa_list.append({ &quot;Question&quot;: &quot;What is the name of the file that the style directory is stored in (just the name, don&#39;t need the type of file)?&quot;, &quot;Answer&quot;: &quot;sass&quot; }) questions = len(qa_list) # number of questions equals the length of the list of questions and answers score = 0 # this is the score the user will begin with print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) # user will be prompted with this message before taking the quiz print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) response = question_with_response(&quot;Are you ready to take a test?&quot;) if response == &quot;yes&quot;: # if user types in yes, the quiz will commence print(&quot;You said yes, so let&#39;s get started!&quot;) for q in qa_list: print(q[&quot;Question&quot;]) response = input(q[&quot;Question&quot;]) if response == q[&quot;Answer&quot;]: print(response + &quot; is correct! Great job!&quot;) # if the answer the user types in matches what is on the list, the user will get a point added to score score = score + 1 else: # if the user types something that doesn&#39;t match what&#39;s on the list, the user won&#39;t get a point print(response + &quot; is incorrect! Sorry!&quot;) print(getpass.getuser() + &quot;, you scored &quot; + str(score) +&quot;/&quot; + str(questions) + &quot;, which is &quot; + str((score / questions) * 100) + &quot;%&quot;) else: print(&quot;Maybe another time!&quot;) # if the user responds with no to the first prompt, the user will have this message and the code will end . Hello, root running /bin/python3 You will be asked 6 questions. Question: Are you ready to take a test? You said yes, so let&#39;s get started! What syntax allows you to format and pass variables in html? liquid is correct! Great job! What is the instructions for what you want a computer to do called? input is correct! Great job! What is the name of the theme that your webpage has by default? minima is correct! Great job! _______ involves calling itself repeatedly in order to achieve looping recursion is correct! Great job! Lists and ________ are used to collect information dictionaries is correct! Great job! What is the name of the file that the style directory is stored in (just the name, don&#39;t need the type of file)? sass is correct! Great job! root, you scored 6/6, which is 100.0% .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/jupyter/python/week2hacks/2022/09/06/lists-and-dictionaries.html",
            "relUrl": "/jupyter/python/week2hacks/2022/09/06/lists-and-dictionaries.html",
            "date": " ‚Ä¢ Sep 6, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "My Attempt at Changing the Remote Theme",
            "content": "By default, your web page has the theme minima as shown in the image below in config.yml: . . The minima theme is okay, but I wanted to try something different to spice up my web page a little bit. I did this by looking for supported themes I could switch to and changing the jekyll theme from minima to midnight: . . However, when I went onto my web page to see the results, I got this: . . As you can see, all of the links that I had on the top right of the web page (about me, tags, vocab etc.) completely disappeared. The only button that you can see is the ‚ÄúView on GitHub‚Äù button. Changing the remote theme also altered the way my posts were displayed on my blog. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week2hacks/2022/09/04/theme-change-attempt.html",
            "relUrl": "/markdown/week2hacks/2022/09/04/theme-change-attempt.html",
            "date": " ‚Ä¢ Sep 4, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Takeaways From Alumni Panel",
            "content": "Major Takeaways/Insights From the Event: . Keep a positive mindset and you will get through . | Will like comp sci if you like problem solving . | CS is important to learn . | Even if you go into aerospace you still need to understand programming . | Programming is important in many fields other than CS . | APCSA helps with making your own games and other programs . | Some of the projects you create with CS can be used to change the world . | Keep your motivation! . | Tell yourself that there is a solution on the Internet, which has the greatest advice for computer science . | Focus on your own path when it comes to CS . | Don‚Äôt worry about what other people are doing . | Having a purpose to apply CS to can be very helpful . | Google can answer all of your syntax questions! :) . | Make sure that you don‚Äôt cut corners, as having the mindset to go above and beyond can help you solve bigger problems in the long run . | Computer science will not always have a rigid or specific structure . | Be willing to get started on coding . | Project-based learning classes will not go away . | Studying in groups and working with other people can help improve your understanding of certain topics that your teacher may not be able to give you one-on-one attention on . | Coding will be everywhere, no matter what you are majoring in . | Having an interaction with code can be helpful . | In order to apply for a job, you should look at/put together your resume, as that is one of the first requirements of job applications . | Knowledge of Linux + other operating systems can come in handy when doing internships . | Applying yourself, learning, and taking the class seriously will take you far . | It is good to have your own personal projects and clubs outside of school, as that can set you apart from all the others students . | It is difficult to get into the CS major at UCSD . | To get an internship, you should have a resume and know when to apply for one . | Referrals can be useful for getting jobs . | Main Takeaway: Listening to what former students had to say and their tips on how to get far in CS now inspires me to change the attitude I have towards this class and computer science in general. If I am able to possess qualities of keeping a positive mindset, expecting to fail along the way, and keeping my motivation, it will definitely take me far in the astonishing field of computer science. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/2022/08/29/Takeaways-From-Alumni-Panel.html",
            "relUrl": "/2022/08/29/Takeaways-From-Alumni-Panel.html",
            "date": " ‚Ä¢ Aug 29, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Lists, Dictionaries, Iteration",
            "content": "Lists and Dictionaries . As a quick review we used variables in the introduction last week. Variables all have a type: String, Integer, Float, List and Dictionary are some key types. In Python, variables are given a type at assignment, Types are important to understand and will impact operations, as we saw when we were required to user str() function in concatenation. . Developers often think of variables as primitives or collections. Look at this example and see if you can see hypothesize the difference between a primitive and a collection. | Take a minute and see if you can reference other elements in the list or other keys in the dictionary. Show output. | # variable of type string name = &quot;Emaad Mir&quot; print(&quot;name&quot;, name, type(name)) # variable of type integer age = 15 print(&quot;age&quot;, age, type(age)) # variable of type float score = 100.0 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;, &quot;C&quot;, &quot;R&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[2]&quot;, langs[2], type(langs[2])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Emaad Mir &lt;class &#39;str&#39;&gt; age 15 &lt;class &#39;int&#39;&gt; score 100.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;, &#39;C&#39;, &#39;R&#39;] &lt;class &#39;list&#39;&gt; length 6 - langs[2] Java &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Emaad Mir&#39;, &#39;age&#39;: 15, &#39;score&#39;: 100.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;Bash&#39;, &#39;C&#39;, &#39;R&#39;]} &lt;class &#39;dict&#39;&gt; - person[&#34;name&#34;] Emaad Mir &lt;class &#39;str&#39;&gt; . List and Dictionary purpose . Our society is being build on information. List and Dictionaries are used to collect information. Mostly, when information is collected it is formed into patterns. As that pattern is established you will collect many instances of that pattern. . List is used to collect many | Dictionary is used to define data patterns. | Iteration is often used to process through lists. | . To start exploring more deeply into List, Dictionary and Iteration we will explore constructing a List of people and cars. . As we learned above, List is a data type: class &#39;list&#39; | A &#39;list&#39; data type has the method &#39;.append(expression)&#39; that allows you to add to the list | In the example below, the expression appended to the &#39;list&#39; is the data type: class &#39;dict&#39; | At the end, you see a fairly complicated data structure. This is a list of dictionaries. The output looks similar to JSON and we will see this often, you will be required to understand this data structure and understand the parts. Easy peasy ;). | . InfoDb = [] # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Emaad&quot;, &quot;LastName&quot;: &quot;Mir&quot;, &quot;DOB&quot;: &quot;January 12&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;emaadidrismir@gmail.com&quot;, &quot;fav_color&quot;: &quot;Blue&quot;, }) print(InfoDb) # Append to List a 2nd Dictionary of key/values InfoDb.append({ &quot;FirstName&quot;: &quot;Sunny&quot;, &quot;LastName&quot;: &quot;Naidu&quot;, &quot;DOB&quot;: &quot;August 2&quot;, &quot;Residence&quot;: &quot;Temecula&quot;, &quot;Email&quot;: &quot;snaidu@powayusd.com&quot;, &quot;Owns_Cars&quot;: [&quot;4Runner&quot;] }) print() print() # Print the data structure print(InfoDb) . [{&#39;FirstName&#39;: &#39;Emaad&#39;, &#39;LastName&#39;: &#39;Mir&#39;, &#39;DOB&#39;: &#39;January 12&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;emaadidrismir@gmail.com&#39;, &#39;fav_color&#39;: &#39;Blue&#39;}] [{&#39;FirstName&#39;: &#39;Emaad&#39;, &#39;LastName&#39;: &#39;Mir&#39;, &#39;DOB&#39;: &#39;January 12&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;emaadidrismir@gmail.com&#39;, &#39;fav_color&#39;: &#39;Blue&#39;}, {&#39;FirstName&#39;: &#39;Sunny&#39;, &#39;LastName&#39;: &#39;Naidu&#39;, &#39;DOB&#39;: &#39;August 2&#39;, &#39;Residence&#39;: &#39;Temecula&#39;, &#39;Email&#39;: &#39;snaidu@powayusd.com&#39;, &#39;Owns_Cars&#39;: [&#39;4Runner&#39;]}] . Formatted output of List/Dictionary - for loop . Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process... . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. | Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. | Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. | . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;fav_color:&quot;, d_rec[&quot;fav_color&quot;]) # end=&quot;&quot; make sure no return occurs print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Emaad Mir Residence: San Diego Birth Day: January 12 fav_color: Blue Cars: . KeyError Traceback (most recent call last) /mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 7 in &lt;cell line: 19&gt;() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; for record in InfoDb: &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=16&#39;&gt;17&lt;/a&gt; print_data(record) &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=18&#39;&gt;19&lt;/a&gt; for_loop() /mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 7 in for_loop() &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=14&#39;&gt;15&lt;/a&gt; print(&#34;For loop output n&#34;) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=15&#39;&gt;16&lt;/a&gt; for record in InfoDb: &gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=16&#39;&gt;17&lt;/a&gt; print_data(record) /mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb Cell 7 in print_data(d_rec) &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; print(&#34; t&#34;, &#34;fav_color:&#34;, d_rec[&#34;fav_color&#34;]) # end=&#34;&#34; make sure no return occurs &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; print(&#34; t&#34;, &#34;Cars: &#34;, end=&#34;&#34;) # end=&#34;&#34; make sure no return occurs -&gt; &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; print(&#34;, &#34;.join(d_rec[&#34;Owns_Cars&#34;])) # join allows printing a string list with separator &lt;a href=&#39;vscode-notebook-cell://wsl%2Bubuntu/mnt/c/Users/emaad/Documents/GitHub/emaad-fastpages/_notebooks/2022-08-29-TP120-python_lists.ipynb#W6sdnNjb2RlLXJlbW90ZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; print() KeyError: &#39;Owns_Cars&#39; . Alternate methods for iteration - while loop . In coding, there are usually many ways to achieve the same result. Defined are functions illustrating using index to reference records in a list, these methods are called a &quot;while&quot; loop and &quot;recursion&quot;. . The while_loop() function contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() | . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . Calling a function repeatedly - recursion . This final technique achieves looping by calling itself repeatedly. . recursive_loop(i) function is primed with the value 0 on its activation with &quot;recursive_loop(0)&quot; | the last statement indented inside the if statement &quot;recursive_loop(i + 1)&quot; activates another call to the recursive_loop(i) function, each time i is increasing | ultimately the &quot;if i &lt; len(InfoDb):&quot; will evaluate to false and the program ends | . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Hacks . Add a couple of records to the InfoDb | Try to do a for loop with an index | Pair Share code somethings creative or unique, with loops and data. Hints... Would it be possible to output data in a reverse order? | Are there other methods that can be performed on lists? | Could you create new or add to dictionary data set? Could you do it with input? | Make a quiz that stores in a List of Dictionaries. | . | .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/collegeboard/python_lists",
            "relUrl": "/collegeboard/python_lists",
            "date": " ‚Ä¢ Aug 29, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Ap Chem Lab",
            "content": "Paper Chromatography Lab . By: Emaad Mir, Bryan Wang, Steven Zhu, Anay Sabhnani . Period 1 . Materials: Expo Marker, Felt Pen, Sharpie, Crayola, paper slip, mystery sample, 70% Isopropyl alcohol, beaker . Procedure: . Place four dots, one for each marker, in a row near the bottom of the paper slip. . | Fill a beaker with 10 mL of isopropyl . | Dip the bottom of the paper slip into the beaker of isopropyl alcohol and let it sit for 10 minutes . | Measure Rf values for each color per ink dot . | . The Science Behind Paper Chromatography: . Paper is made up of cellulose, which contains the chemical compound OH, which is polar. Due to the nature of the structure and the polarity of OH, cellulose is polar . | The mobile phase, or the solvent of 70% isopropyl alcohol (nonpolar), moves up the paper through capillary action. In doing so, it also carries soluble compounds along with it. . | After the mobile phase has moved up as far as it can go, the different ink dots will have moved up as well, each a different distance. . | This is because of the polarity of the ink dots. Since the mobile phase is nonpolar and the stationary phase is polar, the ink dots have moved up different lengths because of their differing polarities. . | A dot that has moved up very close to the solvent front, with the nonpolar mobile phase, would be very nonpolar, as it had little to no attraction to the polar stationary phase and was soluble in the mobile phase because like dissolves like, and was carried up with the mobile phase very easily. . | A dot that has not moved up very much at all would be more polar, as it had a stronger attraction to the polar stationary phase than the nonpolar mobile phase. . | Because of separation by polarity, we can use paper chromatography and the unique polarity of each ink type to find the ransom note‚Äôs ink. . | . CER: Who Was The Thief? . C: The marker used by the thief was the expo marker. . E: . Marker Rf Values (respective to colors) Colors . Expo | 0.648, 0.755, and 0.971 | Yellow, Pink, and Blue | . Sharpie | 0.516 and 0.628 | Gray and Purple | . Crayola | 0.720 and 0.988 | Pink and Blue | . Felt | 0.510, 0.779, and 0.991 | Green, Pink, and Blue | . Mystery Sample | 0.553, 0.723, and 0.940 | Yellow, Pink, and Blue | . R: Through qualitatively and quantitatively analyzing each marker‚Äôs colors and values, the marker that the thief used can be determined. In terms of qualitative data, it can be observed that the mystery marker is made up of three different compounds that are yellow, blue, and pink. The expo marker is also made up of yellow, pink, and blue compounds, making it the best match for what the thief used because the colors match. The sharpie is made of gray and purple compounds, meaning that it is not a match. The Crayola marker is only made with pink and blue compounds, so it is also unlikely that the thief used the Crayola marker. The felt tip is made up of blue, green, and pink compounds, so it is not a match. In terms of quantitative data, the retention factors of the compounds from the mystery sample were 0.553, 0.723, and 0.940, while the retention factors for the Expo marker were 0.648, 0.755, and 0.971, making the Expo marker‚Äôs values closest to that of the mystery‚Äôs. The sharpie and Crayola can be ruled out because they lack third Rf values. The felt spot‚Äôs Rf values are also somewhat close to the Mystery sample‚Äôs, but as proven in the qualitative analysis, it cannot be the pen used by the thief. Because the Expo marker had the greatest quantitative and qualitative similarities with the mystery marker, it can be concluded that the thief used the Expo marker in writing the ransom note. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/2022/08/29/AP-Chem-Lab.html",
            "relUrl": "/2022/08/29/AP-Chem-Lab.html",
            "date": " ‚Ä¢ Aug 29, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "It's Quiz Time!",
            "content": "import getpass, sys def question_and_answer(prompt): print(&quot;Question:&quot; +prompt) msg = input(&quot;Question:&quot; +prompt) print(&quot;Answer:&quot; +msg) ## defines the format of how the question will be asked def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input(&quot;Question: &quot; + prompt) return msg question_list = [ ## shows the list of questions that will be asked on the quiz &quot;What command is used to include other functions that were previously developed?&quot;, &quot;What command is used to evaluate correct or incorrect response in this example?&quot;, &quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;, &quot;What is the term used to describe a set of two or more lines of code?&quot;, &quot;What is a key word used in Python to describe a function?&quot;, &quot;What is the name of the library that we are importing this function from?&quot; ] answer_list = [ &quot;import&quot;, &quot;if&quot;, &quot;expression&quot;, &quot;sequence&quot;, &quot;def&quot;, &quot;os&quot; ] ## the number of questions being asked is equal to how many there are on the list questions = len(question_list) correct = 0 ## This is what the user will be prompted with before taking the quiz print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) rsp = question_with_response(&quot;Are you ready to take a test?&quot;) ## If the user types in yes as their answer, the quiz will begin if rsp == &quot;yes&quot;: print(&quot;You said yes, so let&#39;s get started!&quot;) ## Depending on the question, if the answer the user inputted matches one of the answers on the list, they will get a message saying they are correct. for i in range(len(question_list)): rsp = question_with_response(question_list[i]) if rsp == answer_list[i]: print(rsp + &quot; is correct! Yay!&quot;) correct += 1 ## If the answer the user inputted doesn&#39;t match any of the answers on the list (again depending on question), they will get a message saying they are wrong. else: print(rsp + &quot; is incorrect! Sorry!&quot;) ## After completing the quiz, the user will get their score out of 6 and the percentage print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions) + &quot; which is &quot; + str((correct / questions) * 100) + &quot;%&quot;) ## If the user types in no to not being ready, the user will have this message else: print(&quot;You said no, so come back when you&#39;re ready!&quot;) . Hello, root running /bin/python3 You will be asked 6 questions. Question: Are you ready to take a test? You said yes, so let&#39;s get started! Question: What command is used to include other functions that were previously developed? import is correct! Yay! Question: What command is used to evaluate correct or incorrect response in this example? m is incorrect! Sorry! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? k is incorrect! Sorry! Question: What is the term used to describe a set of two or more lines of code? l is incorrect! Sorry! Question: What is a key word used in Python to describe a function? l is incorrect! Sorry! Question: What is the name of the library that we are importing this function from? os is correct! Yay! root you scored 2/6 which is 33.33333333333333% . qa_list = [] qa_list.append({ &quot;Question&quot;: &quot;What command is used to include other functions that were previously developed?&quot;, &quot;Answer&quot;: &quot;import&quot; }) score = 0 for q in qa_list: response = input(q[&quot;Question&quot;]) if response == q[&quot;Answer&quot;]: score = score + 1 .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/jupyter/python/week1hacks/2022/08/27/quiz_nb.html",
            "relUrl": "/jupyter/python/week1hacks/2022/08/27/quiz_nb.html",
            "date": " ‚Ä¢ Aug 27, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Bash Notebook Test",
            "content": "python3 --version python2 --version . Python 3.10.4 Python 2.7.18 . conda activate conda list conda deactivate . (base) # packages in environment at /root/anaconda3: # # Name Version Build Channel _ipyw_jlab_nb_ext_conf 0.1.0 py39h06a4308_1 _libgcc_mutex 0.1 main _openmp_mutex 4.5 1_gnu aiohttp 3.8.1 py39h7f8727e_1 aiosignal 1.2.0 pyhd3eb1b0_0 alabaster 0.7.12 pyhd3eb1b0_0 anaconda 2022.05 py39_0 anaconda-client 1.9.0 py39h06a4308_0 anaconda-navigator 2.1.4 py39h06a4308_0 anaconda-project 0.10.2 pyhd3eb1b0_0 anyio 3.5.0 py39h06a4308_0 appdirs 1.4.4 pyhd3eb1b0_0 argon2-cffi 21.3.0 pyhd3eb1b0_0 argon2-cffi-bindings 21.2.0 py39h7f8727e_0 arrow 1.2.2 pyhd3eb1b0_0 astroid 2.6.6 py39h06a4308_0 astropy 5.0.4 py39hce1f21e_0 asttokens 2.0.5 pyhd3eb1b0_0 async-timeout 4.0.1 pyhd3eb1b0_0 atomicwrites 1.4.0 py_0 attrs 21.4.0 pyhd3eb1b0_0 automat 20.2.0 py_0 autopep8 1.6.0 pyhd3eb1b0_0 babel 2.9.1 pyhd3eb1b0_0 backcall 0.2.0 pyhd3eb1b0_0 backports 1.1 pyhd3eb1b0_0 backports.functools_lru_cache 1.6.4 pyhd3eb1b0_0 backports.tempfile 1.0 pyhd3eb1b0_1 backports.weakref 1.0.post1 py_1 bcrypt 3.2.0 py39he8ac12f_0 beautifulsoup4 4.11.1 py39h06a4308_0 binaryornot 0.4.4 pyhd3eb1b0_1 bitarray 2.4.1 py39h7f8727e_0 bkcharts 0.2 py39h06a4308_0 black 19.10b0 py_0 blas 1.0 mkl bleach 4.1.0 pyhd3eb1b0_0 blosc 1.21.0 h8c45485_0 bokeh 2.4.2 py39h06a4308_0 boto3 1.21.32 pyhd3eb1b0_0 botocore 1.24.32 pyhd3eb1b0_0 bottleneck 1.3.4 py39hce1f21e_0 brotli 1.0.9 he6710b0_2 brotlipy 0.7.0 py39h27cfd23_1003 brunsli 0.1 h2531618_0 bzip2 1.0.8 h7b6447c_0 c-ares 1.18.1 h7f8727e_0 ca-certificates 2022.3.29 h06a4308_1 cachetools 4.2.2 pyhd3eb1b0_0 certifi 2021.10.8 py39h06a4308_2 cffi 1.15.0 py39hd667e15_1 cfitsio 3.470 hf0d0db6_6 chardet 4.0.0 py39h06a4308_1003 charls 2.2.0 h2531618_0 charset-normalizer 2.0.4 pyhd3eb1b0_0 click 8.0.4 py39h06a4308_0 cloudpickle 2.0.0 pyhd3eb1b0_0 clyent 1.2.2 py39h06a4308_1 colorama 0.4.4 pyhd3eb1b0_0 colorcet 2.0.6 pyhd3eb1b0_0 conda 4.12.0 py39h06a4308_0 conda-build 3.21.8 py39h06a4308_2 conda-content-trust 0.1.1 pyhd3eb1b0_0 conda-env 2.6.0 1 conda-pack 0.6.0 pyhd3eb1b0_0 conda-package-handling 1.8.1 py39h7f8727e_0 conda-repo-cli 1.0.4 pyhd3eb1b0_0 conda-token 0.3.0 pyhd3eb1b0_0 conda-verify 3.4.2 py_1 constantly 15.1.0 pyh2b92418_0 cookiecutter 1.7.3 pyhd3eb1b0_0 cryptography 3.4.8 py39hd23ed53_0 cssselect 1.1.0 pyhd3eb1b0_0 curl 7.82.0 h7f8727e_0 cycler 0.11.0 pyhd3eb1b0_0 cython 0.29.28 py39h295c915_0 cytoolz 0.11.0 py39h27cfd23_0 daal4py 2021.5.0 py39h78b71dc_0 dal 2021.5.1 h06a4308_803 dask 2022.2.1 pyhd3eb1b0_0 dask-core 2022.2.1 pyhd3eb1b0_0 dataclasses 0.8 pyh6d0b6a4_7 datashader 0.13.0 pyhd3eb1b0_1 datashape 0.5.4 py39h06a4308_1 dbus 1.13.18 hb2f20db_0 debugpy 1.5.1 py39h295c915_0 decorator 5.1.1 pyhd3eb1b0_0 defusedxml 0.7.1 pyhd3eb1b0_0 diff-match-patch 20200713 pyhd3eb1b0_0 distributed 2022.2.1 pyhd3eb1b0_0 docutils 0.17.1 py39h06a4308_1 entrypoints 0.4 py39h06a4308_0 et_xmlfile 1.1.0 py39h06a4308_0 executing 0.8.3 pyhd3eb1b0_0 expat 2.4.4 h295c915_0 filelock 3.6.0 pyhd3eb1b0_0 flake8 3.9.2 pyhd3eb1b0_0 flask 1.1.2 pyhd3eb1b0_0 fontconfig 2.13.1 h6c09931_0 fonttools 4.25.0 pyhd3eb1b0_0 freetype 2.11.0 h70c0345_0 frozenlist 1.2.0 py39h7f8727e_0 fsspec 2022.2.0 pyhd3eb1b0_0 future 0.18.2 py39h06a4308_1 gensim 4.1.2 py39h295c915_0 giflib 5.2.1 h7b6447c_0 glib 2.69.1 h4ff587b_1 glob2 0.7 pyhd3eb1b0_0 gmp 6.2.1 h2531618_2 gmpy2 2.1.2 py39heeb90bb_0 google-api-core 1.25.1 pyhd3eb1b0_0 google-auth 1.33.0 pyhd3eb1b0_0 google-cloud-core 1.7.1 pyhd3eb1b0_0 google-cloud-storage 1.31.0 py_0 google-crc32c 1.1.2 py39h27cfd23_0 google-resumable-media 1.3.1 pyhd3eb1b0_1 googleapis-common-protos 1.53.0 py39h06a4308_0 greenlet 1.1.1 py39h295c915_0 grpcio 1.42.0 py39hce63b2e_0 gst-plugins-base 1.14.0 h8213a91_2 gstreamer 1.14.0 h28cd5cc_2 h5py 3.6.0 py39ha0f2276_0 hdf5 1.10.6 hb1b8bf9_0 heapdict 1.0.1 pyhd3eb1b0_0 holoviews 1.14.8 pyhd3eb1b0_0 hvplot 0.7.3 pyhd3eb1b0_1 hyperlink 21.0.0 pyhd3eb1b0_0 icu 58.2 he6710b0_3 idna 3.3 pyhd3eb1b0_0 imagecodecs 2021.8.26 py39h4cda21f_0 imageio 2.9.0 pyhd3eb1b0_0 imagesize 1.3.0 pyhd3eb1b0_0 importlib-metadata 4.11.3 py39h06a4308_0 importlib_metadata 4.11.3 hd3eb1b0_0 incremental 21.3.0 pyhd3eb1b0_0 inflection 0.5.1 py39h06a4308_0 iniconfig 1.1.1 pyhd3eb1b0_0 intake 0.6.5 pyhd3eb1b0_0 intel-openmp 2021.4.0 h06a4308_3561 intervaltree 3.1.0 pyhd3eb1b0_0 ipykernel 6.9.1 py39h06a4308_0 ipython 8.2.0 py39h06a4308_0 ipython_genutils 0.2.0 pyhd3eb1b0_1 ipywidgets 7.6.5 pyhd3eb1b0_1 isort 5.9.3 pyhd3eb1b0_0 itemadapter 0.3.0 pyhd3eb1b0_0 itemloaders 1.0.4 pyhd3eb1b0_1 itsdangerous 2.0.1 pyhd3eb1b0_0 jdcal 1.4.1 pyhd3eb1b0_0 jedi 0.18.1 py39h06a4308_1 jeepney 0.7.1 pyhd3eb1b0_0 jinja2 2.11.3 pyhd3eb1b0_0 jinja2-time 0.2.0 pyhd3eb1b0_3 jmespath 0.10.0 pyhd3eb1b0_0 joblib 1.1.0 pyhd3eb1b0_0 jpeg 9e h7f8727e_0 jq 1.6 h27cfd23_1000 json5 0.9.6 pyhd3eb1b0_0 jsonschema 4.4.0 py39h06a4308_0 jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 jxrlib 1.1 h7b6447c_2 keyring 23.4.0 py39h06a4308_0 kiwisolver 1.3.2 py39h295c915_0 krb5 1.19.2 hac12032_0 lazy-object-proxy 1.6.0 py39h27cfd23_0 lcms2 2.12 h3be6417_0 ld_impl_linux-64 2.35.1 h7274673_9 lerc 3.0 h295c915_0 libaec 1.0.4 he6710b0_1 libarchive 3.4.2 h62408e4_0 libcrc32c 1.1.1 he6710b0_2 libcurl 7.82.0 h0b77cf5_0 libdeflate 1.8 h7f8727e_5 libedit 3.1.20210910 h7f8727e_0 libev 4.33 h7f8727e_1 libffi 3.3 he6710b0_2 libgcc-ng 9.3.0 h5101ec6_17 libgfortran-ng 7.5.0 ha8ba4b0_17 libgfortran4 7.5.0 ha8ba4b0_17 libgomp 9.3.0 h5101ec6_17 libidn2 2.3.2 h7f8727e_0 liblief 0.11.5 h295c915_1 libllvm11 11.1.0 h3826bc1_1 libnghttp2 1.46.0 hce63b2e_0 libpng 1.6.37 hbc83047_0 libprotobuf 3.19.1 h4ff587b_0 libsodium 1.0.18 h7b6447c_0 libspatialindex 1.9.3 h2531618_0 libssh2 1.10.0 h8f2d780_0 libstdcxx-ng 9.3.0 hd4cf53a_17 libtiff 4.2.0 h85742a9_0 libunistring 0.9.10 h27cfd23_0 libuuid 1.0.3 h7f8727e_2 libwebp 1.2.2 h55f646e_0 libwebp-base 1.2.2 h7f8727e_0 libxcb 1.14 h7b6447c_0 libxml2 2.9.12 h03d6c58_0 libxslt 1.1.34 hc22bd24_0 libzopfli 1.0.3 he6710b0_0 llvmlite 0.38.0 py39h4ff587b_0 locket 0.2.1 py39h06a4308_2 lxml 4.8.0 py39h1f438cf_0 lz4-c 1.9.3 h295c915_1 lzo 2.10 h7b6447c_2 markdown 3.3.4 py39h06a4308_0 markupsafe 2.0.1 py39h27cfd23_0 matplotlib 3.5.1 py39h06a4308_1 matplotlib-base 3.5.1 py39ha18d171_1 matplotlib-inline 0.1.2 pyhd3eb1b0_2 mccabe 0.6.1 py39h06a4308_1 mistune 0.8.4 py39h27cfd23_1000 mkl 2021.4.0 h06a4308_640 mkl-service 2.4.0 py39h7f8727e_0 mkl_fft 1.3.1 py39hd3c417c_0 mkl_random 1.2.2 py39h51133e4_0 mock 4.0.3 pyhd3eb1b0_0 mpc 1.1.0 h10f8cd9_1 mpfr 4.0.2 hb69a4c5_1 mpi 1.0 mpich mpich 3.3.2 hc856adb_0 mpmath 1.2.1 py39h06a4308_0 msgpack-python 1.0.2 py39hff7bd54_1 multidict 5.2.0 py39h7f8727e_2 multipledispatch 0.6.0 py39h06a4308_0 munkres 1.1.4 py_0 mypy_extensions 0.4.3 py39h06a4308_1 navigator-updater 0.2.1 py39_1 nbclassic 0.3.5 pyhd3eb1b0_0 nbclient 0.5.13 py39h06a4308_0 nbconvert 6.4.4 py39h06a4308_0 nbformat 5.3.0 py39h06a4308_0 ncurses 6.3 h7f8727e_2 nest-asyncio 1.5.5 py39h06a4308_0 networkx 2.7.1 pyhd3eb1b0_0 nltk 3.7 pyhd3eb1b0_0 nose 1.3.7 pyhd3eb1b0_1008 notebook 6.4.8 py39h06a4308_0 numba 0.55.1 py39h51133e4_0 numexpr 2.8.1 py39h6abb31d_0 numpy 1.21.5 py39he7a7128_1 numpy-base 1.21.5 py39hf524024_1 numpydoc 1.2 pyhd3eb1b0_0 olefile 0.46 pyhd3eb1b0_0 oniguruma 6.9.7.1 h27cfd23_0 openjpeg 2.4.0 h3ad879b_0 openpyxl 3.0.9 pyhd3eb1b0_0 openssl 1.1.1n h7f8727e_0 packaging 21.3 pyhd3eb1b0_0 pandas 1.4.2 py39h295c915_0 pandocfilters 1.5.0 pyhd3eb1b0_0 panel 0.13.0 py39h06a4308_0 param 1.12.0 pyhd3eb1b0_0 parsel 1.6.0 py39h06a4308_0 parso 0.8.3 pyhd3eb1b0_0 partd 1.2.0 pyhd3eb1b0_1 patchelf 0.13 h295c915_0 pathspec 0.7.0 py_0 patsy 0.5.2 py39h06a4308_1 pcre 8.45 h295c915_0 pep8 1.7.1 py39h06a4308_0 pexpect 4.8.0 pyhd3eb1b0_3 pickleshare 0.7.5 pyhd3eb1b0_1003 pillow 9.0.1 py39h22f2fdc_0 pip 21.2.4 py39h06a4308_0 pkginfo 1.8.2 pyhd3eb1b0_0 plotly 5.6.0 pyhd3eb1b0_0 pluggy 1.0.0 py39h06a4308_1 poyo 0.5.0 pyhd3eb1b0_0 prometheus_client 0.13.1 pyhd3eb1b0_0 prompt-toolkit 3.0.20 pyhd3eb1b0_0 prompt_toolkit 3.0.20 hd3eb1b0_0 protego 0.1.16 py_0 protobuf 3.19.1 py39h295c915_0 psutil 5.8.0 py39h27cfd23_1 ptyprocess 0.7.0 pyhd3eb1b0_2 pure_eval 0.2.2 pyhd3eb1b0_0 py 1.11.0 pyhd3eb1b0_0 py-lief 0.11.5 py39h295c915_1 pyasn1 0.4.8 pyhd3eb1b0_0 pyasn1-modules 0.2.8 py_0 pycodestyle 2.7.0 pyhd3eb1b0_0 pycosat 0.6.3 py39h27cfd23_0 pycparser 2.21 pyhd3eb1b0_0 pyct 0.4.6 py39h06a4308_0 pycurl 7.44.1 py39h8f2d780_1 pydispatcher 2.0.5 py39h06a4308_2 pydocstyle 6.1.1 pyhd3eb1b0_0 pyerfa 2.0.0 py39h27cfd23_0 pyflakes 2.3.1 pyhd3eb1b0_0 pygments 2.11.2 pyhd3eb1b0_0 pyhamcrest 2.0.2 pyhd3eb1b0_2 pyjwt 2.1.0 py39h06a4308_0 pylint 2.9.6 py39h06a4308_1 pyls-spyder 0.4.0 pyhd3eb1b0_0 pyodbc 4.0.32 py39h295c915_1 pyopenssl 21.0.0 pyhd3eb1b0_1 pyparsing 3.0.4 pyhd3eb1b0_0 pyqt 5.9.2 py39h2531618_6 pyrsistent 0.18.0 py39heee7806_0 pysocks 1.7.1 py39h06a4308_0 pytables 3.6.1 py39h77479fe_1 pytest 7.1.1 py39h06a4308_0 python 3.9.12 h12debd9_0 python-dateutil 2.8.2 pyhd3eb1b0_0 python-fastjsonschema 2.15.1 pyhd3eb1b0_0 python-libarchive-c 2.9 pyhd3eb1b0_1 python-lsp-black 1.0.0 pyhd3eb1b0_0 python-lsp-jsonrpc 1.0.0 pyhd3eb1b0_0 python-lsp-server 1.2.4 pyhd3eb1b0_0 python-slugify 5.0.2 pyhd3eb1b0_0 python-snappy 0.6.0 py39h2531618_3 pytz 2021.3 pyhd3eb1b0_0 pyviz_comms 2.0.2 pyhd3eb1b0_0 pywavelets 1.3.0 py39h7f8727e_0 pyxdg 0.27 pyhd3eb1b0_0 pyyaml 6.0 py39h7f8727e_1 pyzmq 22.3.0 py39h295c915_2 qdarkstyle 3.0.2 pyhd3eb1b0_0 qstylizer 0.1.10 pyhd3eb1b0_0 qt 5.9.7 h5867ecd_1 qtawesome 1.0.3 pyhd3eb1b0_0 qtconsole 5.3.0 pyhd3eb1b0_0 qtpy 2.0.1 pyhd3eb1b0_0 queuelib 1.5.0 py39h06a4308_0 readline 8.1.2 h7f8727e_1 regex 2022.3.15 py39h7f8727e_0 requests 2.27.1 pyhd3eb1b0_0 requests-file 1.5.1 pyhd3eb1b0_0 ripgrep 12.1.1 0 rope 0.22.0 pyhd3eb1b0_0 rsa 4.7.2 pyhd3eb1b0_1 rtree 0.9.7 py39h06a4308_1 ruamel_yaml 0.15.100 py39h27cfd23_0 s3transfer 0.5.0 pyhd3eb1b0_0 scikit-image 0.19.2 py39h51133e4_0 scikit-learn 1.0.2 py39h51133e4_1 scikit-learn-intelex 2021.5.0 py39h06a4308_0 scipy 1.7.3 py39hc147768_0 scrapy 2.6.1 py39h06a4308_0 seaborn 0.11.2 pyhd3eb1b0_0 secretstorage 3.3.1 py39h06a4308_0 send2trash 1.8.0 pyhd3eb1b0_1 service_identity 18.1.0 pyhd3eb1b0_1 setuptools 61.2.0 py39h06a4308_0 sip 4.19.13 py39h295c915_0 six 1.16.0 pyhd3eb1b0_1 smart_open 5.1.0 pyhd3eb1b0_0 snappy 1.1.9 h295c915_0 sniffio 1.2.0 py39h06a4308_1 snowballstemmer 2.2.0 pyhd3eb1b0_0 sortedcollections 2.1.0 pyhd3eb1b0_0 sortedcontainers 2.4.0 pyhd3eb1b0_0 soupsieve 2.3.1 pyhd3eb1b0_0 sphinx 4.4.0 pyhd3eb1b0_0 sphinxcontrib-applehelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-devhelp 1.0.2 pyhd3eb1b0_0 sphinxcontrib-htmlhelp 2.0.0 pyhd3eb1b0_0 sphinxcontrib-jsmath 1.0.1 pyhd3eb1b0_0 sphinxcontrib-qthelp 1.0.3 pyhd3eb1b0_0 sphinxcontrib-serializinghtml 1.1.5 pyhd3eb1b0_0 spyder 5.1.5 py39h06a4308_1 spyder-kernels 2.1.3 py39h06a4308_0 sqlalchemy 1.4.32 py39h7f8727e_0 sqlite 3.38.2 hc218d9a_0 stack_data 0.2.0 pyhd3eb1b0_0 statsmodels 0.13.2 py39h7f8727e_0 sympy 1.10.1 py39h06a4308_0 tabulate 0.8.9 py39h06a4308_0 tbb 2021.5.0 hd09550d_0 tbb4py 2021.5.0 py39hd09550d_0 tblib 1.7.0 pyhd3eb1b0_0 tenacity 8.0.1 py39h06a4308_0 terminado 0.13.1 py39h06a4308_0 testpath 0.5.0 pyhd3eb1b0_0 text-unidecode 1.3 pyhd3eb1b0_0 textdistance 4.2.1 pyhd3eb1b0_0 threadpoolctl 2.2.0 pyh0d69192_0 three-merge 0.1.1 pyhd3eb1b0_0 tifffile 2021.7.2 pyhd3eb1b0_2 tinycss 0.4 pyhd3eb1b0_1002 tk 8.6.11 h1ccaba5_0 tldextract 3.2.0 pyhd3eb1b0_0 toml 0.10.2 pyhd3eb1b0_0 tomli 1.2.2 pyhd3eb1b0_0 toolz 0.11.2 pyhd3eb1b0_0 tornado 6.1 py39h27cfd23_0 tqdm 4.64.0 py39h06a4308_0 traitlets 5.1.1 pyhd3eb1b0_0 twisted 22.2.0 py39h7f8727e_0 typed-ast 1.4.3 py39h7f8727e_1 typing-extensions 4.1.1 hd3eb1b0_0 typing_extensions 4.1.1 pyh06a4308_0 tzdata 2022a hda174b7_0 ujson 5.1.0 py39h295c915_0 unidecode 1.2.0 pyhd3eb1b0_0 unixodbc 2.3.9 h7b6447c_0 urllib3 1.26.9 py39h06a4308_0 w3lib 1.21.0 pyhd3eb1b0_0 watchdog 2.1.6 py39h06a4308_0 wcwidth 0.2.5 pyhd3eb1b0_0 webencodings 0.5.1 py39h06a4308_1 websocket-client 0.58.0 py39h06a4308_4 werkzeug 2.0.3 pyhd3eb1b0_0 wget 1.21.3 h0b77cf5_0 wheel 0.37.1 pyhd3eb1b0_0 widgetsnbextension 3.5.2 py39h06a4308_0 wrapt 1.12.1 py39he8ac12f_1 wurlitzer 3.0.2 py39h06a4308_0 xarray 0.20.1 pyhd3eb1b0_1 xlrd 2.0.1 pyhd3eb1b0_0 xlsxwriter 3.0.3 pyhd3eb1b0_0 xz 5.2.5 h7b6447c_0 yaml 0.2.5 h7b6447c_0 yapf 0.31.0 pyhd3eb1b0_0 yarl 1.6.3 py39h27cfd23_0 zeromq 4.3.4 h2531618_0 zfp 0.5.5 h295c915_6 zict 2.0.0 pyhd3eb1b0_0 zipp 3.7.0 pyhd3eb1b0_0 zlib 1.2.12 h7f8727e_2 zope 1.0 py39h06a4308_1 zope.interface 5.4.0 py39h7f8727e_0 zstd 1.4.9 haebb681_0 (base) . conda activate echo Conda Check # test for a kernel installation test=&quot;jupyter&quot; # keyword check=`conda list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi conda deactivate . (base) Conda Check (base) (base) (base) (base) (base) (base) jupyter 1.0.0 py39h06a4308_7 jupyter_client 6.1.12 pyhd3eb1b0_0 jupyter_console 6.4.0 pyhd3eb1b0_0 jupyter_core 4.9.2 py39h06a4308_0 jupyter_server 1.13.5 pyhd3eb1b0_0 jupyterlab 3.3.2 pyhd3eb1b0_0 jupyterlab_pygments 0.1.2 py_0 jupyterlab_server 2.10.3 pyhd3eb1b0_1 jupyterlab_widgets 1.0.0 pyhd3eb1b0_1 (base) . conda activate jupyter --version jupyter kernelspec list conda deactivate . (base) Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 (base) Available kernels: python3 /root/anaconda3/share/jupyter/kernels/python3 bash /usr/local/share/jupyter/kernels/bash (base) . conda activate test=&quot;python3&quot; # keyword check=`jupyter kernelspec list | grep $test` # run command n=${#check} # determine length if [[ ${n} &gt; 0 ]]; # testt length then # greater than zero echo &quot;$check&quot; else # less than zero echo &quot;$test not found&quot; fi conda deactivate . (base) (base) (base) (base) (base) python3 /root/anaconda3/share/jupyter/kernels/python3 (base) .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/jupyter/bash/week1hacks/2022/08/25/bash.html",
            "relUrl": "/jupyter/bash/week1hacks/2022/08/25/bash.html",
            "date": " ‚Ä¢ Aug 25, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "My Very First Markdown Post!",
            "content": "I am hoping to improve my understanding of various concepts in this class and be able to make more of these posts showing my progress. .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/markdown/week0hacks/2022/08/20/first-post.html",
            "relUrl": "/markdown/week0hacks/2022/08/20/first-post.html",
            "date": " ‚Ä¢ Aug 20, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Emaad's First Jupyter Notebook",
            "content": "msg = &quot;Welcome to Jupyter Notebooks!&quot; print(msg) . Welcome to Jupyter Notebooks! . My Cool Calculator! . With this calculator, you put in two numbers of your choice. After inputting the numbers, you can see the sum, difference, product, and quotient of those two numbers! I inputted the numbers 1,000,000 and 35,726 to get the sum, difference, product, and quotient of those two numbers. . print(&quot;This calculator tells you the sum, difference, product, and quotient of two numbers that you enter.&quot;) # Takes user&#39;s first number print(&quot;Please enter your first number:&quot;) first=float(input(&quot;Number 1:&quot;)) print(first) # prints out the number put in by user # Takes user&#39;s second number print(&quot;Please enter your second number:&quot;) second=float(input(&quot;Number 2:&quot;)) print(second) # prints out the number put in by user print(&quot;Sum=&quot;,first+second) # prints sum print(&quot;Difference=&quot;,first-second) # prints difference print(&quot;Product=&quot;,first*second) # prints product print(&quot;Quotient=&quot;,first/second) # prints quotient . This calculator tells you the sum, difference, product, and quotient of two numbers that you enter. Please enter your first number: 1000000.0 Please enter your second number: 35726.0 Sum= 1035726.0 Difference= 964274.0 Product= 35726000000.0 Quotient= 27.990819011364273 .",
            "url": "https://emaad-mir.github.io/emaad-fastpages/jupyter/python/week0hacks/2022/08/20/first-nb.html",
            "relUrl": "/jupyter/python/week0hacks/2022/08/20/first-nb.html",
            "date": " ‚Ä¢ Aug 20, 2022"
        }
        
    
  

  
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "Hello, my name is Emaad Mir and I am completely new to computer science. I am hoping that with time, I will be able to improve my skills in this field of study. Thanks for reading! . .",
          "url": "https://emaad-mir.github.io/emaad-fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  

  
  

  

  
  

  

  

  
  

  
  

  

  
  

  
      ,"page14": {
          "title": "",
          "content": "Sitemap: {{ ‚Äúsitemap.xml‚Äù | absolute_url }} | .",
          "url": "https://emaad-mir.github.io/emaad-fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}